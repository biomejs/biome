---
import { Image } from "astro:assets";
import { type CollectionEntry, getEntry } from "astro:content";
import "@/styles/blog/index.scss";

export interface Props {
	post: CollectionEntry<"blog">["data"];
}

async function getAuthorsData(
	authors: CollectionEntry<"authors">["id"][],
): Promise<CollectionEntry<"authors">[]> {
	const authorsData = await Promise.all(
		authors.map((author) => getEntry("authors", author)),
	);
	return authorsData;
}

const { post } = Astro.props;
const authors = await getAuthorsData(
	post.authors as CollectionEntry<"authors">["id"][],
);
---

<div class="blog-info">
  <span class="avatar-stack">
    {
      authors.map(({ data: author }) => (
        <span class="avatar">
          <Image src={author.avatar} alt="" height="36" width="36" loading="eager" />
        </span>
      ))
    }
  </span>

  <div class="author-list">
    {
      authors.map((author, index) => (
        <>
          {author.data.url ? (
            <a href={author.data.url}>
              <span>{author.data.name}</span>
            </a>
          ) : (
            <span>{author.data.name}</span>
          )}
          {authors.length > 1 && index + 1 == authors.length - 1 ? " & " : ""}
          {authors.length > 1 && index + 1 < authors.length - 1 ? ", " : ""}
        </>
      ))
    }
  </div>

  <time datetime={post.pubDate.toString()}
    >{
      post.pubDate.toLocaleDateString(undefined, {
        year: "numeric",
        month: "long",
        day: "numeric",
        timeZone: "UTC",
      })
    }</time
  >
</div>
