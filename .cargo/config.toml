[alias]
bench_analyzer = "run -p xtask_bench --release -- --feature analyzer"
bench_formatter = "run -p xtask_bench --release -- --feature formatter"
bench_parser = "run -p xtask_bench --release -- --feature parser"
biome-cli = "run -p biome_cli --release --"
biome-cli-dev = "run -p biome_cli --"
codegen = "run -p xtask_codegen --"
codegen-bindings = "run -p xtask_codegen --features schema -- bindings"
codegen-configuration = "run -p xtask_codegen --features configuration -- configuration"
codegen-schema = "run -p xtask_codegen --features schema -- schema"
codegen-website = "run -p xtask_codegen --features website -- website"
contributors = "run -p xtask_contributors --"
coverage = "run -p xtask_coverage --profile=release-with-debug --"
documentation = """
    doc \
    -p biome_*formatter \
    -p biome_control_flow \
    -p biome_analyze \
    -p biome_*analyze \
    -p biome_*_syntax \
    -p biome_*_factory \
    -p biome_diagnostics \
    -p biome_service \
    -p biome_cli \
    -p biome_console \
    -p biome_*parser \
    -p biome_text_edit \
    -p biome_text_size \
    -p biome_js_semantic \
    -p biome_markup \
    -p biome_rowan
    --no-deps
"""
format = "fmt --all --verbose"
lint = "clippy --workspace --all-targets --verbose -- --deny warnings"
lintdoc = "run -p xtask_lintdoc --"

[target.'cfg(all())']
rustflags = [
  # CLIPPY LINT SETTINGS
  # This is a workaround to configure lints for the entire workspace.
  # See: `https://github.com/rust-lang/cargo/issues/5034`

  "-Wclippy::cargo",
  "-Aclippy::cargo_common_metadata",
  "-Aclippy::multiple_crate_versions",

  # pedantic
  "-Wclippy::dbg_macro",
  "-Wclippy::checked_conversions",
  "-Wclippy::cloned_instead_of_copied",
  "-Wclippy::copy_iterator",
  "-Wclippy::empty_enum",
  "-Wclippy::expl_impl_clone_on_copy",
  "-Wclippy::explicit_into_iter_loop",
  "-Wclippy::fn_params_excessive_bools",
  "-Wclippy::filter_map_next",
  "-Wclippy::flat_map_option",
  "-Wclippy::from_iter_instead_of_collect",
  "-Wclippy::implicit_clone",
  "-Wclippy::implicit_hasher",
  "-Wclippy::index_refutable_slice",
  "-Wclippy::inefficient_to_string",
  "-Wclippy::invalid_upcast_comparisons",
  "-Wclippy::iter_not_returning_iterator",
  "-Wclippy::large_stack_arrays",
  "-Wclippy::large_types_passed_by_value",
  "-Wclippy::macro_use_imports",
  "-Wclippy::manual_ok_or",
  "-Wclippy::manual_string_new",
  "-Wclippy::mismatching_type_param_order",
  "-Wclippy::mut_mut",
  "-Wclippy::naive_bytecount",
  "-Wclippy::needless_bitwise_bool",
  "-Wclippy::needless_continue",
  "-Wclippy::needless_for_each",
  "-Wclippy::no_effect_underscore_binding",
  "-Wclippy::ref_binding_to_reference",
  "-Wclippy::ref_option_ref",
  "-Wclippy::stable_sort_primitive",
  "-Wclippy::unnecessary_box_returns",
  "-Wclippy::unnecessary_box_returns",
  "-Wclippy::unnecessary_join",
  "-Wclippy::unnested_or_patterns",
  "-Wclippy::verbose_bit_mask",
  "-Wclippy::unreadable_literal",
  "-Wclippy::zero_sized_map_values",
]

[profile.release]
lto = true
