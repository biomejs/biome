import tsPlugin from "@typescript-eslint/eslint-plugin";
import parser from "@typescript-eslint/parser";

export default [{
	files: ["**/*.js", "**/*.ts", "**/*.jsx", "**/*.tsx"],
	languageOptions: {
		parser,
		parserOptions: {
		  	ecmaFeatures: { modules: true },
		  	ecmaVersion: 'latest',
		  	project: './bench.tsconfig.json',
		},
	},
	plugins: {
		'@typescript-eslint': tsPlugin,
	},
	rules: {
		// Biome complexity
		"no-extra-boolean-cast": "error",
		"no-regex-spaces": "error",
		"no-useless-catch": "error",
		"no-useless-constructor": "error",
		"no-extra-label": "error",
		"no-useless-rename": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "error",
		"no-with": "error",
		"dot-notation": "error",
		"@typescript-eslint/prefer-optional-chain": "error",

		// Biome correctness
		"no-const-assign": "error",
		"no-constructor-return": "error",
        "no-empty-pattern": "error",
        "no-obj-calls": "error",
        "no-inner-declarations": "error",
        "constructor-super": "error",
        "no-new-symbol": "error",
        "no-loss-of-precision": "error",
        "no-setter-return": "error",
        "no-case-declarations": "error",
        "no-undef": "error",
        "no-unreachable": "error",
        "no-this-before-super": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-labels": "error",
		"use-isnan": "error",
        "no-unused-vars": "error",
        "for-direction": "error",
        "require-yield": "error",

		// Biome style
		"prefer-rest-params": "error",
		"no-sequences": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "no-param-reassign": "error",
        "@typescript-eslint/parameter-properties": [
			"error", { "prefer": "class-property" }
		],
        "no-var": "error",
        "prefer-const": "error",
        "default-param-last": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "prefer-exponentiation-operator": "error",
        "prefer-numeric-literals": "error",
        "@typescript-eslint/array-type": "error",
        "one-var": "error",
        "prefer-template": "error",

		// Biome suspicious
		"no-async-promise-executor": "error",
		"no-cond-assign": "error",
		"no-ex-assign": "error",
		"no-class-assign": "error",
		"no-compare-neg-zero": "error",
		"no-labels": "error",
		"no-debugger": "error",
		"eqeqeq": "error",
		"no-duplicate-case": "error",
		"no-dupe-class-members": "error",
		"no-dupe-keys": "error",
		"no-dupe-args": "error",
		"@typescript-eslint/no-empty-interface": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"no-func-assign": "error",
		"no-import-assign": "error",
		"no-label-var": "error",
		"no-prototype-builtins": "error",
		"no-redeclare": "error",
		"no-self-compare": "error",
		"no-shadow-restricted-names": "error",
		"no-sparse-arrays": "error",
		"no-unsafe-negation": "error",
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"valid-typeof": "error",

		// Biome nursery
		"@typescript-eslint/ban-types": "error",
		"no-constant-condition": "error",
		"no-control-regex": "error",
		"no-fallthrough": "error",
		"no-nonoctal-decimal-escape": "error",
		"no-self-assign": "error",
		"@typescript-eslint/no-extraneous-class": "error",
		"@typescript-eslint/no-unsafe-declaration-merging": "error",
		"@typescript-eslint/no-useless-empty-export": "error",
		"no-void": "error",
		"getter-return": "error",
		"@typescript-eslint/prefer-literal-enum-member": "error",
		"@typescript-eslint/naming-convention": "error",
	},
}];
