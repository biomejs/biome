name: Benchmarks GraphQL

on:
  workflow_dispatch:
  pull_request:
    types: [ opened, synchronize ]
    branches:
      - main
      - next
    paths:
      - 'Cargo.lock'
      - 'crates/biome_graphql_formatter/**/*.rs'
      - 'crates/biome_graphql_parser/**/*.rs'
      - 'crates/biome_graphql_*/**/*.rs'
      - 'crates/biome_rowan/**/*.rs'
      - 'crates/biome_parser/**/*.rs'
  push:
    branches:
      - main
      - next
    paths:
      - 'Cargo.lock'
      - 'crates/biome_graphql_formatter/**/*.rs'
      - 'crates/biome_graphql_parser/**/*.rs'
      - 'crates/biome_graphql_*/**/*.rs'
      - 'crates/biome_rowan/**/*.rs'
      - 'crates/biome_parser/**/*.rs'

env:
  RUST_LOG: info

jobs:
  bench:
    permissions:
      pull-requests: write
    name: Bench
    runs-on: depot-ubuntu-24.04-arm-16
    strategy:
      matrix:
        package:
          - biome_graphql_parser
          - biome_graphql_formatter

    steps:

      - name: Checkout PR Branch
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          ref: ${{ steps.sha.outputs.result }}

      - name: Install toolchain
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          channel: stable
          cache-target: release
          bins: cargo-codspeed
          cache-base: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile
        timeout-minutes: 20
        run: cargo codspeed build -p ${{ matrix.package }}
        env:
          CARGO_BUILD_JOBS: 3  # Default is 4 (equals to the vCPU count of the runner), which leads OOM on cargo build

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@76578c2a7ddd928664caa737f0e962e3085d4e7c # v3.8.1
        timeout-minutes: 50
        with:
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}
