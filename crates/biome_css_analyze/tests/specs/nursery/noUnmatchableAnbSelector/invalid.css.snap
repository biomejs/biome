---
source: crates/biome_css_analyze/tests/spec_tests.rs
expression: invalid.css
---
# Input
```css
a:nth-child(0) {}
a:nth-child(0n) {}
a:nth-child(+0n) {}
a:nth-child(-0n) {}
a:nth-child(0n+0) {}
a:nth-child(0n-0) {}
a:nth-child(-0n-0) {}
a:nth-child(0 of a) {}
a:nth-child(0), a:nth-child(1) {}
a:nth-last-child(0) {}
a:nth-of-type(0) {}
a:nth-last-of-type(0) {}
a:nth-child(0n):nth-child(-n+5) {}
a:nth-last-child(0),a:nth-last-child(n+5) ~ li {}

```

# Diagnostics
```
invalid.css:1:13 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
  > 1 │ a:nth-child(0) {}
      │             ^
    2 │ a:nth-child(0n) {}
    3 │ a:nth-child(+0n) {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:2:13 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
    1 │ a:nth-child(0) {}
  > 2 │ a:nth-child(0n) {}
      │             ^^
    3 │ a:nth-child(+0n) {}
    4 │ a:nth-child(-0n) {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:3:13 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
    1 │ a:nth-child(0) {}
    2 │ a:nth-child(0n) {}
  > 3 │ a:nth-child(+0n) {}
      │             ^^^
    4 │ a:nth-child(-0n) {}
    5 │ a:nth-child(0n+0) {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:4:13 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
    2 │ a:nth-child(0n) {}
    3 │ a:nth-child(+0n) {}
  > 4 │ a:nth-child(-0n) {}
      │             ^^^
    5 │ a:nth-child(0n+0) {}
    6 │ a:nth-child(0n-0) {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:8:13 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
     6 │ a:nth-child(0n-0) {}
     7 │ a:nth-child(-0n-0) {}
   > 8 │ a:nth-child(0 of a) {}
       │             ^^^^^^
     9 │ a:nth-child(0), a:nth-child(1) {}
    10 │ a:nth-last-child(0) {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:9:13 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
     7 │ a:nth-child(-0n-0) {}
     8 │ a:nth-child(0 of a) {}
   > 9 │ a:nth-child(0), a:nth-child(1) {}
       │             ^
    10 │ a:nth-last-child(0) {}
    11 │ a:nth-of-type(0) {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:10:18 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
     8 │ a:nth-child(0 of a) {}
     9 │ a:nth-child(0), a:nth-child(1) {}
  > 10 │ a:nth-last-child(0) {}
       │                  ^
    11 │ a:nth-of-type(0) {}
    12 │ a:nth-last-of-type(0) {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:11:15 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
     9 │ a:nth-child(0), a:nth-child(1) {}
    10 │ a:nth-last-child(0) {}
  > 11 │ a:nth-of-type(0) {}
       │               ^
    12 │ a:nth-last-of-type(0) {}
    13 │ a:nth-child(0n):nth-child(-n+5) {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:12:20 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
    10 │ a:nth-last-child(0) {}
    11 │ a:nth-of-type(0) {}
  > 12 │ a:nth-last-of-type(0) {}
       │                    ^
    13 │ a:nth-child(0n):nth-child(-n+5) {}
    14 │ a:nth-last-child(0),a:nth-last-child(n+5) ~ li {}
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:13:13 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
    11 │ a:nth-of-type(0) {}
    12 │ a:nth-last-of-type(0) {}
  > 13 │ a:nth-child(0n):nth-child(-n+5) {}
       │             ^^
    14 │ a:nth-last-child(0),a:nth-last-child(n+5) ~ li {}
    15 │ 
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```

```
invalid.css:14:18 lint/nursery/noUnmatchableAnbSelector ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This selector will never match any elements.
  
    12 │ a:nth-last-of-type(0) {}
    13 │ a:nth-child(0n):nth-child(-n+5) {}
  > 14 │ a:nth-last-child(0),a:nth-last-child(n+5) ~ li {}
       │                  ^
    15 │ 
  
  i Avoid using An+B selectors that always evaluate to 0.
  
  i For more details, see the official spec for An+B selectors.
  

```
