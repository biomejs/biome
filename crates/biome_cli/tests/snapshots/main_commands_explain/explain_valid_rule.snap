---
source: crates/biome_cli/tests/snap_test.rs
expression: redactor(content)
---
# Emitted Messages

```block
Summary

- Name: noBlankTarget
- Fix: safe
- Default severity: error
- Available from version: 1.0.0
- This rule is recommended

Description

 Disallow `target="_blank"` attribute without `rel="noopener"`.

 When creating an anchor `a` element, there are times when its link has
 to be opened in a new browser tab via the `target="_blank"` attribute.
 This attribute has to be paired with `rel="noopener"` or you may run
 into security issues.

 See to the [`noopener` documentation](https://html.spec.whatwg.org/multipage/links.html#link-type-noopener).

Examples

Invalid

 ```jsx,expect_diagnostic
 <a href='http://external.link' target='_blank'>child</a>
 ```

 ```jsx,expect_diagnostic
 <a href='http://external.link' target='_blank' rel='nofollow'>child</a>
 ```

 ```jsx,expect_diagnostic
 <a {...props} href='http://external.link' target='_blank' rel='nofollow'>child</a>
 ```

Valid

 ```jsx
 <a href='http://external.link' rel='noopener' target='_blank'>child</a>
 ```

 ```jsx
 <a href='http://external.link' rel='noreferrer' target='_blank'>child</a>
 ```

 ```jsx
 // The rule accepts elements with spread props, because the required
 // attribute may be injected dynamically:
 <a href='http://external.link' target='_blank' {...props}>child</a>
 ```

Options

`allowNoReferrer`

 By default, `noBlankTarget` accepts both `rel="noopener"` and
 `rel="noreferrer"` with links that have `target="_blank"`. This is
 because the latter _implies_ the former, so either one is sufficient to
 mitigate the security risk.

 However, allowing `rel="noreferrer"` may still be undesirable, because
 it can break tracking, which may be an undesirable side-effect. As such,
 you can set `allowNoReferrer: false` to _only_ accept `rel="noopener"`.

 See to the [`noreferrer` documentation](https://html.spec.whatwg.org/multipage/links.html#link-type-noreferrer).


 ```json,options
 {
     "options": {
         "allowNoReferrer": false
     }
 }
 ```

 ```jsx,use_options,expect_diagnostic
 <a href='http://external.link' rel='noreferrer' target='_blank'>child</a>
 ```

 Default: `true`

`allowDomains`

 The option `allowDomains` allows specific domains to use
 `target="_blank"` without `rel="noopener"`. In the following
 configuration, it's allowed to use the domains `https://example.com` and
 `example.org`:

 ```json,options
 {
     "options": {
         "allowDomains": ["https://example.com", "example.org"]
     }
 }
 ```

 ```jsx,use_options
 <>
   <a target='_blank' testme href='https://example.com'></a>
   <a target='_blank' href='example.org'></a>
 </>
 ```

 The diagnostic is applied to all domains not in the allow list:

 ```json,options
 {
     "options": {
         "allowDomains": ["https://example.com"]
     }
 }
 ```

 ```jsx,expect_diagnostic,use_options
 <>
   <a target='_blank' testme href='https://example.com'></a>
   <a target='_blank' href='example.org'></a>
 </>
 ```
 Biome doesn't check if the list contains valid URLs.

```
