---
source: crates/biome_cli/tests/snap_test.rs
expression: redactor(content)
snapshot_kind: text
---
## `index.ts`

```ts
import { z} from "z"
import { z, b , a} from "lodash"

a ==b

debugger

let f;
		let f;
```

## `main.ts`

```ts
import { z} from "z"
import { z, b , a} from "lodash"

a ==b

debugger

let f;
		let f;
```

# Termination Message

```block
ci ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Some errors were emitted while running checks.
  


```

# Emitted Messages

```block
::notice title=assist/source/organizeImports,file=index.ts,line=1,endLine=1,col=1,endColumn=21::The imports and exports are not sorted.
```

```block
::error title=lint/suspicious/noDoubleEquals,file=index.ts,line=4,endLine=4,col=3,endColumn=5::Using == may be unsafe if you are relying on type coercion.
```

```block
::error title=lint/suspicious/noDebugger,file=index.ts,line=6,endLine=6,col=1,endColumn=9::This is an unexpected use of the debugger statement.
```

```block
::error title=lint/suspicious/noImplicitAnyLet,file=index.ts,line=8,endLine=8,col=5,endColumn=6::This variable implicitly has the any type.
```

```block
::error title=lint/suspicious/noImplicitAnyLet,file=index.ts,line=9,endLine=9,col=7,endColumn=8::This variable implicitly has the any type.
```

```block
::error title=lint/suspicious/noRedeclare,file=index.ts,line=2,endLine=2,col=10,endColumn=11::Shouldn't redeclare 'z'. Consider to delete it or rename it.
```

```block
::error title=lint/suspicious/noRedeclare,file=index.ts,line=9,endLine=9,col=7,endColumn=8::Shouldn't redeclare 'f'. Consider to delete it or rename it.
```

```block
::error title=format,file=index.ts,line=1,endLine=1,col=2,endColumn=2::File content differs from formatting output
```

```block
::notice title=assist/source/organizeImports,file=main.ts,line=1,endLine=1,col=1,endColumn=21::The imports and exports are not sorted.
```

```block
::error title=lint/suspicious/noDoubleEquals,file=main.ts,line=4,endLine=4,col=3,endColumn=5::Using == may be unsafe if you are relying on type coercion.
```

```block
::error title=lint/suspicious/noDebugger,file=main.ts,line=6,endLine=6,col=1,endColumn=9::This is an unexpected use of the debugger statement.
```

```block
::error title=lint/suspicious/noImplicitAnyLet,file=main.ts,line=8,endLine=8,col=5,endColumn=6::This variable implicitly has the any type.
```

```block
::error title=lint/suspicious/noImplicitAnyLet,file=main.ts,line=9,endLine=9,col=7,endColumn=8::This variable implicitly has the any type.
```

```block
::error title=lint/suspicious/noRedeclare,file=main.ts,line=2,endLine=2,col=10,endColumn=11::Shouldn't redeclare 'z'. Consider to delete it or rename it.
```

```block
::error title=lint/suspicious/noRedeclare,file=main.ts,line=9,endLine=9,col=7,endColumn=8::Shouldn't redeclare 'f'. Consider to delete it or rename it.
```

```block
::error title=format,file=main.ts,line=1,endLine=1,col=2,endColumn=2::File content differs from formatting output
```
