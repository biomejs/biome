---
source: crates/biome_cli/tests/snap_test.rs
expression: content
---
# Emitted Messages

```block
Runs formatter, linter and import sorting to the requested files.

Usage: check [--apply] [--apply-unsafe] [--staged] [--changed] [--since=REF] [PATH]...

The configuration that is contained inside the file `biome.json`
        --vcs-client-kind=<git>  The kind of client.
        --vcs-enabled=<true|false>  Whether Biome should integrate itself with the VCS client
        --vcs-use-ignore-file=<true|false>  Whether Biome should use the VCS ignore file. When [true],
                              Biome will ignore the files specified in the ignore file.
        --vcs-root=PATH       The folder where Biome should check for VCS files. By default, Biome will
                              use the same folder where `biome.json` was found.
                              If Biome can't find the configuration, it will attempt to use the current
                              working directory. If no current working directory can't be found, Biome
                              won't use the VCS integration, and a diagnostic will be emitted
        --vcs-default-branch=BRANCH  The main branch of the project
        --files-max-size=NUMBER  The maximum allowed size for source code files in bytes. Files above
                              this limit will be ignored for performance reasons. Defaults to 1 MiB
        --files-ignore-unknown=<true|false>  Tells Biome to not emit diagnostics when handling files
                              that doesn't know
        --indent-style=<tab|space>  The indent style.
        --indent-size=NUMBER  The size of the indentation, 2 by default (deprecated, use `indent-width`)
        --indent-width=NUMBER  The size of the indentation, 2 by default
        --line-ending=<lf|crlf|cr>  The type of line ending.
        --line-width=NUMBER   What's the max width of a line. Defaults to 80.
        --attribute-position=<multiline|auto>  The attribute position style in HTMLish languages. By
                              default auto.
        --jsx-quote-style=<double|single>  The type of quotes used in JSX. Defaults to double.
        --quote-properties=<preserve|as-needed>  When properties in objects are quoted. Defaults to asNeeded.
        --trailing-comma=<all|es5|none>  Print trailing commas wherever possible in multi-line comma-separated
                              syntactic structures. Defaults to "all".
        --trailing-commas=<all|es5|none>  Print trailing commas wherever possible in multi-line comma-separated
                              syntactic structures. Defaults to "all".
        --semicolons=<always|as-needed>  Whether the formatter prints semicolons for all statements or
                              only in for statements where it is necessary because of ASI.
        --arrow-parentheses=<always|as-needed>  Whether to add non-necessary parentheses to arrow functions.
                              Defaults to "always".
        --bracket-spacing=<true|false>  Whether to insert spaces around brackets in object literals.
                              Defaults to true.
        --bracket-same-line=<true|false>  Whether to hug the closing bracket of multiline HTML/JSX tags
                              to the end of the last line, rather than being alone on the following line.
                              Defaults to false.
        --javascript-formatter-enabled=<true|false>  Control the formatter for JavaScript (and its super
                              languages) files.
        --javascript-formatter-indent-style=<tab|space>  The indent style applied to JavaScript (and
                              its super languages) files.
        --javascript-formatter-indent-size=NUMBER  The size of the indentation applied to JavaScript
                              (and its super languages) files. Default to 2.
        --javascript-formatter-indent-width=NUMBER  The size of the indentation applied to JavaScript
                              (and its super languages) files. Default to 2.
        --javascript-formatter-line-ending=<lf|crlf|cr>  The type of line ending applied to JavaScript
                              (and its super languages) files.
        --javascript-formatter-line-width=NUMBER  What's the max width of a line applied to JavaScript
                              (and its super languages) files. Defaults to 80.
        --quote-style=<double|single>  The type of quotes used in JavaScript code. Defaults to double.
        --javascript-attribute-position=<multiline|auto>  The attribute position style in jsx elements.
                              Defaults to auto.
        --json-formatter-enabled=<true|false>  Control the formatter for JSON (and its super languages)
                              files.
        --json-formatter-indent-style=<tab|space>  The indent style applied to JSON (and its super languages)
                              files.
        --json-formatter-indent-width=NUMBER  The size of the indentation applied to JSON (and its super
                              languages) files. Default to 2.
        --json-formatter-indent-size=NUMBER  The size of the indentation applied to JSON (and its super
                              languages) files. Default to 2.
        --json-formatter-line-ending=<lf|crlf|cr>  The type of line ending applied to JSON (and its super
                              languages) files.
        --json-formatter-line-width=NUMBER  What's the max width of a line applied to JSON (and its super
                              languages) files. Defaults to 80.
        --json-formatter-trailing-commas=<none|all>  Print trailing commas wherever possible in multi-line
                              comma-separated syntactic structures. Defaults to "none".

Global options applied to all commands
        --colors=<off|force>  Set the formatting mode for markup: "off" prints everything as plain text,
                              "force" forces the formatting of markup using ANSI even if the console
                              output is determined to be incompatible
        --use-server          Connect to a running instance of the Biome daemon server.
        --verbose             Print additional diagnostics, and some diagnostics show more information.
        --config-path=PATH    Set the file path to the configuration file, or the directory path to find
                              `biome.json` or `biome.jsonc`. If used, it disables the default configuration
                              file resolution.
        --max-diagnostics=NUMBER  Cap the amount of diagnostics displayed.
                              [default: 20]
        --skip-errors         Skip over files containing syntax errors instead of emitting an error diagnostic.
        --no-errors-on-unmatched  Silence errors that would be emitted in case no files were processed
                              during the execution of the command.
        --error-on-warnings   Tell Biome to exit with an error code if some diagnostics emit warnings.
        --reporter=<json|json-pretty|summary>  Allows to change how diagnostics and summary are reported.
        --log-level=<none|debug|info|warn|error>  The level of logging. In order, from the most verbose
                              to the least verbose: debug, info, warn, error.
                              The value `none` won't show any logging.
                              [default: none]
        --log-kind=<pretty|compact|json>  How the log should look like.
                              [default: pretty]
        --diagnostic-level=<info|warn|error>  The level of diagnostics to show. In order, from the lowest
                              to the most important: info, warn, error. Passing `--diagnostic-level=error`
                              will cause Biome to print only diagnostics that contain only errors.
                              [default: info]

Available positional items:
    PATH                      Single file, single path or list of paths

Available options:
        --apply               Apply safe fixes, formatting and import sorting
        --apply-unsafe        Apply safe fixes and unsafe fixes, formatting and import sorting
        --formatter-enabled=<true|false>  Allow to enable or disable the formatter check.
        --linter-enabled=<true|false>  Allow to enable or disable the linter check.
        --organize-imports-enabled=<true|false>  Allow to enable or disable the organize imports.
        --stdin-file-path=PATH  Use this option when you want to format code piped from `stdin`, and
                              print the output to `stdout`.
                              The file doesn't need to exist on disk, what matters is the extension of
                              the file. Based on the extension, Biome knows how to check the code.
                              Example: `echo 'let a;' | biome check --stdin-file-path=file.js`
        --staged              When set to true, only the files that have been staged (the ones prepared
                              to be committed) will be linted.
        --changed             When set to true, only the files that have been changed compared to your
                              `defaultBranch` configuration will be linted.
        --since=REF           Use this to specify the base branch to compare against when you're using
                              the --changed flag and the `defaultBranch` is not set in your biome.json
    -h, --help                Prints help information

```
