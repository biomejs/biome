---
source: crates/biome_js_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```ts
type T = import;
type U = typeof import;

```


## AST

```
JsModule {
    bom_token: missing (optional),
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@0..5 "type" [] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@5..7 "T" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@7..9 "=" [] [Whitespace(" ")],
            ty: TsImportType {
                typeof_token: missing (optional),
                import_token: IMPORT_KW@9..15 "import" [] [],
                arguments: missing (required),
                qualifier_clause: missing (optional),
                type_arguments: missing (optional),
            },
            semicolon_token: SEMICOLON@15..16 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@16..22 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@22..24 "U" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@24..26 "=" [] [Whitespace(" ")],
            ty: TsImportType {
                typeof_token: TYPEOF_KW@26..33 "typeof" [] [Whitespace(" ")],
                import_token: IMPORT_KW@33..39 "import" [] [],
                arguments: missing (required),
                qualifier_clause: missing (optional),
                type_arguments: missing (optional),
            },
            semicolon_token: SEMICOLON@39..40 ";" [] [],
        },
    ],
    eof_token: EOF@40..41 "" [Newline("\n")] [],
}
```

## CST

```
0: JS_MODULE@0..41
  0: (empty)
  1: (empty)
  2: JS_DIRECTIVE_LIST@0..0
  3: JS_MODULE_ITEM_LIST@0..40
    0: TS_TYPE_ALIAS_DECLARATION@0..16
      0: TYPE_KW@0..5 "type" [] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@5..7
        0: IDENT@5..7 "T" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@7..9 "=" [] [Whitespace(" ")]
      4: TS_IMPORT_TYPE@9..15
        0: (empty)
        1: IMPORT_KW@9..15 "import" [] []
        2: (empty)
        3: (empty)
        4: (empty)
      5: SEMICOLON@15..16 ";" [] []
    1: TS_TYPE_ALIAS_DECLARATION@16..40
      0: TYPE_KW@16..22 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@22..24
        0: IDENT@22..24 "U" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@24..26 "=" [] [Whitespace(" ")]
      4: TS_IMPORT_TYPE@26..39
        0: TYPEOF_KW@26..33 "typeof" [] [Whitespace(" ")]
        1: IMPORT_KW@33..39 "import" [] []
        2: (empty)
        3: (empty)
        4: (empty)
      5: SEMICOLON@39..40 ";" [] []
  4: EOF@40..41 "" [Newline("\n")] []

```

## Diagnostics

```
ts_import_type_without_arguments.ts:1:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected '(', but got ';'
  
  > 1 │ type T = import;
      │                ^
    2 │ type U = typeof import;
    3 │ 
  
ts_import_type_without_arguments.ts:2:23 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected '(', but got ';'
  
    1 │ type T = import;
  > 2 │ type U = typeof import;
      │                       ^
    3 │ 
  
```
