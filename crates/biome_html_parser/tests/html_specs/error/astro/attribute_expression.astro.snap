---
source: crates/biome_html_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```astro
---
const foo = "lorem ipsum";
---
<html>
<span id={foo></span>
</html>

```


## AST

```
HtmlRoot {
    bom_token: missing (optional),
    frontmatter: AstroFrontmatterElement {
        l_fence_token: FENCE@0..3 "---" [] [],
        content: AstroEmbeddedContent {
            content_token: HTML_LITERAL@3..31 "const foo = \"lorem ipsum\";\n" [Newline("\n")] [],
        },
        r_fence_token: FENCE@31..34 "---" [] [],
    },
    directive: missing (optional),
    html: HtmlElementList [
        HtmlElement {
            opening_element: HtmlOpeningElement {
                l_angle_token: L_ANGLE@34..36 "<" [Newline("\n")] [],
                name: HtmlTagName {
                    value_token: HTML_LITERAL@36..40 "html" [] [],
                },
                attributes: HtmlAttributeList [],
                r_angle_token: R_ANGLE@40..41 ">" [] [],
            },
            children: HtmlElementList [
                HtmlElement {
                    opening_element: HtmlOpeningElement {
                        l_angle_token: L_ANGLE@41..43 "<" [Newline("\n")] [],
                        name: HtmlTagName {
                            value_token: HTML_LITERAL@43..48 "span" [] [Whitespace(" ")],
                        },
                        attributes: HtmlAttributeList [
                            HtmlBogusAttribute {
                                items: [
                                    HtmlAttributeName {
                                        value_token: HTML_LITERAL@48..50 "id" [] [],
                                    },
                                    HtmlBogus {
                                        items: [
                                            EQ@50..51 "=" [] [],
                                            HtmlBogusTextExpression {
                                                items: [
                                                    L_CURLY@51..52 "{" [] [],
                                                    HTML_LITERAL@52..56 "foo>" [] [],
                                                ],
                                            },
                                        ],
                                    },
                                ],
                            },
                        ],
                        r_angle_token: missing (required),
                    },
                    children: HtmlElementList [],
                    closing_element: HtmlClosingElement {
                        l_angle_token: L_ANGLE@56..57 "<" [] [],
                        slash_token: SLASH@57..58 "/" [] [],
                        name: HtmlTagName {
                            value_token: HTML_LITERAL@58..62 "span" [] [],
                        },
                        r_angle_token: R_ANGLE@62..63 ">" [] [],
                    },
                },
            ],
            closing_element: HtmlClosingElement {
                l_angle_token: L_ANGLE@63..65 "<" [Newline("\n")] [],
                slash_token: SLASH@65..66 "/" [] [],
                name: HtmlTagName {
                    value_token: HTML_LITERAL@66..70 "html" [] [],
                },
                r_angle_token: R_ANGLE@70..71 ">" [] [],
            },
        },
    ],
    eof_token: EOF@71..72 "" [Newline("\n")] [],
}
```

## CST

```
0: HTML_ROOT@0..72
  0: (empty)
  1: ASTRO_FRONTMATTER_ELEMENT@0..34
    0: FENCE@0..3 "---" [] []
    1: ASTRO_EMBEDDED_CONTENT@3..31
      0: HTML_LITERAL@3..31 "const foo = \"lorem ipsum\";\n" [Newline("\n")] []
    2: FENCE@31..34 "---" [] []
  2: (empty)
  3: HTML_ELEMENT_LIST@34..71
    0: HTML_ELEMENT@34..71
      0: HTML_OPENING_ELEMENT@34..41
        0: L_ANGLE@34..36 "<" [Newline("\n")] []
        1: HTML_TAG_NAME@36..40
          0: HTML_LITERAL@36..40 "html" [] []
        2: HTML_ATTRIBUTE_LIST@40..40
        3: R_ANGLE@40..41 ">" [] []
      1: HTML_ELEMENT_LIST@41..63
        0: HTML_ELEMENT@41..63
          0: HTML_OPENING_ELEMENT@41..56
            0: L_ANGLE@41..43 "<" [Newline("\n")] []
            1: HTML_TAG_NAME@43..48
              0: HTML_LITERAL@43..48 "span" [] [Whitespace(" ")]
            2: HTML_ATTRIBUTE_LIST@48..56
              0: HTML_BOGUS_ATTRIBUTE@48..56
                0: HTML_ATTRIBUTE_NAME@48..50
                  0: HTML_LITERAL@48..50 "id" [] []
                1: HTML_BOGUS@50..56
                  0: EQ@50..51 "=" [] []
                  1: HTML_BOGUS_TEXT_EXPRESSION@51..56
                    0: L_CURLY@51..52 "{" [] []
                    1: HTML_LITERAL@52..56 "foo>" [] []
            3: (empty)
          1: HTML_ELEMENT_LIST@56..56
          2: HTML_CLOSING_ELEMENT@56..63
            0: L_ANGLE@56..57 "<" [] []
            1: SLASH@57..58 "/" [] []
            2: HTML_TAG_NAME@58..62
              0: HTML_LITERAL@58..62 "span" [] []
            3: R_ANGLE@62..63 ">" [] []
      2: HTML_CLOSING_ELEMENT@63..71
        0: L_ANGLE@63..65 "<" [Newline("\n")] []
        1: SLASH@65..66 "/" [] []
        2: HTML_TAG_NAME@66..70
          0: HTML_LITERAL@66..70 "html" [] []
        3: R_ANGLE@70..71 ">" [] []
  4: EOF@71..72 "" [Newline("\n")] []

```

## Diagnostics

```
attribute_expression.astro:5:10 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Found a text expression that doesn't have the closing expression:
  
    3 │ ---
    4 │ <html>
  > 5 │ <span id={foo></span>
      │          ^^^^^
    6 │ </html>
    7 │ 
  
  i This is where the opening expression was found:
  
    3 │ ---
    4 │ <html>
  > 5 │ <span id={foo></span>
      │          ^
    6 │ </html>
    7 │ 
  
attribute_expression.astro:5:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected an attribute but instead found '<'.
  
    3 │ ---
    4 │ <html>
  > 5 │ <span id={foo></span>
      │               ^
    6 │ </html>
    7 │ 
  
  i Expected an attribute here.
  
    3 │ ---
    4 │ <html>
  > 5 │ <span id={foo></span>
      │               ^
    6 │ </html>
    7 │ 
  
```
