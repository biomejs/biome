---
source: crates/biome_module_graph/tests/snap/mod.rs
expression: content
snapshot_kind: text
---
## /src/index.ts

```ts
/**
 * @returns {string}
 */
function foo() {}

export { foo, qux };

/** @package */
export function bar() {}

/** @private */
export const quz = {};

/* @ignored because of incorrect amount of asterisks */
export async function baz() {}

var qux = 1;

/**
 * TODO: No types can be detected on these yet.
 */
export const {
	a,
	b,
	c: [d, e],
} = getObject();

/**
 * @public
 * @returns {JSX.Element}
 */
export default function Component(): JSX.Element {}

export * from "./reexports";
export { ohNo as "oh\x0Ano" } from "./renamed-reexports";

/**
 * Hello, namespace 2.
 */
export * as renamed2 from "./renamed-reexports";

```



```
Borrowed("a") => [
  ExportOwnExport => JsOwnExport(
    Unknown
    Local name: a
    JsDoc(
      TODO: No types can be detected on these yet.
    )
  )
]
Borrowed("b") => [
  ExportOwnExport => JsOwnExport(
    Unknown
    Local name: b
    JsDoc(
      TODO: No types can be detected on these yet.
    )
  )
]
Borrowed("bar") => [
  ExportOwnExport => JsOwnExport(
    Function(
      [sync, Name: bar]
      ReturnType(Type(Unknown))
    )
    Local name: bar
    JsDoc(
      @package
    )
  )
]
Borrowed("baz") => [
  ExportOwnExport => JsOwnExport(
    Function(
      [async, Name: baz]
      ReturnType(Type(Promise(Unknown)))
    )
    Local name: baz
  )
]
Borrowed("d") => [
  ExportOwnExport => JsOwnExport(
    Unknown
    Local name: d
    JsDoc(
      TODO: No types can be detected on these yet.
    )
  )
]
Static("default") => [
  ExportOwnExport => JsOwnExport(
    Function(
      [sync, Name: Component]
      ReturnType(
        Type(
          Reference(
            Qualifier(JSX.Element)
            Type(
              Unknown
            )
          )
        )
      )
    )
    Local name: Component
    JsDoc(
      @public
      @returns {JSX.Element}
    )
  )
]
Borrowed("e") => [
  ExportOwnExport => JsOwnExport(
    Unknown
    Local name: e
    JsDoc(
      TODO: No types can be detected on these yet.
    )
  )
]
Borrowed("foo") => [
  ExportOwnExport => JsOwnExport(
    Function(
      [sync, Name: foo]
      ReturnType(Type(Unknown))
    )
    Local name: foo
    JsDoc(
      @returns {string}
    )
  )
]
Owned("oh\nno") => [
  ExportReexport => Reexport(
    Specifier: "./renamed-reexports"
    Resolved path: /src/renamed-reexports.ts
    Import Symbol: ohNo
  )
]
Borrowed("qux") => [
  ExportOwnExport => JsOwnExport(
    Literal(Number: 1)
    Local name: qux
  )
]
Borrowed("quz") => [
  ExportOwnExport => JsOwnExport(
    Unknown
    Local name: quz
    JsDoc(
      @private
    )
  )
]
Borrowed("renamed2") => [
  ExportReexport => Reexport(
    Specifier: "./renamed-reexports"
    Resolved path: /src/renamed-reexports.ts
    Import Symbol: All
    JsDoc(
      Hello, namespace 2.
    )
  )
]

```

## /src/renamed-reexports.ts

```ts
export function ohNo() {}

```



```
Borrowed("ohNo") => [
  ExportOwnExport => JsOwnExport(
    Function(
      [sync, Name: ohNo]
      ReturnType(Type(Unknown))
    )
    Local name: ohNo
  )
]

```

## /src/reexports.ts

```ts
/**
 * Hello, namespace 1.
 */
export * as renamed from "./renamed-reexports";

```



```
Borrowed("renamed") => [
  ExportReexport => Reexport(
    Specifier: "./renamed-reexports"
    Resolved path: /src/renamed-reexports.ts
    Import Symbol: All
    JsDoc(
      Hello, namespace 1.
    )
  )
]

```
