---
source: crates/biome_module_graph/tests/snap/mod.rs
expression: content
---
# `/src/index.ts`

## Source

```ts
class Foo {
	x = "foo";

	nested() {
		const fn = function () {
			return this.x;
		};
		return fn();
	}

	nestedObject() {
		const inner = {
			fn: function () {
				return this.x;
			},
		};
		return inner.fn();
	}
	nestedObject2() {
		const inner = {
			fn() {
				return this.x;
			},
		};
		return inner.fn();
	}

	nestedInArrow = () => {
		const fn = function () {
			return this.x;
		};
		return fn();
	};
}

const obj = new Foo();

const notFoo1 = obj.nested();
const notFoo2 = obj.nestedInArrow();
const notFoo3 = obj.nestedObject();
const notFoo4 = obj.nestedObject2();
```

## Module Info

```
Exports {
  No exports
}
Imports {
  No imports
}
```

## Registered types

```
Module TypeId(0) => instanceof Module(0) TypeId(33)

Module TypeId(1) => Module(0) TypeId(4)

Module TypeId(2) => sync Function {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(1)
}

Module TypeId(3) => Module(0) TypeId(2)

Module TypeId(4) => value: foo

Module TypeId(5) => Object {
  prototype: No prototype
  members: ["fn": Module(0) TypeId(6)]
}

Module TypeId(6) => sync Function {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(9)
}

Module TypeId(7) => Module(0) TypeId(5)

Module TypeId(8) => Module(0) TypeId(6)

Module TypeId(9) => Module(0) TypeId(5).x

Module TypeId(10) => Object {
  prototype: No prototype
  members: ["fn": Module(0) TypeId(11)]
}

Module TypeId(11) => sync Function "fn" {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(14)
}

Module TypeId(12) => Module(0) TypeId(10)

Module TypeId(13) => Module(0) TypeId(11)

Module TypeId(14) => Module(0) TypeId(10).x

Module TypeId(15) => unknown

Module TypeId(16) => sync Function {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(18)
}

Module TypeId(17) => Module(0) TypeId(16)

Module TypeId(18) => Module(0) TypeId(15).x

Module TypeId(19) => sync Function {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(25)
}

Module TypeId(20) => Module(0) TypeId(33)

Module TypeId(21) => instanceof Module(0) TypeId(20)

Module TypeId(22) => Module(0) TypeId(30)

Module TypeId(23) => Module(0) TypeId(1) | Module(0) TypeId(4)

Module TypeId(24) => Module(0) TypeId(19)

Module TypeId(25) => Module(0) TypeId(18) | Module(0) TypeId(18)

Module TypeId(26) => Module(0) TypeId(31)

Module TypeId(27) => Module(0) TypeId(9) | Module(0) TypeId(9)

Module TypeId(28) => Module(0) TypeId(32)

Module TypeId(29) => Module(0) TypeId(14) | Module(0) TypeId(14)

Module TypeId(30) => sync Function "nested" {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(23)
}

Module TypeId(31) => sync Function "nestedObject" {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(27)
}

Module TypeId(32) => sync Function "nestedObject2" {
  accepts: {
    params: []
    type_args: []
  }
  returns: Module(0) TypeId(29)
}

Module TypeId(33) => class "Foo" {
  extends: none
  implements: []
  type_args: []
}
```
