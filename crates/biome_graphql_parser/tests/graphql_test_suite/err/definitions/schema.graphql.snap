---
source: crates/biome_graphql_parser/tests/spec_test.rs
expression: snapshot
---
## Input
```graphql
schema {
  quer: MyQueryRootType
  mutatio: MyMutationRootType
	subscriptio: MySubscriptionRootType
	: MySubscriptionRootType
	8: MySubscriptionRootType
}

schema {
  quer:
}

"sth schema {
  quer:
}

```

## AST

```
GraphqlRoot {
    bom_token: missing (optional),
    definitions: GraphqlDefinitionList [
        GraphqlBogusDefinition {
            items: [
                SCHEMA_KW@0..7 "schema" [] [Whitespace(" ")],
                GraphqlDirectiveList [],
                L_CURLY@7..8 "{" [] [],
                GraphqlBogus {
                    items: [
                        GraphqlBogus {
                            items: [
                                GRAPHQL_NAME@8..15 "quer" [Newline("\n"), Whitespace("  ")] [],
                                COLON@15..17 ":" [] [Whitespace(" ")],
                                GraphqlNamedType {
                                    name: GraphqlName {
                                        value_token: GRAPHQL_NAME@17..32 "MyQueryRootType" [] [],
                                    },
                                },
                            ],
                        },
                        GraphqlBogus {
                            items: [
                                GRAPHQL_NAME@32..42 "mutatio" [Newline("\n"), Whitespace("  ")] [],
                                COLON@42..44 ":" [] [Whitespace(" ")],
                                GraphqlNamedType {
                                    name: GraphqlName {
                                        value_token: GRAPHQL_NAME@44..62 "MyMutationRootType" [] [],
                                    },
                                },
                            ],
                        },
                        GraphqlBogus {
                            items: [
                                GRAPHQL_NAME@62..75 "subscriptio" [Newline("\n"), Whitespace("\t")] [],
                                COLON@75..77 ":" [] [Whitespace(" ")],
                                GraphqlNamedType {
                                    name: GraphqlName {
                                        value_token: GRAPHQL_NAME@77..99 "MySubscriptionRootType" [] [],
                                    },
                                },
                            ],
                        },
                        GraphqlRootOperationTypeDefinition {
                            operation_type: missing (required),
                            colon_token: COLON@99..103 ":" [Newline("\n"), Whitespace("\t")] [Whitespace(" ")],
                            named_type: GraphqlNamedType {
                                name: GraphqlName {
                                    value_token: GRAPHQL_NAME@103..125 "MySubscriptionRootType" [] [],
                                },
                            },
                        },
                        GraphqlBogus {
                            items: [
                                GRAPHQL_INT_LITERAL@125..128 "8" [Newline("\n"), Whitespace("\t")] [],
                                COLON@128..130 ":" [] [Whitespace(" ")],
                                GraphqlNamedType {
                                    name: GraphqlName {
                                        value_token: GRAPHQL_NAME@130..152 "MySubscriptionRootType" [] [],
                                    },
                                },
                            ],
                        },
                    ],
                },
                R_CURLY@152..154 "}" [Newline("\n")] [],
            ],
        },
        GraphqlBogusDefinition {
            items: [
                SCHEMA_KW@154..163 "schema" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                GraphqlDirectiveList [],
                L_CURLY@163..164 "{" [] [],
                GraphqlBogus {
                    items: [
                        GraphqlBogus {
                            items: [
                                GRAPHQL_NAME@164..171 "quer" [Newline("\n"), Whitespace("  ")] [],
                                COLON@171..172 ":" [] [],
                            ],
                        },
                    ],
                },
                R_CURLY@172..174 "}" [Newline("\n")] [],
            ],
        },
        GraphqlBogusDefinition {
            items: [
                ERROR_TOKEN@174..189 "\"sth schema {" [Newline("\n"), Newline("\n")] [],
                GRAPHQL_NAME@189..196 "quer" [Newline("\n"), Whitespace("  ")] [],
                COLON@196..197 ":" [] [],
                R_CURLY@197..199 "}" [Newline("\n")] [],
            ],
        },
    ],
    eof_token: EOF@199..200 "" [Newline("\n")] [],
}
```

## CST

```
0: GRAPHQL_ROOT@0..200
  0: (empty)
  1: GRAPHQL_DEFINITION_LIST@0..199
    0: GRAPHQL_BOGUS_DEFINITION@0..154
      0: SCHEMA_KW@0..7 "schema" [] [Whitespace(" ")]
      1: GRAPHQL_DIRECTIVE_LIST@7..7
      2: L_CURLY@7..8 "{" [] []
      3: GRAPHQL_BOGUS@8..152
        0: GRAPHQL_BOGUS@8..32
          0: GRAPHQL_NAME@8..15 "quer" [Newline("\n"), Whitespace("  ")] []
          1: COLON@15..17 ":" [] [Whitespace(" ")]
          2: GRAPHQL_NAMED_TYPE@17..32
            0: GRAPHQL_NAME@17..32
              0: GRAPHQL_NAME@17..32 "MyQueryRootType" [] []
        1: GRAPHQL_BOGUS@32..62
          0: GRAPHQL_NAME@32..42 "mutatio" [Newline("\n"), Whitespace("  ")] []
          1: COLON@42..44 ":" [] [Whitespace(" ")]
          2: GRAPHQL_NAMED_TYPE@44..62
            0: GRAPHQL_NAME@44..62
              0: GRAPHQL_NAME@44..62 "MyMutationRootType" [] []
        2: GRAPHQL_BOGUS@62..99
          0: GRAPHQL_NAME@62..75 "subscriptio" [Newline("\n"), Whitespace("\t")] []
          1: COLON@75..77 ":" [] [Whitespace(" ")]
          2: GRAPHQL_NAMED_TYPE@77..99
            0: GRAPHQL_NAME@77..99
              0: GRAPHQL_NAME@77..99 "MySubscriptionRootType" [] []
        3: GRAPHQL_ROOT_OPERATION_TYPE_DEFINITION@99..125
          0: (empty)
          1: COLON@99..103 ":" [Newline("\n"), Whitespace("\t")] [Whitespace(" ")]
          2: GRAPHQL_NAMED_TYPE@103..125
            0: GRAPHQL_NAME@103..125
              0: GRAPHQL_NAME@103..125 "MySubscriptionRootType" [] []
        4: GRAPHQL_BOGUS@125..152
          0: GRAPHQL_INT_LITERAL@125..128 "8" [Newline("\n"), Whitespace("\t")] []
          1: COLON@128..130 ":" [] [Whitespace(" ")]
          2: GRAPHQL_NAMED_TYPE@130..152
            0: GRAPHQL_NAME@130..152
              0: GRAPHQL_NAME@130..152 "MySubscriptionRootType" [] []
      4: R_CURLY@152..154 "}" [Newline("\n")] []
    1: GRAPHQL_BOGUS_DEFINITION@154..174
      0: SCHEMA_KW@154..163 "schema" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: GRAPHQL_DIRECTIVE_LIST@163..163
      2: L_CURLY@163..164 "{" [] []
      3: GRAPHQL_BOGUS@164..172
        0: GRAPHQL_BOGUS@164..172
          0: GRAPHQL_NAME@164..171 "quer" [Newline("\n"), Whitespace("  ")] []
          1: COLON@171..172 ":" [] []
      4: R_CURLY@172..174 "}" [Newline("\n")] []
    2: GRAPHQL_BOGUS_DEFINITION@174..199
      0: ERROR_TOKEN@174..189 "\"sth schema {" [Newline("\n"), Newline("\n")] []
      1: GRAPHQL_NAME@189..196 "quer" [Newline("\n"), Whitespace("  ")] []
      2: COLON@196..197 ":" [] []
      3: R_CURLY@197..199 "}" [Newline("\n")] []
  2: EOF@199..200 "" [Newline("\n")] []

```

## Diagnostics

```
schema.graphql:2:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a query, a mutation, or a subscription but instead found 'quer'.
  
    1 │ schema {
  > 2 │   quer: MyQueryRootType
      │   ^^^^
    3 │   mutatio: MyMutationRootType
    4 │ 	subscriptio: MySubscriptionRootType
  
  i Expected a query, a mutation, or a subscription here.
  
    1 │ schema {
  > 2 │   quer: MyQueryRootType
      │   ^^^^
    3 │   mutatio: MyMutationRootType
    4 │ 	subscriptio: MySubscriptionRootType
  
schema.graphql:3:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a query, a mutation, or a subscription but instead found 'mutatio'.
  
    1 │ schema {
    2 │   quer: MyQueryRootType
  > 3 │   mutatio: MyMutationRootType
      │   ^^^^^^^
    4 │ 	subscriptio: MySubscriptionRootType
    5 │ 	: MySubscriptionRootType
  
  i Expected a query, a mutation, or a subscription here.
  
    1 │ schema {
    2 │   quer: MyQueryRootType
  > 3 │   mutatio: MyMutationRootType
      │   ^^^^^^^
    4 │ 	subscriptio: MySubscriptionRootType
    5 │ 	: MySubscriptionRootType
  
schema.graphql:4:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a query, a mutation, or a subscription but instead found 'subscriptio'.
  
    2 │   quer: MyQueryRootType
    3 │   mutatio: MyMutationRootType
  > 4 │ 	subscriptio: MySubscriptionRootType
      │ 	^^^^^^^^^^^
    5 │ 	: MySubscriptionRootType
    6 │ 	8: MySubscriptionRootType
  
  i Expected a query, a mutation, or a subscription here.
  
    2 │   quer: MyQueryRootType
    3 │   mutatio: MyMutationRootType
  > 4 │ 	subscriptio: MySubscriptionRootType
      │ 	^^^^^^^^^^^
    5 │ 	: MySubscriptionRootType
    6 │ 	8: MySubscriptionRootType
  
schema.graphql:5:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a query, a mutation, or a subscription but instead found ':'.
  
    3 │   mutatio: MyMutationRootType
    4 │ 	subscriptio: MySubscriptionRootType
  > 5 │ 	: MySubscriptionRootType
      │ 	^
    6 │ 	8: MySubscriptionRootType
    7 │ }
  
  i Expected a query, a mutation, or a subscription here.
  
    3 │   mutatio: MyMutationRootType
    4 │ 	subscriptio: MySubscriptionRootType
  > 5 │ 	: MySubscriptionRootType
      │ 	^
    6 │ 	8: MySubscriptionRootType
    7 │ }
  
schema.graphql:6:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a query, a mutation, or a subscription but instead found '8'.
  
    4 │ 	subscriptio: MySubscriptionRootType
    5 │ 	: MySubscriptionRootType
  > 6 │ 	8: MySubscriptionRootType
      │ 	^
    7 │ }
    8 │ 
  
  i Expected a query, a mutation, or a subscription here.
  
    4 │ 	subscriptio: MySubscriptionRootType
    5 │ 	: MySubscriptionRootType
  > 6 │ 	8: MySubscriptionRootType
      │ 	^
    7 │ }
    8 │ 
  
schema.graphql:10:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a query, a mutation, or a subscription but instead found 'quer'.
  
     9 │ schema {
  > 10 │   quer:
       │   ^^^^
    11 │ }
    12 │ 
  
  i Expected a query, a mutation, or a subscription here.
  
     9 │ schema {
  > 10 │   quer:
       │   ^^^^
    11 │ }
    12 │ 
  
schema.graphql:11:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a named type but instead found '}'.
  
     9 │ schema {
    10 │   quer:
  > 11 │ }
       │ ^
    12 │ 
    13 │ "sth schema {
  
  i Expected a named type here.
  
     9 │ schema {
    10 │   quer:
  > 11 │ }
       │ ^
    12 │ 
    13 │ "sth schema {
  
schema.graphql:13:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Missing closing quote
  
    11 │ }
    12 │ 
  > 13 │ "sth schema {
       │ ^^^^^^^^^^^^^
    14 │   quer:
    15 │ }
  
```
