---
source: crates/biome_graphql_parser/tests/spec_test.rs
expression: snapshot
---
## Input
```graphql
query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
	likeStory
}

query ($storyId: ![, $comments: !], $tags: [[[) {
	likeStory
}


```

## AST

```
GraphqlRoot {
    bom_token: missing (optional),
    definitions: GraphqlDefinitionList [
        GraphqlBogusDefinition {
            items: [
                GraphqlOperationType {
                    value_token: QUERY_KW@0..6 "query" [] [Whitespace(" ")],
                },
                GraphqlBogus {
                    items: [
                        L_PAREN@6..7 "(" [] [],
                        GraphqlBogus {
                            items: [
                                GraphqlVariableDefinition {
                                    variable: GraphqlVariable {
                                        dollar_token: DOLLAR@7..8 "$" [] [],
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@8..15 "storyId" [] [],
                                        },
                                    },
                                    colon_token: COLON@15..17 ":" [] [Whitespace(" ")],
                                    ty: GraphqlNonNullType {
                                        base: missing (required),
                                        excl_token: BANG@17..20 "!" [] [Skipped(","), Whitespace(" ")],
                                    },
                                    default: missing (optional),
                                    directives: GraphqlDirectiveList [],
                                },
                                GraphqlVariableDefinition {
                                    variable: GraphqlVariable {
                                        dollar_token: DOLLAR@20..21 "$" [] [],
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@21..29 "comments" [] [],
                                        },
                                    },
                                    colon_token: COLON@29..31 ":" [] [Whitespace(" ")],
                                    ty: GraphqlListType {
                                        l_brack_token: L_BRACK@31..32 "[" [] [],
                                        element: GraphqlNonNullType {
                                            base: missing (required),
                                            excl_token: BANG@32..33 "!" [] [],
                                        },
                                        r_brack_token: R_BRACK@33..36 "]" [] [Skipped(","), Whitespace(" ")],
                                    },
                                    default: missing (optional),
                                    directives: GraphqlDirectiveList [],
                                },
                                GraphqlVariableDefinition {
                                    variable: GraphqlVariable {
                                        dollar_token: DOLLAR@36..37 "$" [] [],
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@37..41 "tags" [] [],
                                        },
                                    },
                                    colon_token: COLON@41..43 ":" [] [Whitespace(" ")],
                                    ty: GraphqlNonNullType {
                                        base: GraphqlListType {
                                            l_brack_token: L_BRACK@43..44 "[" [] [],
                                            element: GraphqlNonNullType {
                                                base: missing (required),
                                                excl_token: BANG@44..45 "!" [] [],
                                            },
                                            r_brack_token: R_BRACK@45..46 "]" [] [],
                                        },
                                        excl_token: BANG@46..49 "!" [] [Skipped(","), Whitespace(" ")],
                                    },
                                    default: missing (optional),
                                    directives: GraphqlDirectiveList [],
                                },
                                GraphqlVariableDefinition {
                                    variable: GraphqlVariable {
                                        dollar_token: DOLLAR@49..50 "$" [] [],
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@50..55 "posts" [] [],
                                        },
                                    },
                                    colon_token: COLON@55..57 ":" [] [Whitespace(" ")],
                                    ty: GraphqlNamedType {
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@57..66 "PostInput" [] [],
                                        },
                                    },
                                    default: missing (optional),
                                    directives: GraphqlDirectiveList [],
                                },
                                GraphqlBogus {
                                    items: [
                                        R_BRACK@66..67 "]" [] [],
                                        BANG@67..70 "!" [] [Skipped(","), Whitespace(" ")],
                                    ],
                                },
                                GraphqlVariableDefinition {
                                    variable: GraphqlVariable {
                                        dollar_token: DOLLAR@70..71 "$" [] [],
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@71..76 "input" [] [],
                                        },
                                    },
                                    colon_token: COLON@76..78 ":" [] [Whitespace(" ")],
                                    ty: GraphqlListType {
                                        l_brack_token: L_BRACK@78..79 "[" [] [],
                                        element: GraphqlNonNullType {
                                            base: GraphqlNamedType {
                                                name: GraphqlName {
                                                    value_token: GRAPHQL_NAME@79..88 "InputType" [] [],
                                                },
                                            },
                                            excl_token: BANG@88..89 "!" [] [],
                                        },
                                        r_brack_token: missing (required),
                                    },
                                    default: missing (optional),
                                    directives: GraphqlDirectiveList [],
                                },
                            ],
                        },
                        R_PAREN@89..91 ")" [] [Whitespace(" ")],
                    ],
                },
                GraphqlDirectiveList [],
                GraphqlSelectionSet {
                    l_curly_token: L_CURLY@91..92 "{" [] [],
                    selections: GraphqlSelectionList [
                        GraphqlField {
                            alias: missing (optional),
                            name: GraphqlName {
                                value_token: GRAPHQL_NAME@92..103 "likeStory" [Newline("\n"), Whitespace("\t")] [],
                            },
                            arguments: missing (optional),
                            directives: GraphqlDirectiveList [],
                            selection_set: missing (optional),
                        },
                    ],
                    r_curly_token: R_CURLY@103..105 "}" [Newline("\n")] [],
                },
            ],
        },
        GraphqlBogusDefinition {
            items: [
                GraphqlOperationType {
                    value_token: QUERY_KW@105..113 "query" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
                GraphqlBogus {
                    items: [
                        L_PAREN@113..114 "(" [] [],
                        GraphqlBogus {
                            items: [
                                GraphqlVariableDefinition {
                                    variable: GraphqlVariable {
                                        dollar_token: DOLLAR@114..115 "$" [] [],
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@115..122 "storyId" [] [],
                                        },
                                    },
                                    colon_token: COLON@122..124 ":" [] [Whitespace(" ")],
                                    ty: GraphqlNonNullType {
                                        base: missing (required),
                                        excl_token: BANG@124..125 "!" [] [],
                                    },
                                    default: missing (optional),
                                    directives: GraphqlDirectiveList [],
                                },
                                GraphqlBogus {
                                    items: [
                                        L_BRACK@125..128 "[" [] [Skipped(","), Whitespace(" ")],
                                    ],
                                },
                                GraphqlVariableDefinition {
                                    variable: GraphqlVariable {
                                        dollar_token: DOLLAR@128..129 "$" [] [],
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@129..137 "comments" [] [],
                                        },
                                    },
                                    colon_token: COLON@137..139 ":" [] [Whitespace(" ")],
                                    ty: GraphqlNonNullType {
                                        base: missing (required),
                                        excl_token: BANG@139..140 "!" [] [],
                                    },
                                    default: missing (optional),
                                    directives: GraphqlDirectiveList [],
                                },
                                GraphqlBogus {
                                    items: [
                                        R_BRACK@140..143 "]" [] [Skipped(","), Whitespace(" ")],
                                    ],
                                },
                                GraphqlVariableDefinition {
                                    variable: GraphqlVariable {
                                        dollar_token: DOLLAR@143..144 "$" [] [],
                                        name: GraphqlName {
                                            value_token: GRAPHQL_NAME@144..148 "tags" [] [],
                                        },
                                    },
                                    colon_token: COLON@148..150 ":" [] [Whitespace(" ")],
                                    ty: GraphqlListType {
                                        l_brack_token: L_BRACK@150..151 "[" [] [],
                                        element: GraphqlListType {
                                            l_brack_token: L_BRACK@151..152 "[" [] [],
                                            element: GraphqlListType {
                                                l_brack_token: L_BRACK@152..153 "[" [] [],
                                                element: missing (required),
                                                r_brack_token: missing (required),
                                            },
                                            r_brack_token: missing (required),
                                        },
                                        r_brack_token: missing (required),
                                    },
                                    default: missing (optional),
                                    directives: GraphqlDirectiveList [],
                                },
                            ],
                        },
                        R_PAREN@153..155 ")" [] [Whitespace(" ")],
                    ],
                },
                GraphqlDirectiveList [],
                GraphqlSelectionSet {
                    l_curly_token: L_CURLY@155..156 "{" [] [],
                    selections: GraphqlSelectionList [
                        GraphqlField {
                            alias: missing (optional),
                            name: GraphqlName {
                                value_token: GRAPHQL_NAME@156..167 "likeStory" [Newline("\n"), Whitespace("\t")] [],
                            },
                            arguments: missing (optional),
                            directives: GraphqlDirectiveList [],
                            selection_set: missing (optional),
                        },
                    ],
                    r_curly_token: R_CURLY@167..169 "}" [Newline("\n")] [],
                },
            ],
        },
    ],
    eof_token: EOF@169..171 "" [Newline("\n"), Newline("\n")] [],
}
```

## CST

```
0: GRAPHQL_ROOT@0..171
  0: (empty)
  1: GRAPHQL_DEFINITION_LIST@0..169
    0: GRAPHQL_BOGUS_DEFINITION@0..105
      0: GRAPHQL_OPERATION_TYPE@0..6
        0: QUERY_KW@0..6 "query" [] [Whitespace(" ")]
      1: GRAPHQL_BOGUS@6..91
        0: L_PAREN@6..7 "(" [] []
        1: GRAPHQL_BOGUS@7..89
          0: GRAPHQL_VARIABLE_DEFINITION@7..20
            0: GRAPHQL_VARIABLE@7..15
              0: DOLLAR@7..8 "$" [] []
              1: GRAPHQL_NAME@8..15
                0: GRAPHQL_NAME@8..15 "storyId" [] []
            1: COLON@15..17 ":" [] [Whitespace(" ")]
            2: GRAPHQL_NON_NULL_TYPE@17..20
              0: (empty)
              1: BANG@17..20 "!" [] [Skipped(","), Whitespace(" ")]
            3: (empty)
            4: GRAPHQL_DIRECTIVE_LIST@20..20
          1: GRAPHQL_VARIABLE_DEFINITION@20..36
            0: GRAPHQL_VARIABLE@20..29
              0: DOLLAR@20..21 "$" [] []
              1: GRAPHQL_NAME@21..29
                0: GRAPHQL_NAME@21..29 "comments" [] []
            1: COLON@29..31 ":" [] [Whitespace(" ")]
            2: GRAPHQL_LIST_TYPE@31..36
              0: L_BRACK@31..32 "[" [] []
              1: GRAPHQL_NON_NULL_TYPE@32..33
                0: (empty)
                1: BANG@32..33 "!" [] []
              2: R_BRACK@33..36 "]" [] [Skipped(","), Whitespace(" ")]
            3: (empty)
            4: GRAPHQL_DIRECTIVE_LIST@36..36
          2: GRAPHQL_VARIABLE_DEFINITION@36..49
            0: GRAPHQL_VARIABLE@36..41
              0: DOLLAR@36..37 "$" [] []
              1: GRAPHQL_NAME@37..41
                0: GRAPHQL_NAME@37..41 "tags" [] []
            1: COLON@41..43 ":" [] [Whitespace(" ")]
            2: GRAPHQL_NON_NULL_TYPE@43..49
              0: GRAPHQL_LIST_TYPE@43..46
                0: L_BRACK@43..44 "[" [] []
                1: GRAPHQL_NON_NULL_TYPE@44..45
                  0: (empty)
                  1: BANG@44..45 "!" [] []
                2: R_BRACK@45..46 "]" [] []
              1: BANG@46..49 "!" [] [Skipped(","), Whitespace(" ")]
            3: (empty)
            4: GRAPHQL_DIRECTIVE_LIST@49..49
          3: GRAPHQL_VARIABLE_DEFINITION@49..66
            0: GRAPHQL_VARIABLE@49..55
              0: DOLLAR@49..50 "$" [] []
              1: GRAPHQL_NAME@50..55
                0: GRAPHQL_NAME@50..55 "posts" [] []
            1: COLON@55..57 ":" [] [Whitespace(" ")]
            2: GRAPHQL_NAMED_TYPE@57..66
              0: GRAPHQL_NAME@57..66
                0: GRAPHQL_NAME@57..66 "PostInput" [] []
            3: (empty)
            4: GRAPHQL_DIRECTIVE_LIST@66..66
          4: GRAPHQL_BOGUS@66..70
            0: R_BRACK@66..67 "]" [] []
            1: BANG@67..70 "!" [] [Skipped(","), Whitespace(" ")]
          5: GRAPHQL_VARIABLE_DEFINITION@70..89
            0: GRAPHQL_VARIABLE@70..76
              0: DOLLAR@70..71 "$" [] []
              1: GRAPHQL_NAME@71..76
                0: GRAPHQL_NAME@71..76 "input" [] []
            1: COLON@76..78 ":" [] [Whitespace(" ")]
            2: GRAPHQL_LIST_TYPE@78..89
              0: L_BRACK@78..79 "[" [] []
              1: GRAPHQL_NON_NULL_TYPE@79..89
                0: GRAPHQL_NAMED_TYPE@79..88
                  0: GRAPHQL_NAME@79..88
                    0: GRAPHQL_NAME@79..88 "InputType" [] []
                1: BANG@88..89 "!" [] []
              2: (empty)
            3: (empty)
            4: GRAPHQL_DIRECTIVE_LIST@89..89
        2: R_PAREN@89..91 ")" [] [Whitespace(" ")]
      2: GRAPHQL_DIRECTIVE_LIST@91..91
      3: GRAPHQL_SELECTION_SET@91..105
        0: L_CURLY@91..92 "{" [] []
        1: GRAPHQL_SELECTION_LIST@92..103
          0: GRAPHQL_FIELD@92..103
            0: (empty)
            1: GRAPHQL_NAME@92..103
              0: GRAPHQL_NAME@92..103 "likeStory" [Newline("\n"), Whitespace("\t")] []
            2: (empty)
            3: GRAPHQL_DIRECTIVE_LIST@103..103
            4: (empty)
        2: R_CURLY@103..105 "}" [Newline("\n")] []
    1: GRAPHQL_BOGUS_DEFINITION@105..169
      0: GRAPHQL_OPERATION_TYPE@105..113
        0: QUERY_KW@105..113 "query" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: GRAPHQL_BOGUS@113..155
        0: L_PAREN@113..114 "(" [] []
        1: GRAPHQL_BOGUS@114..153
          0: GRAPHQL_VARIABLE_DEFINITION@114..125
            0: GRAPHQL_VARIABLE@114..122
              0: DOLLAR@114..115 "$" [] []
              1: GRAPHQL_NAME@115..122
                0: GRAPHQL_NAME@115..122 "storyId" [] []
            1: COLON@122..124 ":" [] [Whitespace(" ")]
            2: GRAPHQL_NON_NULL_TYPE@124..125
              0: (empty)
              1: BANG@124..125 "!" [] []
            3: (empty)
            4: GRAPHQL_DIRECTIVE_LIST@125..125
          1: GRAPHQL_BOGUS@125..128
            0: L_BRACK@125..128 "[" [] [Skipped(","), Whitespace(" ")]
          2: GRAPHQL_VARIABLE_DEFINITION@128..140
            0: GRAPHQL_VARIABLE@128..137
              0: DOLLAR@128..129 "$" [] []
              1: GRAPHQL_NAME@129..137
                0: GRAPHQL_NAME@129..137 "comments" [] []
            1: COLON@137..139 ":" [] [Whitespace(" ")]
            2: GRAPHQL_NON_NULL_TYPE@139..140
              0: (empty)
              1: BANG@139..140 "!" [] []
            3: (empty)
            4: GRAPHQL_DIRECTIVE_LIST@140..140
          3: GRAPHQL_BOGUS@140..143
            0: R_BRACK@140..143 "]" [] [Skipped(","), Whitespace(" ")]
          4: GRAPHQL_VARIABLE_DEFINITION@143..153
            0: GRAPHQL_VARIABLE@143..148
              0: DOLLAR@143..144 "$" [] []
              1: GRAPHQL_NAME@144..148
                0: GRAPHQL_NAME@144..148 "tags" [] []
            1: COLON@148..150 ":" [] [Whitespace(" ")]
            2: GRAPHQL_LIST_TYPE@150..153
              0: L_BRACK@150..151 "[" [] []
              1: GRAPHQL_LIST_TYPE@151..153
                0: L_BRACK@151..152 "[" [] []
                1: GRAPHQL_LIST_TYPE@152..153
                  0: L_BRACK@152..153 "[" [] []
                  1: (empty)
                  2: (empty)
                2: (empty)
              2: (empty)
            3: (empty)
            4: GRAPHQL_DIRECTIVE_LIST@153..153
        2: R_PAREN@153..155 ")" [] [Whitespace(" ")]
      2: GRAPHQL_DIRECTIVE_LIST@155..155
      3: GRAPHQL_SELECTION_SET@155..169
        0: L_CURLY@155..156 "{" [] []
        1: GRAPHQL_SELECTION_LIST@156..167
          0: GRAPHQL_FIELD@156..167
            0: (empty)
            1: GRAPHQL_NAME@156..167
              0: GRAPHQL_NAME@156..167 "likeStory" [Newline("\n"), Whitespace("\t")] []
            2: (empty)
            3: GRAPHQL_DIRECTIVE_LIST@167..167
            4: (empty)
        2: R_CURLY@167..169 "}" [Newline("\n")] []
  2: EOF@169..171 "" [Newline("\n"), Newline("\n")] []

```

## Diagnostics

```
type.graphql:1:21 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a named type, or a list type but instead found '$'.
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                     ^
    2 │ 	likeStory
    3 │ }
  
  i Expected a named type, or a list type here.
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                     ^
    2 │ 	likeStory
    3 │ }
  
type.graphql:1:34 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a named type, or a list type but instead found ']'.
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                                  ^
    2 │ 	likeStory
    3 │ }
  
  i Expected a named type, or a list type here.
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                                  ^
    2 │ 	likeStory
    3 │ }
  
type.graphql:1:46 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a named type, or a list type but instead found ']'.
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                                              ^
    2 │ 	likeStory
    3 │ }
  
  i Expected a named type, or a list type here.
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                                              ^
    2 │ 	likeStory
    3 │ }
  
type.graphql:1:67 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a variable definition but instead found ']!'.
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                                                                   ^^
    2 │ 	likeStory
    3 │ }
  
  i Expected a variable definition here.
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                                                                   ^^
    2 │ 	likeStory
    3 │ }
  
type.graphql:1:90 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `]` but instead found `)`
  
  > 1 │ query ($storyId: !, $comments: [!], $tags: [!]!, $posts: PostInput]!, $input: [InputType!) {
      │                                                                                          ^
    2 │ 	likeStory
    3 │ }
  
  i Remove )
  
type.graphql:5:19 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a named type, or a list type but instead found '['.
  
    3 │ }
    4 │ 
  > 5 │ query ($storyId: ![, $comments: !], $tags: [[[) {
      │                   ^
    6 │ 	likeStory
    7 │ }
  
  i Expected a named type, or a list type here.
  
    3 │ }
    4 │ 
  > 5 │ query ($storyId: ![, $comments: !], $tags: [[[) {
      │                   ^
    6 │ 	likeStory
    7 │ }
  
type.graphql:5:34 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a named type, or a list type but instead found ']'.
  
    3 │ }
    4 │ 
  > 5 │ query ($storyId: ![, $comments: !], $tags: [[[) {
      │                                  ^
    6 │ 	likeStory
    7 │ }
  
  i Expected a named type, or a list type here.
  
    3 │ }
    4 │ 
  > 5 │ query ($storyId: ![, $comments: !], $tags: [[[) {
      │                                  ^
    6 │ 	likeStory
    7 │ }
  
type.graphql:5:47 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a type but instead found ')'.
  
    3 │ }
    4 │ 
  > 5 │ query ($storyId: ![, $comments: !], $tags: [[[) {
      │                                               ^
    6 │ 	likeStory
    7 │ }
  
  i Expected a type here.
  
    3 │ }
    4 │ 
  > 5 │ query ($storyId: ![, $comments: !], $tags: [[[) {
      │                                               ^
    6 │ 	likeStory
    7 │ }
  
```
