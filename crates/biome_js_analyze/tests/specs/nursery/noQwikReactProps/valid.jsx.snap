---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: valid.jsx
---
# Input
```jsx
/* should not generate diagnostics */

<div class="container" />
<label for="input" />

<div class="container" id="main" />

<div class={`container ${isActive ? 'active' : ''}`} />

<label for={`input-${id}`} />

<MyComponent class="custom-class" />

<MyLabel for="my-input" />

<div {...props} class="additional-class" />

<label {...labelProps} for="spread-input" />

<div>
  <span class="nested-class" />
</div>

<form>
  <label for="nested-input" />
</form>

<div class="class1 class2 class3" />

<label for={getInputId()} />

{isVisible && <div class="conditional-class" />}

{hasLabel && <label for="conditional-input" />}

{items.map(item => <div key={item.id} class="item-class" />)}

{inputs.map(input => <label key={input.id} for={input.id} />)}

<div id="main" />
<span data-testid="test" />
<button type="submit" />
<input type="text" />

<div class="container" id="main" data-testid="test" />

<MyComponent id="component" class="custom" />

<div class="parent">
  <MyComponent class="child" />
  <label for="child-input" />
</div>

{isVisible && <div class="visible" />}
{!isVisible && <div class="hidden" />}

<div class={`base ${variant}`} />
<label for={`input-${name}`} />

<div {...commonProps} class="specific" />
<label {...labelProps} for="specific-input" />

{items.map((item, index) => (
  <div key={item.id} class={`item item-${index}`} />
))}

<form class="form">
  <label for="name">Name</label>
  <input id="name" type="text" />
</form> 
```
