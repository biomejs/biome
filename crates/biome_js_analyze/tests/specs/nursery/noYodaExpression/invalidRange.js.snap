---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalidRange.js
---
# Input
```jsx
if (a < 0 && 0 <= b && b < 1) {}
if (0 <= a && a < 1 && b < 1) {}
if (1 < a && a < 0) {}
0 < a && a < 1
var a = b < 0 || 1 <= b;
if (0 <= x && x < -1) {}
if (`green` < x.y && x.y < `blue`) {}
if ('b' <= x && x < 'a') {}
if('a' <= x && x < 1) {}
if (0 < a && b < max) {}

```

# Diagnostics
```
invalidRange.js:1:14 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
  > 1 │ if (a < 0 && 0 <= b && b < 1) {}
      │              ^^^^^^
    2 │ if (0 <= a && a < 1 && b < 1) {}
    3 │ if (1 < a && a < 0) {}
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     1    │ - if·(a·<·0·&&·0·<=·b·&&·b·<·1)·{}
        1 │ + if·(a·<·0·&&·b·>=·0·&&·b·<·1)·{}
     2  2 │   if (0 <= a && a < 1 && b < 1) {}
     3  3 │   if (1 < a && a < 0) {}
  

```

```
invalidRange.js:2:5 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
    1 │ if (a < 0 && 0 <= b && b < 1) {}
  > 2 │ if (0 <= a && a < 1 && b < 1) {}
      │     ^^^^^^
    3 │ if (1 < a && a < 0) {}
    4 │ 0 < a && a < 1
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     1  1 │   if (a < 0 && 0 <= b && b < 1) {}
     2    │ - if·(0·<=·a·&&·a·<·1·&&·b·<·1)·{}
        2 │ + if·(a·>=·0·&&·a·<·1·&&·b·<·1)·{}
     3  3 │   if (1 < a && a < 0) {}
     4  4 │   0 < a && a < 1
  

```

```
invalidRange.js:3:5 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
    1 │ if (a < 0 && 0 <= b && b < 1) {}
    2 │ if (0 <= a && a < 1 && b < 1) {}
  > 3 │ if (1 < a && a < 0) {}
      │     ^^^^^
    4 │ 0 < a && a < 1
    5 │ var a = b < 0 || 1 <= b;
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     1  1 │   if (a < 0 && 0 <= b && b < 1) {}
     2  2 │   if (0 <= a && a < 1 && b < 1) {}
     3    │ - if·(1·<·a·&&·a·<·0)·{}
        3 │ + if·(a·>·1·&&·a·<·0)·{}
     4  4 │   0 < a && a < 1
     5  5 │   var a = b < 0 || 1 <= b;
  

```

```
invalidRange.js:4:1 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
    2 │ if (0 <= a && a < 1 && b < 1) {}
    3 │ if (1 < a && a < 0) {}
  > 4 │ 0 < a && a < 1
      │ ^^^^^
    5 │ var a = b < 0 || 1 <= b;
    6 │ if (0 <= x && x < -1) {}
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     2  2 │   if (0 <= a && a < 1 && b < 1) {}
     3  3 │   if (1 < a && a < 0) {}
     4    │ - 0·<·a·&&·a·<·1
        4 │ + a·>·0·&&·a·<·1
     5  5 │   var a = b < 0 || 1 <= b;
     6  6 │   if (0 <= x && x < -1) {}
  

```

```
invalidRange.js:5:18 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
    3 │ if (1 < a && a < 0) {}
    4 │ 0 < a && a < 1
  > 5 │ var a = b < 0 || 1 <= b;
      │                  ^^^^^^
    6 │ if (0 <= x && x < -1) {}
    7 │ if (`green` < x.y && x.y < `blue`) {}
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     3  3 │   if (1 < a && a < 0) {}
     4  4 │   0 < a && a < 1
     5    │ - var·a·=·b·<·0·||·1·<=·b;
        5 │ + var·a·=·b·<·0·||·b·>=·1·;
     6  6 │   if (0 <= x && x < -1) {}
     7  7 │   if (`green` < x.y && x.y < `blue`) {}
  

```

```
invalidRange.js:6:5 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
    4 │ 0 < a && a < 1
    5 │ var a = b < 0 || 1 <= b;
  > 6 │ if (0 <= x && x < -1) {}
      │     ^^^^^^
    7 │ if (`green` < x.y && x.y < `blue`) {}
    8 │ if ('b' <= x && x < 'a') {}
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     4  4 │   0 < a && a < 1
     5  5 │   var a = b < 0 || 1 <= b;
     6    │ - if·(0·<=·x·&&·x·<·-1)·{}
        6 │ + if·(x·>=·0·&&·x·<·-1)·{}
     7  7 │   if (`green` < x.y && x.y < `blue`) {}
     8  8 │   if ('b' <= x && x < 'a') {}
  

```

```
invalidRange.js:7:5 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
    5 │ var a = b < 0 || 1 <= b;
    6 │ if (0 <= x && x < -1) {}
  > 7 │ if (`green` < x.y && x.y < `blue`) {}
      │     ^^^^^^^^^^^^^
    8 │ if ('b' <= x && x < 'a') {}
    9 │ if('a' <= x && x < 1) {}
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     5  5 │   var a = b < 0 || 1 <= b;
     6  6 │   if (0 <= x && x < -1) {}
     7    │ - if·(`green`·<·x.y·&&·x.y·<·`blue`)·{}
        7 │ + if·(x.y·>·`green`·&&·x.y·<·`blue`)·{}
     8  8 │   if ('b' <= x && x < 'a') {}
     9  9 │   if('a' <= x && x < 1) {}
  

```

```
invalidRange.js:8:5 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
     6 │ if (0 <= x && x < -1) {}
     7 │ if (`green` < x.y && x.y < `blue`) {}
   > 8 │ if ('b' <= x && x < 'a') {}
       │     ^^^^^^^^
     9 │ if('a' <= x && x < 1) {}
    10 │ if (0 < a && b < max) {}
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     6  6 │   if (0 <= x && x < -1) {}
     7  7 │   if (`green` < x.y && x.y < `blue`) {}
     8    │ - if·('b'·<=·x·&&·x·<·'a')·{}
        8 │ + if·(x·>=·'b'·&&·x·<·'a')·{}
     9  9 │   if('a' <= x && x < 1) {}
    10 10 │   if (0 < a && b < max) {}
  

```

```
invalidRange.js:9:4 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
     7 │ if (`green` < x.y && x.y < `blue`) {}
     8 │ if ('b' <= x && x < 'a') {}
   > 9 │ if('a' <= x && x < 1) {}
       │    ^^^^^^^^
    10 │ if (0 < a && b < max) {}
    11 │ 
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     7  7 │   if (`green` < x.y && x.y < `blue`) {}
     8  8 │   if ('b' <= x && x < 'a') {}
     9    │ - if('a'·<=·x·&&·x·<·1)·{}
        9 │ + if(x·>=·'a'·&&·x·<·1)·{}
    10 10 │   if (0 < a && b < max) {}
    11 11 │   
  

```

```
invalidRange.js:10:5 lint/nursery/noYodaExpression  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of yoda expressions.
  
     8 │ if ('b' <= x && x < 'a') {}
     9 │ if('a' <= x && x < 1) {}
  > 10 │ if (0 < a && b < max) {}
       │     ^^^^^
    11 │ 
  
  i Yoda expressions can be confusing to some people, invert the expression operands for better readability.
  
  i Safe fix: Flip the operators of the expression.
  
     8  8 │   if ('b' <= x && x < 'a') {}
     9  9 │   if('a' <= x && x < 1) {}
    10    │ - if·(0·<·a·&&·b·<·max)·{}
       10 │ + if·(a·>·0·&&·b·<·max)·{}
    11 11 │   
  

```
