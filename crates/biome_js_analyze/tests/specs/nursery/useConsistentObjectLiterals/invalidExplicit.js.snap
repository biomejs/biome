---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalidExplicit.js
---
# Input
```js
const obj = {
    foo: foo,
    bar: function () { return "bar"; },
};

```

# Diagnostics
```
invalidExplicit.js:2:5 lint/nursery/useConsistentObjectLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use shorthand object property syntax whenever possible.
  
    1 │ const obj = {
  > 2 │     foo: foo,
      │     ^^^^^^^^
    3 │     bar: function () { return "bar"; },
    4 │ };
  
  i Using a consistent object literal syntax makes it easier to anticipate the structure of an object.
  

```

```
invalidExplicit.js:3:5 lint/nursery/useConsistentObjectLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use shorthand object property syntax whenever possible.
  
    1 │ const obj = {
    2 │     foo: foo,
  > 3 │     bar: function () { return "bar"; },
      │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 │ };
    5 │ 
  
  i Using a consistent object literal syntax makes it easier to anticipate the structure of an object.
  

```
