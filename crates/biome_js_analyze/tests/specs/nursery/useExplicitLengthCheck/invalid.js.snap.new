---
source: crates/biome_js_analyze/tests/spec_tests.rs
assertion_line: 83
expression: invalid.js
---
# Input
```jsx
foo.length && true
Boolean(foo.length == 0);
Boolean(foo.length != 0);



!Boolean(!(Boolean(0 != foo.length)));
// !(!(Boolean(Boolean(foo.length))))
// foo.length && true
// foo.length!=0
// if (/** A */foo.size /** B */) {}
// Boolean(foo.length)
// new Boolean(foo.length)
// !foo.length
// !this.length
// true ? foo.length : 0
// true ? foo.length == 0 : 0

// !!!(!!foo.length)

```

# Diagnostics
```
invalid.js:1:1 lint/nursery/useExplicitLengthCheck  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use .length > 0 with .length is not zero.
  
  > 1 │ foo.length && true
      │ ^^^^^^^^^^
    2 │ Boolean(foo.length == 0);
    3 │ Boolean(foo.length != 0);
  
  i Unsafe fix: Replace with
  
    1 │ foo.length·>·0·&&·true
      │            ++++       

```

```
invalid.js:2:1 lint/nursery/useExplicitLengthCheck  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use .length === 0 with .length is zero.
  
    1 │ foo.length && true
  > 2 │ Boolean(foo.length == 0);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
    3 │ Boolean(foo.length != 0);
    4 │ 
  
  i Unsafe fix: Replace with
  
     1  1 │   foo.length && true
     2    │ - Boolean(foo.length·==·0);
        2 │ + foo.length·===·0;
     3  3 │   Boolean(foo.length != 0);
     4  4 │   
  

```

```
invalid.js:3:1 lint/nursery/useExplicitLengthCheck  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use .length > 0 with .length is not zero.
  
    1 │ foo.length && true
    2 │ Boolean(foo.length == 0);
  > 3 │ Boolean(foo.length != 0);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
    4 │ 
  
  i Unsafe fix: Replace with
  
     1  1 │   foo.length && true
     2  2 │   Boolean(foo.length == 0);
     3    │ - Boolean(foo.length·!=·0);
        3 │ + foo.length·>·0;
     4  4 │   
     5  5 │   
  

```

```
invalid.js:7:1 lint/nursery/useExplicitLengthCheck  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use .length > 0 with .length is not zero.
  
  > 7 │ !Boolean(!(Boolean(0 != foo.length)));
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    8 │ // !(!(Boolean(Boolean(foo.length))))
    9 │ // foo.length && true
  
  i Unsafe fix: Replace with
  
     5  5 │   
     6  6 │   
     7    │ - !Boolean(!(Boolean(0·!=·foo.length)));
        7 │ + foo.length·>·0;
     8  8 │   // !(!(Boolean(Boolean(foo.length))))
     9  9 │   // foo.length && true
  

```
