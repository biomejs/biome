---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```js
var s = {
    '\a': "\a",
    '\"': "\'",
    "abc\defg": ` test ${1} \a`,
    // A test with unicode characters that take more than one byte
    key: "😀\😀"
};

```

# Diagnostics
```
invalid.js:2:7 lint/nursery/noUselessEscapeInString  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The character doesn't need to be escaped.
  
    1 │ var s = {
  > 2 │     '\a': "\a",
      │       ^
    3 │     '\"': "\'",
    4 │     "abc\defg": ` test ${1} \a`,
  
  i Only quotes that enclose the string and special characters need to be escaped.
  
  i Safe fix: Unescape the character.
  
    2 │ ····'\a':·"\a",
      │      -         

```

```
invalid.js:2:13 lint/nursery/noUselessEscapeInString  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The character doesn't need to be escaped.
  
    1 │ var s = {
  > 2 │     '\a': "\a",
      │             ^
    3 │     '\"': "\'",
    4 │     "abc\defg": ` test ${1} \a`,
  
  i Only quotes that enclose the string and special characters need to be escaped.
  
  i Safe fix: Unescape the character.
  
    2 │ ····'\a':·"\a",
      │            -   

```

```
invalid.js:3:7 lint/nursery/noUselessEscapeInString  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The character doesn't need to be escaped.
  
    1 │ var s = {
    2 │     '\a': "\a",
  > 3 │     '\"': "\'",
      │       ^
    4 │     "abc\defg": ` test ${1} \a`,
    5 │     // A test with unicode characters that take more than one byte
  
  i Only quotes that enclose the string and special characters need to be escaped.
  
  i Safe fix: Unescape the character.
  
    3 │ ····'\"':·"\'",
      │      -         

```

```
invalid.js:3:13 lint/nursery/noUselessEscapeInString  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The character doesn't need to be escaped.
  
    1 │ var s = {
    2 │     '\a': "\a",
  > 3 │     '\"': "\'",
      │             ^
    4 │     "abc\defg": ` test ${1} \a`,
    5 │     // A test with unicode characters that take more than one byte
  
  i Only quotes that enclose the string and special characters need to be escaped.
  
  i Safe fix: Unescape the character.
  
    3 │ ····'\"':·"\'",
      │            -   

```

```
invalid.js:4:10 lint/nursery/noUselessEscapeInString  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The character doesn't need to be escaped.
  
    2 │     '\a': "\a",
    3 │     '\"': "\'",
  > 4 │     "abc\defg": ` test ${1} \a`,
      │          ^
    5 │     // A test with unicode characters that take more than one byte
    6 │     key: "😀\😀"
  
  i Only quotes that enclose the string and special characters need to be escaped.
  
  i Safe fix: Unescape the character.
  
    2 2 │       '\a': "\a",
    3 3 │       '\"': "\'",
    4   │ - ····"abc\defg":·`·test·${1}·\a`,
      4 │ + ····"abcdefg":·`·test·${1}·\a`,
    5 5 │       // A test with unicode characters that take more than one byte
    6 6 │       key: "😀\😀"
  

```

```
invalid.js:4:30 lint/nursery/noUselessEscapeInString  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The character doesn't need to be escaped.
  
    2 │     '\a': "\a",
    3 │     '\"': "\'",
  > 4 │     "abc\defg": ` test ${1} \a`,
      │                              ^
    5 │     // A test with unicode characters that take more than one byte
    6 │     key: "😀\😀"
  
  i Only quotes that enclose the string and special characters need to be escaped.
  
  i Safe fix: Unescape the character.
  
    4 │ ····"abc\defg":·`·test·${1}·\a`,
      │                             -   

```

```
invalid.js:6:13 lint/nursery/noUselessEscapeInString  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The character doesn't need to be escaped.
  
    4 │     "abc\defg": ` test ${1} \a`,
    5 │     // A test with unicode characters that take more than one byte
  > 6 │     key: "😀\😀"
      │              ^^
    7 │ };
    8 │ 
  
  i Only quotes that enclose the string and special characters need to be escaped.
  
  i Safe fix: Unescape the character.
  
    6 │ ····key:·"😀\😀"
      │             -   

```
