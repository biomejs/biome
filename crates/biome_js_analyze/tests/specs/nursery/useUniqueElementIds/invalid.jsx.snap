---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.jsx
---
# Input
```jsx
function Foo() {
	return <div id="foo"></div>;
}

function Foo() {
	return (
		<div id="foo">
			<div>bar</div>
		</div>
	);
}

function Foo() {
	return (
		<div>
			<div id="foo">bar</div>
		</div>
	);
}

function Foo() {
	return React.createElement("div", { id: "foo" });
}

import { createElement } from "react";
function Foo() {
	return createElement("div", { id: "foo" });
}

```

# Diagnostics
```
invalid.jsx:2:9 lint/nursery/useUniqueElementIds ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × id attribute should not be a static string literal. Generate unique IDs using useId().
  
    1 │ function Foo() {
  > 2 │ 	return <div id="foo"></div>;
      │ 	       ^^^^^^^^^^^^^^
    3 │ }
    4 │ 
  
  i In React, if you hardcode IDs and use the component multiple times, it can lead to duplicate IDs in the DOM. Instead, generate unique IDs using useId().
  

```

```
invalid.jsx:7:3 lint/nursery/useUniqueElementIds ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × id attribute should not be a static string literal. Generate unique IDs using useId().
  
    5 │ function Foo() {
    6 │ 	return (
  > 7 │ 		<div id="foo">
      │ 		^^^^^^^^^^^^^^
    8 │ 			<div>bar</div>
    9 │ 		</div>
  
  i In React, if you hardcode IDs and use the component multiple times, it can lead to duplicate IDs in the DOM. Instead, generate unique IDs using useId().
  

```

```
invalid.jsx:16:4 lint/nursery/useUniqueElementIds ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × id attribute should not be a static string literal. Generate unique IDs using useId().
  
    14 │ 	return (
    15 │ 		<div>
  > 16 │ 			<div id="foo">bar</div>
       │ 			^^^^^^^^^^^^^^
    17 │ 		</div>
    18 │ 	);
  
  i In React, if you hardcode IDs and use the component multiple times, it can lead to duplicate IDs in the DOM. Instead, generate unique IDs using useId().
  

```

```
invalid.jsx:22:9 lint/nursery/useUniqueElementIds ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × id attribute should not be a static string literal. Generate unique IDs using useId().
  
    21 │ function Foo() {
  > 22 │ 	return React.createElement("div", { id: "foo" });
       │ 	       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    23 │ }
    24 │ 
  
  i In React, if you hardcode IDs and use the component multiple times, it can lead to duplicate IDs in the DOM. Instead, generate unique IDs using useId().
  

```

```
invalid.jsx:27:9 lint/nursery/useUniqueElementIds ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × id attribute should not be a static string literal. Generate unique IDs using useId().
  
    25 │ import { createElement } from "react";
    26 │ function Foo() {
  > 27 │ 	return createElement("div", { id: "foo" });
       │ 	       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    28 │ }
    29 │ 
  
  i In React, if you hardcode IDs and use the component multiple times, it can lead to duplicate IDs in the DOM. Instead, generate unique IDs using useId().
  

```
