---
source: crates/biome_js_analyze/tests/spec_tests.rs
assertion_line: 86
expression: valid.json
---
# Input
```cjs
function foo() {return;}
```

# Input
```cjs
const foo = () => {};
```

# Input
```cjs
let foo;
```

# Input
```cjs
var foo;
```

# Input
```cjs
const foo = undefined;
```

# Diagnostics
```
valid.json:1:13 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ const foo = undefined;
      │             ^^^^^^^^^

  i


```

# Input
```cjs
foo();
```

# Input
```cjs
foo(bar,);
```

# Input
```cjs
foo(undefined, bar);
```

# Diagnostics
```
valid.json:1:5 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ foo(undefined, bar);
      │     ^^^^^^^^^

  i


```

# Input
```cjs
const {foo} = {};
```

# Input
```cjs
function foo({bar} = {}) {}
```

# Input
```cjs
function foo(bar) {}
```

# Input
```cjs
function* foo() {yield* undefined;}
```

# Diagnostics
```
valid.json:1:25 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ function* foo() {yield* undefined;}
      │                         ^^^^^^^^^

  i


```

# Input
```cjs
if (Object.is(foo, undefined)){}
```

# Diagnostics
```
valid.json:1:20 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ if (Object.is(foo, undefined)){}
      │                    ^^^^^^^^^

  i


```

# Input
```cjs
t.is(foo, undefined)
```

# Diagnostics
```
valid.json:1:11 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ t.is(foo, undefined)
      │           ^^^^^^^^^

  i


```

# Input
```cjs
assert.equal(foo, undefined, message)
```

# Diagnostics
```
valid.json:1:19 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ assert.equal(foo, undefined, message)
      │                   ^^^^^^^^^

  i


```

# Input
```cjs
assert.notEqual(foo, undefined, message)
```

# Diagnostics
```
valid.json:1:22 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ assert.notEqual(foo, undefined, message)
      │                      ^^^^^^^^^

  i


```

# Input
```cjs
assert.strictEqual(foo, undefined, message)
```

# Diagnostics
```
valid.json:1:25 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ assert.strictEqual(foo, undefined, message)
      │                         ^^^^^^^^^

  i


```

# Input
```cjs
assert.notStrictEqual(foo, undefined, message)
```

# Diagnostics
```
valid.json:1:28 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ assert.notStrictEqual(foo, undefined, message)
      │                            ^^^^^^^^^

  i


```

# Input
```cjs
assert.propertyVal(foo, 'bar', undefined, message)
```

# Diagnostics
```
valid.json:1:32 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ assert.propertyVal(foo, 'bar', undefined, message)
      │                                ^^^^^^^^^

  i


```

# Input
```cjs
assert.notPropertyVal(foo, 'bar', undefined, message)
```

# Diagnostics
```
valid.json:1:35 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ assert.notPropertyVal(foo, 'bar', undefined, message)
      │                                   ^^^^^^^^^

  i


```

# Input
```cjs
expect(foo).not(undefined)
```

# Diagnostics
```
valid.json:1:17 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ expect(foo).not(undefined)
      │                 ^^^^^^^^^

  i


```

# Input
```cjs
expect(foo).to.have.property('bar', undefined)
```

# Diagnostics
```
valid.json:1:37 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ expect(foo).to.have.property('bar', undefined)
      │                                     ^^^^^^^^^

  i


```

# Input
```cjs
expect(foo).toBe(undefined)
```

# Diagnostics
```
valid.json:1:18 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ expect(foo).toBe(undefined)
      │                  ^^^^^^^^^

  i


```

# Input
```cjs
expect(foo).toContain(undefined)
```

# Diagnostics
```
valid.json:1:23 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ expect(foo).toContain(undefined)
      │                       ^^^^^^^^^

  i


```

# Input
```cjs
expect(foo).toContainEqual(undefined)
```

# Diagnostics
```
valid.json:1:28 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ expect(foo).toContainEqual(undefined)
      │                            ^^^^^^^^^

  i


```

# Input
```cjs
expect(foo).toEqual(undefined)
```

# Diagnostics
```
valid.json:1:21 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ expect(foo).toEqual(undefined)
      │                     ^^^^^^^^^

  i


```

# Input
```cjs
t.same(foo, undefined)
```

# Diagnostics
```
valid.json:1:13 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ t.same(foo, undefined)
      │             ^^^^^^^^^

  i


```

# Input
```cjs
t.notSame(foo, undefined)
```

# Diagnostics
```
valid.json:1:16 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ t.notSame(foo, undefined)
      │                ^^^^^^^^^

  i


```

# Input
```cjs
t.strictSame(foo, undefined)
```

# Diagnostics
```
valid.json:1:19 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ t.strictSame(foo, undefined)
      │                   ^^^^^^^^^

  i


```

# Input
```cjs
t.strictNotSame(foo, undefined)
```

# Diagnostics
```
valid.json:1:22 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ t.strictNotSame(foo, undefined)
      │                      ^^^^^^^^^

  i


```

# Input
```cjs
expect(someFunction).toHaveBeenCalledWith(1, 2, undefined);
```

# Diagnostics
```
valid.json:1:49 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ expect(someFunction).toHaveBeenCalledWith(1, 2, undefined);
      │                                                 ^^^^^^^^^

  i


```

# Input
```cjs
set.add(undefined);
```

# Diagnostics
```
valid.json:1:9 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ set.add(undefined);
      │         ^^^^^^^^^

  i


```

# Input
```cjs
map.set(foo, undefined);
```

# Diagnostics
```
valid.json:1:14 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ map.set(foo, undefined);
      │              ^^^^^^^^^

  i


```

# Input
```cjs
array.push(foo, undefined);
```

# Diagnostics
```
valid.json:1:17 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ array.push(foo, undefined);
      │                 ^^^^^^^^^

  i


```

# Input
```cjs
array.push(undefined);
```

# Diagnostics
```
valid.json:1:12 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ array.push(undefined);
      │            ^^^^^^^^^

  i


```

# Input
```cjs
array.unshift(foo, undefined);
```

# Diagnostics
```
valid.json:1:20 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ array.unshift(foo, undefined);
      │                    ^^^^^^^^^

  i


```

# Input
```cjs
array.unshift(undefined);
```

# Diagnostics
```
valid.json:1:15 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ array.unshift(undefined);
      │               ^^^^^^^^^

  i


```

# Input
```cjs
createContext(undefined);
```

# Diagnostics
```
valid.json:1:15 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ createContext(undefined);
      │               ^^^^^^^^^

  i


```

# Input
```cjs
React.createContext(undefined);
```

# Diagnostics
```
valid.json:1:21 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ React.createContext(undefined);
      │                     ^^^^^^^^^

  i


```

# Input
```cjs
setState(undefined)
```

# Diagnostics
```
valid.json:1:10 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ setState(undefined)
      │          ^^^^^^^^^

  i


```

# Input
```cjs
setState?.(undefined)
```

# Diagnostics
```
valid.json:1:12 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ setState?.(undefined)
      │            ^^^^^^^^^

  i


```

# Input
```cjs
props.setState(undefined)
```

# Diagnostics
```
valid.json:1:16 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ props.setState(undefined)
      │                ^^^^^^^^^

  i


```

# Input
```cjs
props.setState?.(undefined)
```

# Diagnostics
```
valid.json:1:18 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ props.setState?.(undefined)
      │                  ^^^^^^^^^

  i


```

# Input
```cjs
array.includes(undefined)
```

# Diagnostics
```
valid.json:1:16 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ array.includes(undefined)
      │                ^^^^^^^^^

  i


```

# Input
```cjs
set.has(undefined)
```

# Diagnostics
```
valid.json:1:9 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ set.has(undefined)
      │         ^^^^^^^^^

  i


```

# Input
```cjs
foo.bind(bar, undefined)
```

# Diagnostics
```
valid.json:1:15 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ foo.bind(bar, undefined)
      │               ^^^^^^^^^

  i


```

# Input
```cjs
foo.bind(...bar, undefined)
```

# Diagnostics
```
valid.json:1:18 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ foo.bind(...bar, undefined)
      │                  ^^^^^^^^^

  i


```

# Input
```cjs
foo.bind(...[], undefined)
```

# Diagnostics
```
valid.json:1:17 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ foo.bind(...[], undefined)
      │                 ^^^^^^^^^

  i


```

# Input
```cjs
foo.bind(...[undefined], undefined)
```

# Diagnostics
```
valid.json:1:26 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ foo.bind(...[undefined], undefined)
      │                          ^^^^^^^^^

  i


```

# Input
```cjs
foo.bind(bar, baz, undefined)
```

# Diagnostics
```
valid.json:1:20 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ foo.bind(bar, baz, undefined)
      │                    ^^^^^^^^^

  i


```

# Input
```cjs
foo?.bind(bar, undefined)
```

# Diagnostics
```
valid.json:1:16 lint/nursery/noUselessUndefined ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use unnecessary undefined.

  > 1 │ foo?.bind(bar, undefined)
      │                ^^^^^^^^^

  i


```
