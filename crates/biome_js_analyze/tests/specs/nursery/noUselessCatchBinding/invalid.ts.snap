---
source: crates/biome_js_analyze/tests/spec_tests.rs
assertion_line: 152
expression: invalid.ts
---
# Input
```ts
// should generate diagnostics

try { /* ... */ } catch (unused: any) { }

try { /* ... */ } catch (_unused: any) { }


try { /* ... */ } catch ({ unused }: any) { }

try { /* ... */ } catch ({ _unused }: any) { }

try { /* ... */ } catch ({ unused, _unused }: any) { }


try { /* ... */ } catch (/* leading inner */ unused: any /* trailing inner */) { }

try { /* ... */ } catch /* leading outer */ (unused: any) /* trailing outer */ { }

try { /* ... */ } catch /* leading outer */ (/* leading inner */ unused: any /* trailing inner */) /* trailing outer */ { }

try { /* ... */ } catch /* leading outer */ (/* leading inner 1 */ { /* leading inner 2 */ unused: any /* trailing inner 2 */ } /* trailing inner 1 */) /* trailing outer */ { }


try { /* ... */ } catch ({ used: alias }: any) { }

try { /* ... */ } catch ({ nested: { unused } }: any) { }

try { /* ... */ } catch ({ ...rest }: any) { }

```

# Diagnostics
```
invalid.ts:3:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
    1 │ // should generate diagnostics
    2 │ 
  > 3 │ try { /* ... */ } catch (unused: any) { }
      │                         ^^^^^^^^^^^^^
    4 │ 
    5 │ try { /* ... */ } catch (_unused: any) { }
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    3 │ try·{·/*·...·*/·}·catch·(unused:·any)·{·}
      │                         --------------   

```

```
invalid.ts:5:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
    3 │ try { /* ... */ } catch (unused: any) { }
    4 │ 
  > 5 │ try { /* ... */ } catch (_unused: any) { }
      │                         ^^^^^^^^^^^^^^
    6 │ 
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    5 │ try·{·/*·...·*/·}·catch·(_unused:·any)·{·}
      │                         ---------------   

```

```
invalid.ts:8:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
   > 8 │ try { /* ... */ } catch ({ unused }: any) { }
       │                         ^^^^^^^^^^^^^^^^^
     9 │ 
    10 │ try { /* ... */ } catch ({ _unused }: any) { }
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    8 │ try·{·/*·...·*/·}·catch·({·unused·}:·any)·{·}
      │                         ------------------   

```

```
invalid.ts:10:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
     8 │ try { /* ... */ } catch ({ unused }: any) { }
     9 │ 
  > 10 │ try { /* ... */ } catch ({ _unused }: any) { }
       │                         ^^^^^^^^^^^^^^^^^^
    11 │ 
    12 │ try { /* ... */ } catch ({ unused, _unused }: any) { }
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    10 │ try·{·/*·...·*/·}·catch·({·_unused·}:·any)·{·}
       │                         -------------------   

```

```
invalid.ts:12:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
    10 │ try { /* ... */ } catch ({ _unused }: any) { }
    11 │ 
  > 12 │ try { /* ... */ } catch ({ unused, _unused }: any) { }
       │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    13 │ 
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    12 │ try·{·/*·...·*/·}·catch·({·unused,·_unused·}:·any)·{·}
       │                         ---------------------------   

```

```
invalid.ts:15:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
  > 15 │ try { /* ... */ } catch (/* leading inner */ unused: any /* trailing inner */) { }
       │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    16 │ 
    17 │ try { /* ... */ } catch /* leading outer */ (unused: any) /* trailing outer */ { }
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    15 │ try·{·/*·...·*/·}·catch·(/*·leading·inner·*/·unused:·any·/*·trailing·inner·*/)·{·}
       │                         -------------------------------------------------------   

```

```
invalid.ts:17:45 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
    15 │ try { /* ... */ } catch (/* leading inner */ unused: any /* trailing inner */) { }
    16 │ 
  > 17 │ try { /* ... */ } catch /* leading outer */ (unused: any) /* trailing outer */ { }
       │                                             ^^^^^^^^^^^^^
    18 │ 
    19 │ try { /* ... */ } catch /* leading outer */ (/* leading inner */ unused: any /* trailing inner */) /* trailing outer */ { }
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    15 15 │   try { /* ... */ } catch (/* leading inner */ unused: any /* trailing inner */) { }
    16 16 │   
    17    │ - try·{·/*·...·*/·}·catch·/*·leading·outer·*/·(unused:·any)·/*·trailing·outer·*/·{·}
       17 │ + try·{·/*·...·*/·}·catch·/*·leading·outer·*/·/*·trailing·outer·*/·{·}
    18 18 │   
    19 19 │   try { /* ... */ } catch /* leading outer */ (/* leading inner */ unused: any /* trailing inner */) /* trailing outer */ { }
  

```

```
invalid.ts:19:45 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
    17 │ try { /* ... */ } catch /* leading outer */ (unused: any) /* trailing outer */ { }
    18 │ 
  > 19 │ try { /* ... */ } catch /* leading outer */ (/* leading inner */ unused: any /* trailing inner */) /* trailing outer */ { }
       │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    20 │ 
    21 │ try { /* ... */ } catch /* leading outer */ (/* leading inner 1 */ { /* leading inner 2 */ unused: any /* trailing inner 2 */ } /* trailing inner 1 */) /* trailing outer */ { }
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    17 17 │   try { /* ... */ } catch /* leading outer */ (unused: any) /* trailing outer */ { }
    18 18 │   
    19    │ - try·{·/*·...·*/·}·catch·/*·leading·outer·*/·(/*·leading·inner·*/·unused:·any·/*·trailing·inner·*/)·/*·trailing·outer·*/·{·}
       19 │ + try·{·/*·...·*/·}·catch·/*·leading·outer·*/·/*·trailing·outer·*/·{·}
    20 20 │   
    21 21 │   try { /* ... */ } catch /* leading outer */ (/* leading inner 1 */ { /* leading inner 2 */ unused: any /* trailing inner 2 */ } /* trailing inner 1 */) /* trailing outer */ { }
  

```

```
invalid.ts:21:45 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
    19 │ try { /* ... */ } catch /* leading outer */ (/* leading inner */ unused: any /* trailing inner */) /* trailing outer */ { }
    20 │ 
  > 21 │ try { /* ... */ } catch /* leading outer */ (/* leading inner 1 */ { /* leading inner 2 */ unused: any /* trailing inner 2 */ } /* trailing inner 1 */) /* trailing outer */ { }
       │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    22 │ 
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    19 19 │   try { /* ... */ } catch /* leading outer */ (/* leading inner */ unused: any /* trailing inner */) /* trailing outer */ { }
    20 20 │   
    21    │ - try·{·/*·...·*/·}·catch·/*·leading·outer·*/·(/*·leading·inner·1·*/·{·/*·leading·inner·2·*/·unused:·any·/*·trailing·inner·2·*/·}·/*·trailing·inner·1·*/)·/*·trailing·outer·*/·{·}
       21 │ + try·{·/*·...·*/·}·catch·/*·leading·outer·*/·/*·trailing·outer·*/·{·}
    22 22 │   
    23 23 │   
  

```

```
invalid.ts:24:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
  > 24 │ try { /* ... */ } catch ({ used: alias }: any) { }
       │                         ^^^^^^^^^^^^^^^^^^^^^^
    25 │ 
    26 │ try { /* ... */ } catch ({ nested: { unused } }: any) { }
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    24 │ try·{·/*·...·*/·}·catch·({·used:·alias·}:·any)·{·}
       │                         -----------------------   

```

```
invalid.ts:26:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
    24 │ try { /* ... */ } catch ({ used: alias }: any) { }
    25 │ 
  > 26 │ try { /* ... */ } catch ({ nested: { unused } }: any) { }
       │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    27 │ 
    28 │ try { /* ... */ } catch ({ ...rest }: any) { }
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    26 │ try·{·/*·...·*/·}·catch·({·nested:·{·unused·}·}:·any)·{·}
       │                         ------------------------------   

```

```
invalid.ts:28:25 lint/nursery/noUselessCatchBinding  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This catch binding is unused.
  
    26 │ try { /* ... */ } catch ({ nested: { unused } }: any) { }
    27 │ 
  > 28 │ try { /* ... */ } catch ({ ...rest }: any) { }
       │                         ^^^^^^^^^^^^^^^^^^
    29 │ 
  
  i Since ECMAScript 2019, catch bindings are optional; you can omit the catch binding if you don't need it.
  
  i Unsafe fix: Remove the catch binding.
  
    28 │ try·{·/*·...·*/·}·catch·({·...rest·}:·any)·{·}
       │                         -------------------   

```
