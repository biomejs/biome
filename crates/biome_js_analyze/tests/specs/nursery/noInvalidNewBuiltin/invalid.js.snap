---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```js
var foo = new Symbol("foo");
function bar() {
	return function Symbol() {};
}
var baz = new Symbol("baz");

var foo = new BigInt(9007199254740991);
function bar() {
	return function BigInt() {};
}
var baz = new BigInt(9007199254740991);

var foo = new Math();
function bar() {
	return function Math() {};
}
var baz = new Math();

var foo = new JSON();
function bar() {
	return function JSON() {};
}
var baz = new JSON();

var foo = new Reflect();
function bar() {
	return function Reflect() {};
}
var baz = new Reflect();

var foo = new Atomics();
function bar() {
	return function Atomics() {};
}
var baz = new Atomics();

var foo = new Intl();
function bar() {
	return function Intl() {};
}
var baz = new Intl();

```

# Diagnostics
```
invalid.js:1:11 lint/nursery/noInvalidNewBuiltin  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Symbol` cannot be called as a constructor.
  
  > 1 │ var foo = new Symbol("foo");
      │           ^^^^^^^^^^^^^^^^^
    2 │ function bar() {
    3 │ 	return function Symbol() {};
  
  i Suggested fix: Remove `new`.
  
    1 │ var·foo·=·new·Symbol("foo");
      │           ----              

```

```
invalid.js:5:11 lint/nursery/noInvalidNewBuiltin  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Symbol` cannot be called as a constructor.
  
    3 │ 	return function Symbol() {};
    4 │ }
  > 5 │ var baz = new Symbol("baz");
      │           ^^^^^^^^^^^^^^^^^
    6 │ 
    7 │ var foo = new BigInt(9007199254740991);
  
  i Suggested fix: Remove `new`.
  
    5 │ var·baz·=·new·Symbol("baz");
      │           ----              

```

```
invalid.js:7:11 lint/nursery/noInvalidNewBuiltin  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `BigInt` cannot be called as a constructor.
  
    5 │ var baz = new Symbol("baz");
    6 │ 
  > 7 │ var foo = new BigInt(9007199254740991);
      │           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    8 │ function bar() {
    9 │ 	return function BigInt() {};
  
  i Suggested fix: Remove `new`.
  
    7 │ var·foo·=·new·BigInt(9007199254740991);
      │           ----                         

```

```
invalid.js:11:11 lint/nursery/noInvalidNewBuiltin  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `BigInt` cannot be called as a constructor.
  
     9 │ 	return function BigInt() {};
    10 │ }
  > 11 │ var baz = new BigInt(9007199254740991);
       │           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 │ 
    13 │ var foo = new Math();
  
  i Suggested fix: Remove `new`.
  
    11 │ var·baz·=·new·BigInt(9007199254740991);
       │           ----                         

```

```
invalid.js:13:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Math` cannot be called as a constructor.
  
    11 │ var baz = new BigInt(9007199254740991);
    12 │ 
  > 13 │ var foo = new Math();
       │           ^^^^^^^^^^
    14 │ function bar() {
    15 │ 	return function Math() {};
  

```

```
invalid.js:17:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Math` cannot be called as a constructor.
  
    15 │ 	return function Math() {};
    16 │ }
  > 17 │ var baz = new Math();
       │           ^^^^^^^^^^
    18 │ 
    19 │ var foo = new JSON();
  

```

```
invalid.js:19:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `JSON` cannot be called as a constructor.
  
    17 │ var baz = new Math();
    18 │ 
  > 19 │ var foo = new JSON();
       │           ^^^^^^^^^^
    20 │ function bar() {
    21 │ 	return function JSON() {};
  

```

```
invalid.js:23:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `JSON` cannot be called as a constructor.
  
    21 │ 	return function JSON() {};
    22 │ }
  > 23 │ var baz = new JSON();
       │           ^^^^^^^^^^
    24 │ 
    25 │ var foo = new Reflect();
  

```

```
invalid.js:25:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Reflect` cannot be called as a constructor.
  
    23 │ var baz = new JSON();
    24 │ 
  > 25 │ var foo = new Reflect();
       │           ^^^^^^^^^^^^^
    26 │ function bar() {
    27 │ 	return function Reflect() {};
  

```

```
invalid.js:29:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Reflect` cannot be called as a constructor.
  
    27 │ 	return function Reflect() {};
    28 │ }
  > 29 │ var baz = new Reflect();
       │           ^^^^^^^^^^^^^
    30 │ 
    31 │ var foo = new Atomics();
  

```

```
invalid.js:31:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Atomics` cannot be called as a constructor.
  
    29 │ var baz = new Reflect();
    30 │ 
  > 31 │ var foo = new Atomics();
       │           ^^^^^^^^^^^^^
    32 │ function bar() {
    33 │ 	return function Atomics() {};
  

```

```
invalid.js:35:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Atomics` cannot be called as a constructor.
  
    33 │ 	return function Atomics() {};
    34 │ }
  > 35 │ var baz = new Atomics();
       │           ^^^^^^^^^^^^^
    36 │ 
    37 │ var foo = new Intl();
  

```

```
invalid.js:37:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Intl` cannot be called as a constructor.
  
    35 │ var baz = new Atomics();
    36 │ 
  > 37 │ var foo = new Intl();
       │           ^^^^^^^^^^
    38 │ function bar() {
    39 │ 	return function Intl() {};
  

```

```
invalid.js:41:11 lint/nursery/noInvalidNewBuiltin ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `Intl` cannot be called as a constructor.
  
    39 │ 	return function Intl() {};
    40 │ }
  > 41 │ var baz = new Intl();
       │           ^^^^^^^^^^
    42 │ 
  

```


