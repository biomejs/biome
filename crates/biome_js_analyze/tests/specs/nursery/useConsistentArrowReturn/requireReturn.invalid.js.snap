---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: requireReturn.invalid.js
---
# Input
```js


const returnsObjectArrow = () => ( { a: 1, b: 2 });


const returnsSequenceArrow = () => {
    return (a, b);
}


const returnsAwaitArrow = async () => {
    return await fetchData();
}



```

# Diagnostics
```
requireReturn.invalid.js:3:28 lint/nursery/useConsistentArrowReturn  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━

  ! This arrow function body should be a block statement.
  
  > 3 │ const returnsObjectArrow = () => ( { a: 1, b: 2 });
      │                            ^^^^^^^^^^^^^^^^^^^^^^^
    4 │ 
  
  i Safe fix: Add braces to the arrow function body.
  
     1  1 │   
     2  2 │   
     3    │ - const·returnsObjectArrow·=·()·=>·(·{·a:·1,·b:·2·});
        3 │ + const·returnsObjectArrow·=·()·=>·{
        4 │ + ····return·{·a:·1,·b:·2·};
        5 │ + };
     4  6 │   
     5  7 │   
  

```

```
requireReturn.invalid.js:6:30 lint/nursery/useConsistentArrowReturn  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━

  ! The body of this arrow function contains a single return statement.
  
  > 6 │ const returnsSequenceArrow = () => {
      │                              ^^^^^^^
  > 7 │     return (a, b);
  > 8 │ }
      │ ^
    9 │ 
  
  i Safe fix: Remove the return statement.
  
     4  4 │   
     5  5 │   
     6    │ - const·returnsSequenceArrow·=·()·=>·{
     7    │ - ····return·(a,·b);
     8    │ - }
        6 │ + const·returnsSequenceArrow·=·()·=>·(a,·b)
     9  7 │   
    10  8 │   
  

```

```
requireReturn.invalid.js:11:27 lint/nursery/useConsistentArrowReturn  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━

  ! The body of this arrow function contains a single return statement.
  
  > 11 │ const returnsAwaitArrow = async () => {
       │                           ^^^^^^^^^^^^^
  > 12 │     return await fetchData();
  > 13 │ }
       │ ^
    14 │ 
  
  i Safe fix: Remove the return statement.
  
     9  9 │   
    10 10 │   
    11    │ - const·returnsAwaitArrow·=·async·()·=>·{
    12    │ - ····return·await·fetchData();
    13    │ - }
       11 │ + const·returnsAwaitArrow·=·async·()·=>·await·fetchData()
    14 12 │   
    15 13 │   
  

```
