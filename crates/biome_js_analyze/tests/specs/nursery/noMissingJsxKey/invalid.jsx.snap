---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.jsx
---
# Input
```jsx
// should generate diagnostics
import { component$ } from "@builder.io/qwik";

export default component$(() => {
  const items = ["apple", "banana", "cherry"];

  return (
    <div>
      {/* Missing key in map */}
      {items.map(item => <li>{item}</li>)}
      
      {/* Missing key in forEach */}
      {items.forEach(item => <span>{item}</span>)}
      
      {/* Missing key in filter + map */}
      {items.filter(item => item.length > 5).map(item => <div>{item}</div>)}
      
      {/* Missing key in nested map */}
      {items.map(category => 
        category.split('').map(letter => <span>{letter}</span>)
      )}
      
      {/* Missing key in object map */}
      {Object.keys({a: 1, b: 2}).map(key => <div>{key}</div>)}
      
      {/* Missing key in array literal map */}
      {[1, 2, 3].map(num => <p>{num}</p>)}
    </div>
  );
}); 
```

# Diagnostics
```
invalid.jsx:10:26 lint/nursery/noMissingJsxKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Missing <Emphasis>key</Emphasis> prop for element in iterator.
  
     8 │     <div>
     9 │       {/* Missing key in map */}
  > 10 │       {items.map(item => <li>{item}</li>)}
       │                          ^^^^
    11 │       
    12 │       {/* Missing key in forEach */}
  

```

```
invalid.jsx:16:58 lint/nursery/noMissingJsxKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Missing <Emphasis>key</Emphasis> prop for element in iterator.
  
    15 │       {/* Missing key in filter + map */}
  > 16 │       {items.filter(item => item.length > 5).map(item => <div>{item}</div>)}
       │                                                          ^^^^^
    17 │       
    18 │       {/* Missing key in nested map */}
  

```

```
invalid.jsx:20:42 lint/nursery/noMissingJsxKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Missing <Emphasis>key</Emphasis> prop for element in iterator.
  
    18 │       {/* Missing key in nested map */}
    19 │       {items.map(category =>·
  > 20 │         category.split('').map(letter => <span>{letter}</span>)
       │                                          ^^^^^^
    21 │       )}
    22 │       
  

```

```
invalid.jsx:24:45 lint/nursery/noMissingJsxKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Missing <Emphasis>key</Emphasis> prop for element in iterator.
  
    23 │       {/* Missing key in object map */}
  > 24 │       {Object.keys({a: 1, b: 2}).map(key => <div>{key}</div>)}
       │                                             ^^^^^
    25 │       
    26 │       {/* Missing key in array literal map */}
  

```

```
invalid.jsx:27:29 lint/nursery/noMissingJsxKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Missing <Emphasis>key</Emphasis> prop for element in iterator.
  
    26 │       {/* Missing key in array literal map */}
  > 27 │       {[1, 2, 3].map(num => <p>{num}</p>)}
       │                             ^^^
    28 │     </div>
    29 │   );
  

```
