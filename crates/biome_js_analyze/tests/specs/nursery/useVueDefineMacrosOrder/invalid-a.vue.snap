---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid-a.vue
---
# Input
```ts
import { ref } from 'vue'

interface Foo {}

type Bar = 1

export type FooBar = Foo & Bar

debugger

const emit = defineEmits([])
defineModel()

withDefaults(defineNotProps({}), { a: 1 })

const count = ref(0)

```

# Diagnostics
```
invalid-a.vue:12:1 lint/nursery/useVueDefineMacrosOrder  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i defineModel macro is out of order.
  
    11 │ const emit = defineEmits([])
  > 12 │ defineModel()
       │ ^^^^^^^^^^^^^
    13 │ 
    14 │ withDefaults(defineNotProps({}), { a: 1 })
  
  i Macros defined in <script setup> should be ordered as follows: defineModel, defineProps, defineEmits
  
  i and be placed before any non-macro statements, except for type declarations, imports, exports or debugger statements.
  
  i Unsafe fix: Reorder macro defineModel.
  
     8  8 │   
     9  9 │   debugger
       10 │ + defineModel()
       11 │ + 
    10 12 │   
    11    │ - const·emit·=·defineEmits([])
    12    │ - defineModel()
       13 │ + const·emit·=·defineEmits([])
    13 14 │   
    14 15 │   withDefaults(defineNotProps({}), { a: 1 })
  

```
