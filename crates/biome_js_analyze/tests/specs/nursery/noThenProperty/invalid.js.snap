---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```js
// `object`
const foo = {then: 1}
const foo = {["then"]: 1}
const foo = {[`then`]: 1}
const foo = {["then"]() {}}
const foo = {[`then`]() {}}
// const THEN = "then";const foo = {[THEN]() {}}
const foo = {get then() {}}
const foo = {get ["then"]() {}}
const foo = {get [`then`]() {}}
// const THEN = "then";const foo = {get [THEN]() {}}

// `class`
class Foo {then}
const Foo = class {then}
class Foo {["then"]}
class Foo {[`then`]}
// const THEN = "then";class Foo {[THEN]}
class Foo {then() {}}
class Foo {["then"]() {}}
class Foo {[`then`]() {}}
// const THEN = "then";class Foo {[THEN]() {}}
class Foo {static then}
class Foo {static ["then"]}
class Foo {static [`then`]}
// const THEN = "then";class Foo {static [THEN]}
class Foo {static then() {}}
class Foo {static ["then"]() {}}
class Foo {static [`then`]() {}}
// const THEN = "then";class Foo {static [THEN]() {}}
class Foo {get then() {}}
class Foo {get ["then"]() {}}
class Foo {get [`then`]() {}}
// const THEN = "then";class Foo {get [THEN]() {}}
class Foo {set then(v) {}}
class Foo {set ["then"](v) {}}
class Foo {set [`then`](v) {}}
// const THEN = "then";class Foo {set [THEN](v) {}}
class Foo {static get then() {}}
class Foo {static get ["then"]() {}}
class Foo {static get [`then`]() {}}
// const THEN = "then";class Foo {static get [THEN]() {}}

// Assign
foo.then = 1
foo["then"] = 1
foo[`then`] = 1
foo.then += 1
foo.then ||= 1
foo.then ??= 1

// `{Object,Reflect}.defineProperty`
Object.defineProperty(foo, "then", 1)
Object.defineProperty(foo, `then`, 1)
// const THEN = "then";Object.defineProperty(foo, THEN, 1)
Reflect.defineProperty(foo, "then", 1)
Reflect.defineProperty(foo, `then`, 1)
// const THEN = "then";Reflect.defineProperty(foo, THEN, 1)

// `Object.fromEntries`
Object.fromEntries([["then", 1]])
Object.fromEntries([["then"]])
Object.fromEntries([[`then`, 1]])
// const THEN = "then";Object.fromEntries([[THEN, 1]])
Object.fromEntries([foo, ["then", 1]])

// `export`
const then = 1; export {then}
const notThen = 1; export {notThen as then}

// `export variables`
export const then = 1
```

# Diagnostics
```
invalid.js:2:14 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    1 │ // `object`
  > 2 │ const foo = {then: 1}
      │              ^^^^
    3 │ const foo = {["then"]: 1}
    4 │ const foo = {[`then`]: 1}
  

```

```
invalid.js:3:14 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    1 │ // `object`
    2 │ const foo = {then: 1}
  > 3 │ const foo = {["then"]: 1}
      │              ^^^^^^^^
    4 │ const foo = {[`then`]: 1}
    5 │ const foo = {["then"]() {}}
  

```

```
invalid.js:3:15 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    1 │ // `object`
    2 │ const foo = {then: 1}
  > 3 │ const foo = {["then"]: 1}
      │               ^^^^^^
    4 │ const foo = {[`then`]: 1}
    5 │ const foo = {["then"]() {}}
  

```

```
invalid.js:4:14 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    2 │ const foo = {then: 1}
    3 │ const foo = {["then"]: 1}
  > 4 │ const foo = {[`then`]: 1}
      │              ^^^^^^^^
    5 │ const foo = {["then"]() {}}
    6 │ const foo = {[`then`]() {}}
  

```

```
invalid.js:4:16 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    2 │ const foo = {then: 1}
    3 │ const foo = {["then"]: 1}
  > 4 │ const foo = {[`then`]: 1}
      │                ^^^^
    5 │ const foo = {["then"]() {}}
    6 │ const foo = {[`then`]() {}}
  

```

```
invalid.js:5:15 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    3 │ const foo = {["then"]: 1}
    4 │ const foo = {[`then`]: 1}
  > 5 │ const foo = {["then"]() {}}
      │               ^^^^^^
    6 │ const foo = {[`then`]() {}}
    7 │ // const THEN = "then";const foo = {[THEN]() {}}
  

```

```
invalid.js:6:14 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    4 │ const foo = {[`then`]: 1}
    5 │ const foo = {["then"]() {}}
  > 6 │ const foo = {[`then`]() {}}
      │              ^^^^^^^^
    7 │ // const THEN = "then";const foo = {[THEN]() {}}
    8 │ const foo = {get then() {}}
  

```

```
invalid.js:6:16 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    4 │ const foo = {[`then`]: 1}
    5 │ const foo = {["then"]() {}}
  > 6 │ const foo = {[`then`]() {}}
      │                ^^^^
    7 │ // const THEN = "then";const foo = {[THEN]() {}}
    8 │ const foo = {get then() {}}
  

```

```
invalid.js:8:18 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
     6 │ const foo = {[`then`]() {}}
     7 │ // const THEN = "then";const foo = {[THEN]() {}}
   > 8 │ const foo = {get then() {}}
       │                  ^^^^
     9 │ const foo = {get ["then"]() {}}
    10 │ const foo = {get [`then`]() {}}
  

```

```
invalid.js:9:18 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
     7 │ // const THEN = "then";const foo = {[THEN]() {}}
     8 │ const foo = {get then() {}}
   > 9 │ const foo = {get ["then"]() {}}
       │                  ^^^^^^^^
    10 │ const foo = {get [`then`]() {}}
    11 │ // const THEN = "then";const foo = {get [THEN]() {}}
  

```

```
invalid.js:9:19 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
     7 │ // const THEN = "then";const foo = {[THEN]() {}}
     8 │ const foo = {get then() {}}
   > 9 │ const foo = {get ["then"]() {}}
       │                   ^^^^^^
    10 │ const foo = {get [`then`]() {}}
    11 │ // const THEN = "then";const foo = {get [THEN]() {}}
  

```

```
invalid.js:10:18 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
     8 │ const foo = {get then() {}}
     9 │ const foo = {get ["then"]() {}}
  > 10 │ const foo = {get [`then`]() {}}
       │                  ^^^^^^^^
    11 │ // const THEN = "then";const foo = {get [THEN]() {}}
    12 │ 
  

```

```
invalid.js:10:20 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
     8 │ const foo = {get then() {}}
     9 │ const foo = {get ["then"]() {}}
  > 10 │ const foo = {get [`then`]() {}}
       │                    ^^^^
    11 │ // const THEN = "then";const foo = {get [THEN]() {}}
    12 │ 
  

```

```
invalid.js:14:12 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    13 │ // `class`
  > 14 │ class Foo {then}
       │            ^^^^
    15 │ const Foo = class {then}
    16 │ class Foo {["then"]}
  

```

```
invalid.js:15:20 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    13 │ // `class`
    14 │ class Foo {then}
  > 15 │ const Foo = class {then}
       │                    ^^^^
    16 │ class Foo {["then"]}
    17 │ class Foo {[`then`]}
  

```

```
invalid.js:16:12 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    14 │ class Foo {then}
    15 │ const Foo = class {then}
  > 16 │ class Foo {["then"]}
       │            ^^^^^^^^
    17 │ class Foo {[`then`]}
    18 │ // const THEN = "then";class Foo {[THEN]}
  

```

```
invalid.js:16:13 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    14 │ class Foo {then}
    15 │ const Foo = class {then}
  > 16 │ class Foo {["then"]}
       │             ^^^^^^
    17 │ class Foo {[`then`]}
    18 │ // const THEN = "then";class Foo {[THEN]}
  

```

```
invalid.js:17:12 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    15 │ const Foo = class {then}
    16 │ class Foo {["then"]}
  > 17 │ class Foo {[`then`]}
       │            ^^^^^^^^
    18 │ // const THEN = "then";class Foo {[THEN]}
    19 │ class Foo {then() {}}
  

```

```
invalid.js:17:14 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    15 │ const Foo = class {then}
    16 │ class Foo {["then"]}
  > 17 │ class Foo {[`then`]}
       │              ^^^^
    18 │ // const THEN = "then";class Foo {[THEN]}
    19 │ class Foo {then() {}}
  

```

```
invalid.js:19:12 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    17 │ class Foo {[`then`]}
    18 │ // const THEN = "then";class Foo {[THEN]}
  > 19 │ class Foo {then() {}}
       │            ^^^^
    20 │ class Foo {["then"]() {}}
    21 │ class Foo {[`then`]() {}}
  

```

```
invalid.js:20:12 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    18 │ // const THEN = "then";class Foo {[THEN]}
    19 │ class Foo {then() {}}
  > 20 │ class Foo {["then"]() {}}
       │            ^^^^^^^^
    21 │ class Foo {[`then`]() {}}
    22 │ // const THEN = "then";class Foo {[THEN]() {}}
  

```

```
invalid.js:20:13 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    18 │ // const THEN = "then";class Foo {[THEN]}
    19 │ class Foo {then() {}}
  > 20 │ class Foo {["then"]() {}}
       │             ^^^^^^
    21 │ class Foo {[`then`]() {}}
    22 │ // const THEN = "then";class Foo {[THEN]() {}}
  

```

```
invalid.js:21:12 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    19 │ class Foo {then() {}}
    20 │ class Foo {["then"]() {}}
  > 21 │ class Foo {[`then`]() {}}
       │            ^^^^^^^^
    22 │ // const THEN = "then";class Foo {[THEN]() {}}
    23 │ class Foo {static then}
  

```

```
invalid.js:21:14 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    19 │ class Foo {then() {}}
    20 │ class Foo {["then"]() {}}
  > 21 │ class Foo {[`then`]() {}}
       │              ^^^^
    22 │ // const THEN = "then";class Foo {[THEN]() {}}
    23 │ class Foo {static then}
  

```

```
invalid.js:23:19 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    21 │ class Foo {[`then`]() {}}
    22 │ // const THEN = "then";class Foo {[THEN]() {}}
  > 23 │ class Foo {static then}
       │                   ^^^^
    24 │ class Foo {static ["then"]}
    25 │ class Foo {static [`then`]}
  

```

```
invalid.js:24:19 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    22 │ // const THEN = "then";class Foo {[THEN]() {}}
    23 │ class Foo {static then}
  > 24 │ class Foo {static ["then"]}
       │                   ^^^^^^^^
    25 │ class Foo {static [`then`]}
    26 │ // const THEN = "then";class Foo {static [THEN]}
  

```

```
invalid.js:24:20 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    22 │ // const THEN = "then";class Foo {[THEN]() {}}
    23 │ class Foo {static then}
  > 24 │ class Foo {static ["then"]}
       │                    ^^^^^^
    25 │ class Foo {static [`then`]}
    26 │ // const THEN = "then";class Foo {static [THEN]}
  

```

```
invalid.js:25:19 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    23 │ class Foo {static then}
    24 │ class Foo {static ["then"]}
  > 25 │ class Foo {static [`then`]}
       │                   ^^^^^^^^
    26 │ // const THEN = "then";class Foo {static [THEN]}
    27 │ class Foo {static then() {}}
  

```

```
invalid.js:25:21 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    23 │ class Foo {static then}
    24 │ class Foo {static ["then"]}
  > 25 │ class Foo {static [`then`]}
       │                     ^^^^
    26 │ // const THEN = "then";class Foo {static [THEN]}
    27 │ class Foo {static then() {}}
  

```

```
invalid.js:27:19 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    25 │ class Foo {static [`then`]}
    26 │ // const THEN = "then";class Foo {static [THEN]}
  > 27 │ class Foo {static then() {}}
       │                   ^^^^
    28 │ class Foo {static ["then"]() {}}
    29 │ class Foo {static [`then`]() {}}
  

```

```
invalid.js:28:19 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    26 │ // const THEN = "then";class Foo {static [THEN]}
    27 │ class Foo {static then() {}}
  > 28 │ class Foo {static ["then"]() {}}
       │                   ^^^^^^^^
    29 │ class Foo {static [`then`]() {}}
    30 │ // const THEN = "then";class Foo {static [THEN]() {}}
  

```

```
invalid.js:28:20 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    26 │ // const THEN = "then";class Foo {static [THEN]}
    27 │ class Foo {static then() {}}
  > 28 │ class Foo {static ["then"]() {}}
       │                    ^^^^^^
    29 │ class Foo {static [`then`]() {}}
    30 │ // const THEN = "then";class Foo {static [THEN]() {}}
  

```

```
invalid.js:29:19 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    27 │ class Foo {static then() {}}
    28 │ class Foo {static ["then"]() {}}
  > 29 │ class Foo {static [`then`]() {}}
       │                   ^^^^^^^^
    30 │ // const THEN = "then";class Foo {static [THEN]() {}}
    31 │ class Foo {get then() {}}
  

```

```
invalid.js:29:21 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    27 │ class Foo {static then() {}}
    28 │ class Foo {static ["then"]() {}}
  > 29 │ class Foo {static [`then`]() {}}
       │                     ^^^^
    30 │ // const THEN = "then";class Foo {static [THEN]() {}}
    31 │ class Foo {get then() {}}
  

```

```
invalid.js:31:16 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    29 │ class Foo {static [`then`]() {}}
    30 │ // const THEN = "then";class Foo {static [THEN]() {}}
  > 31 │ class Foo {get then() {}}
       │                ^^^^
    32 │ class Foo {get ["then"]() {}}
    33 │ class Foo {get [`then`]() {}}
  

```

```
invalid.js:32:16 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    30 │ // const THEN = "then";class Foo {static [THEN]() {}}
    31 │ class Foo {get then() {}}
  > 32 │ class Foo {get ["then"]() {}}
       │                ^^^^^^^^
    33 │ class Foo {get [`then`]() {}}
    34 │ // const THEN = "then";class Foo {get [THEN]() {}}
  

```

```
invalid.js:32:17 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    30 │ // const THEN = "then";class Foo {static [THEN]() {}}
    31 │ class Foo {get then() {}}
  > 32 │ class Foo {get ["then"]() {}}
       │                 ^^^^^^
    33 │ class Foo {get [`then`]() {}}
    34 │ // const THEN = "then";class Foo {get [THEN]() {}}
  

```

```
invalid.js:33:16 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    31 │ class Foo {get then() {}}
    32 │ class Foo {get ["then"]() {}}
  > 33 │ class Foo {get [`then`]() {}}
       │                ^^^^^^^^
    34 │ // const THEN = "then";class Foo {get [THEN]() {}}
    35 │ class Foo {set then(v) {}}
  

```

```
invalid.js:33:18 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    31 │ class Foo {get then() {}}
    32 │ class Foo {get ["then"]() {}}
  > 33 │ class Foo {get [`then`]() {}}
       │                  ^^^^
    34 │ // const THEN = "then";class Foo {get [THEN]() {}}
    35 │ class Foo {set then(v) {}}
  

```

```
invalid.js:35:16 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    33 │ class Foo {get [`then`]() {}}
    34 │ // const THEN = "then";class Foo {get [THEN]() {}}
  > 35 │ class Foo {set then(v) {}}
       │                ^^^^
    36 │ class Foo {set ["then"](v) {}}
    37 │ class Foo {set [`then`](v) {}}
  

```

```
invalid.js:36:16 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    34 │ // const THEN = "then";class Foo {get [THEN]() {}}
    35 │ class Foo {set then(v) {}}
  > 36 │ class Foo {set ["then"](v) {}}
       │                ^^^^^^^^
    37 │ class Foo {set [`then`](v) {}}
    38 │ // const THEN = "then";class Foo {set [THEN](v) {}}
  

```

```
invalid.js:36:17 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    34 │ // const THEN = "then";class Foo {get [THEN]() {}}
    35 │ class Foo {set then(v) {}}
  > 36 │ class Foo {set ["then"](v) {}}
       │                 ^^^^^^
    37 │ class Foo {set [`then`](v) {}}
    38 │ // const THEN = "then";class Foo {set [THEN](v) {}}
  

```

```
invalid.js:37:16 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    35 │ class Foo {set then(v) {}}
    36 │ class Foo {set ["then"](v) {}}
  > 37 │ class Foo {set [`then`](v) {}}
       │                ^^^^^^^^
    38 │ // const THEN = "then";class Foo {set [THEN](v) {}}
    39 │ class Foo {static get then() {}}
  

```

```
invalid.js:37:18 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    35 │ class Foo {set then(v) {}}
    36 │ class Foo {set ["then"](v) {}}
  > 37 │ class Foo {set [`then`](v) {}}
       │                  ^^^^
    38 │ // const THEN = "then";class Foo {set [THEN](v) {}}
    39 │ class Foo {static get then() {}}
  

```

```
invalid.js:39:23 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    37 │ class Foo {set [`then`](v) {}}
    38 │ // const THEN = "then";class Foo {set [THEN](v) {}}
  > 39 │ class Foo {static get then() {}}
       │                       ^^^^
    40 │ class Foo {static get ["then"]() {}}
    41 │ class Foo {static get [`then`]() {}}
  

```

```
invalid.js:40:23 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    38 │ // const THEN = "then";class Foo {set [THEN](v) {}}
    39 │ class Foo {static get then() {}}
  > 40 │ class Foo {static get ["then"]() {}}
       │                       ^^^^^^^^
    41 │ class Foo {static get [`then`]() {}}
    42 │ // const THEN = "then";class Foo {static get [THEN]() {}}
  

```

```
invalid.js:40:24 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    38 │ // const THEN = "then";class Foo {set [THEN](v) {}}
    39 │ class Foo {static get then() {}}
  > 40 │ class Foo {static get ["then"]() {}}
       │                        ^^^^^^
    41 │ class Foo {static get [`then`]() {}}
    42 │ // const THEN = "then";class Foo {static get [THEN]() {}}
  

```

```
invalid.js:41:23 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to a class.
  
    39 │ class Foo {static get then() {}}
    40 │ class Foo {static get ["then"]() {}}
  > 41 │ class Foo {static get [`then`]() {}}
       │                       ^^^^^^^^
    42 │ // const THEN = "then";class Foo {static get [THEN]() {}}
    43 │ 
  

```

```
invalid.js:41:25 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    39 │ class Foo {static get then() {}}
    40 │ class Foo {static get ["then"]() {}}
  > 41 │ class Foo {static get [`then`]() {}}
       │                         ^^^^
    42 │ // const THEN = "then";class Foo {static get [THEN]() {}}
    43 │ 
  

```

```
invalid.js:45:1 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    44 │ // Assign
  > 45 │ foo.then = 1
       │ ^^^^^^^^
    46 │ foo["then"] = 1
    47 │ foo[`then`] = 1
  

```

```
invalid.js:46:1 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    44 │ // Assign
    45 │ foo.then = 1
  > 46 │ foo["then"] = 1
       │ ^^^^^^^^^^^
    47 │ foo[`then`] = 1
    48 │ foo.then += 1
  

```

```
invalid.js:47:1 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    45 │ foo.then = 1
    46 │ foo["then"] = 1
  > 47 │ foo[`then`] = 1
       │ ^^^^^^^^^^^
    48 │ foo.then += 1
    49 │ foo.then ||= 1
  

```

```
invalid.js:48:1 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    46 │ foo["then"] = 1
    47 │ foo[`then`] = 1
  > 48 │ foo.then += 1
       │ ^^^^^^^^
    49 │ foo.then ||= 1
    50 │ foo.then ??= 1
  

```

```
invalid.js:49:1 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    47 │ foo[`then`] = 1
    48 │ foo.then += 1
  > 49 │ foo.then ||= 1
       │ ^^^^^^^^
    50 │ foo.then ??= 1
    51 │ 
  

```

```
invalid.js:50:1 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    48 │ foo.then += 1
    49 │ foo.then ||= 1
  > 50 │ foo.then ??= 1
       │ ^^^^^^^^
    51 │ 
    52 │ // `{Object,Reflect}.defineProperty`
  

```

```
invalid.js:53:28 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    52 │ // `{Object,Reflect}.defineProperty`
  > 53 │ Object.defineProperty(foo, "then", 1)
       │                            ^^^^^^
    54 │ Object.defineProperty(foo, `then`, 1)
    55 │ // const THEN = "then";Object.defineProperty(foo, THEN, 1)
  

```

```
invalid.js:54:28 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    52 │ // `{Object,Reflect}.defineProperty`
    53 │ Object.defineProperty(foo, "then", 1)
  > 54 │ Object.defineProperty(foo, `then`, 1)
       │                            ^^^^^^
    55 │ // const THEN = "then";Object.defineProperty(foo, THEN, 1)
    56 │ Reflect.defineProperty(foo, "then", 1)
  

```

```
invalid.js:56:29 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    54 │ Object.defineProperty(foo, `then`, 1)
    55 │ // const THEN = "then";Object.defineProperty(foo, THEN, 1)
  > 56 │ Reflect.defineProperty(foo, "then", 1)
       │                             ^^^^^^
    57 │ Reflect.defineProperty(foo, `then`, 1)
    58 │ // const THEN = "then";Reflect.defineProperty(foo, THEN, 1)
  

```

```
invalid.js:57:29 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    55 │ // const THEN = "then";Object.defineProperty(foo, THEN, 1)
    56 │ Reflect.defineProperty(foo, "then", 1)
  > 57 │ Reflect.defineProperty(foo, `then`, 1)
       │                             ^^^^^^
    58 │ // const THEN = "then";Reflect.defineProperty(foo, THEN, 1)
    59 │ 
  

```

```
invalid.js:61:22 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    60 │ // `Object.fromEntries`
  > 61 │ Object.fromEntries([["then", 1]])
       │                      ^^^^^^
    62 │ Object.fromEntries([["then"]])
    63 │ Object.fromEntries([[`then`, 1]])
  

```

```
invalid.js:62:22 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    60 │ // `Object.fromEntries`
    61 │ Object.fromEntries([["then", 1]])
  > 62 │ Object.fromEntries([["then"]])
       │                      ^^^^^^
    63 │ Object.fromEntries([[`then`, 1]])
    64 │ // const THEN = "then";Object.fromEntries([[THEN, 1]])
  

```

```
invalid.js:63:22 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    61 │ Object.fromEntries([["then", 1]])
    62 │ Object.fromEntries([["then"]])
  > 63 │ Object.fromEntries([[`then`, 1]])
       │                      ^^^^^^
    64 │ // const THEN = "then";Object.fromEntries([[THEN, 1]])
    65 │ Object.fromEntries([foo, ["then", 1]])
  

```

```
invalid.js:65:27 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    63 │ Object.fromEntries([[`then`, 1]])
    64 │ // const THEN = "then";Object.fromEntries([[THEN, 1]])
  > 65 │ Object.fromEntries([foo, ["then", 1]])
       │                           ^^^^^^
    66 │ 
    67 │ // `export`
  

```

```
invalid.js:68:25 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not export `then`.
  
    67 │ // `export`
  > 68 │ const then = 1; export {then}
       │                         ^^^^
    69 │ const notThen = 1; export {notThen as then}
    70 │ 
  

```

```
invalid.js:69:39 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not export `then`.
  
    67 │ // `export`
    68 │ const then = 1; export {then}
  > 69 │ const notThen = 1; export {notThen as then}
       │                                       ^^^^
    70 │ 
    71 │ // `export variables`
  

```

```
invalid.js:72:14 lint/nursery/noThenProperty ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not add `then` to an object.
  
    71 │ // `export variables`
  > 72 │ export const then = 1
       │              ^^^^
  

```


