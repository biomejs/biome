---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```js
class A {
    static foo() {
        doSomething()
    }

    static bar() {
        this.foo()
    }

    static hello() {
        this.faux()
    }
    
    faux() { 
        return
    }
}

class B extends A {
    static foo() {
        super.foo()
    }

    faux() { 
        return
    }
}
```

# Diagnostics
```
invalid.js:7:9 lint/nursery/noThisInStatic ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected this.
  
    6 │     static bar() {
  > 7 │         this.foo()
      │         ^^^^
    8 │     }
    9 │ 
  
  i Function this.foo() is static, so `this.` refers to the class (the constructor) instance.
  
  i Instead of this.foo() use A.foo().
  

```

```
invalid.js:11:9 lint/nursery/noThisInStatic ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected this.
  
    10 │     static hello() {
  > 11 │         this.faux()
       │         ^^^^
    12 │     }
    13 │     
  
  i Function this.faux() is static, so `this.` refers to the class (the constructor) instance.
  
  i Instead of this.faux() use A.faux().
  

```

```
invalid.js:21:9 lint/nursery/noThisInStatic ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected super.
  
    19 │ class B extends A {
    20 │     static foo() {
  > 21 │         super.foo()
       │         ^^^^^
    22 │     }
    23 │ 
  
  i Function super.foo() is static, so `super.` refers to the class (the constructor) instance.
  
  i Instead of super.foo() use A.foo().
  

```


