---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: valid.js
---
# Input
```jsx
const foo = bar.trimStart()
const foo = bar.trimEnd()
bar.trimStart?.()
foo.trimStart()
foo.trimStart?.()
foo.trimEnd()
// Not `CallExpression`
new foo.trimLeft()
// Not `MemberExpression`
trimLeft()
// `callee.property` is not a `Identifier`
foo['trimLeft']()
// Computed
foo[trimLeft]()
// Not `trimLeft`/`trimRight`
foo.bar()
// More argument(s)
foo.trimLeft(extra)
foo.trimLeft(...argumentsArray)
// `trimLeft` is in argument
foo.bar(trimLeft)
foo.bar(foo.trimLeft)
// `trimLeft` is in `MemberExpression.object`
trimLeft.foo()
foo.trimLeft.bar()
bar['trimStart']()
bar["trimStart"]()
bar[`trimStart`]()


```

# Diagnostics
```
valid.js:1:17 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use trimStart instead of trimStart.
  
  > 1 │ const foo = bar.trimStart()
      │                 ^^^^^^^^^
    2 │ const foo = bar.trimEnd()
    3 │ bar.trimStart?.()
  
  i trimStart() is an alias for trimStart.
  
  i Safe fix: Replace trimStart with trimStart.
  
  

```

```
valid.js:2:17 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use trimEnd instead of trimEnd.
  
    1 │ const foo = bar.trimStart()
  > 2 │ const foo = bar.trimEnd()
      │                 ^^^^^^^
    3 │ bar.trimStart?.()
    4 │ foo.trimStart()
  
  i trimEnd() is an alias for trimEnd.
  
  i Safe fix: Replace trimEnd with trimEnd.
  
  

```

```
valid.js:3:5 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use trimStart instead of trimStart.
  
    1 │ const foo = bar.trimStart()
    2 │ const foo = bar.trimEnd()
  > 3 │ bar.trimStart?.()
      │     ^^^^^^^^^
    4 │ foo.trimStart()
    5 │ foo.trimStart?.()
  
  i trimStart() is an alias for trimStart.
  
  i Safe fix: Replace trimStart with trimStart.
  
  

```

```
valid.js:4:5 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use trimStart instead of trimStart.
  
    2 │ const foo = bar.trimEnd()
    3 │ bar.trimStart?.()
  > 4 │ foo.trimStart()
      │     ^^^^^^^^^
    5 │ foo.trimStart?.()
    6 │ foo.trimEnd()
  
  i trimStart() is an alias for trimStart.
  
  i Safe fix: Replace trimStart with trimStart.
  
  

```

```
valid.js:5:5 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use trimStart instead of trimStart.
  
    3 │ bar.trimStart?.()
    4 │ foo.trimStart()
  > 5 │ foo.trimStart?.()
      │     ^^^^^^^^^
    6 │ foo.trimEnd()
    7 │ // Not `CallExpression`
  
  i trimStart() is an alias for trimStart.
  
  i Safe fix: Replace trimStart with trimStart.
  
  

```

```
valid.js:6:5 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use trimEnd instead of trimEnd.
  
    4 │ foo.trimStart()
    5 │ foo.trimStart?.()
  > 6 │ foo.trimEnd()
      │     ^^^^^^^
    7 │ // Not `CallExpression`
    8 │ new foo.trimLeft()
  
  i trimEnd() is an alias for trimEnd.
  
  i Safe fix: Replace trimEnd with trimEnd.
  
  

```

```
valid.js:12:5 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use 'trimStart' instead of 'trimLeft'.
  
    10 │ trimLeft()
    11 │ // `callee.property` is not a `Identifier`
  > 12 │ foo['trimLeft']()
       │     ^^^^^^^^^^
    13 │ // Computed
    14 │ foo[trimLeft]()
  
  i 'trimLeft'() is an alias for 'trimStart'.
  
  i Safe fix: Replace 'trimLeft' with 'trimStart'.
  
    10 10 │   trimLeft()
    11 11 │   // `callee.property` is not a `Identifier`
    12    │ - foo['trimLeft']()
       12 │ + foo['trimStart']()
    13 13 │   // Computed
    14 14 │   foo[trimLeft]()
  

```

```
valid.js:16:5 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use bar instead of bar.
  
    14 │ foo[trimLeft]()
    15 │ // Not `trimLeft`/`trimRight`
  > 16 │ foo.bar()
       │     ^^^
    17 │ // More argument(s)
    18 │ foo.trimLeft(extra)
  
  i bar() is an alias for bar.
  
  i Safe fix: Replace bar with bar.
  
  

```

```
valid.js:24:10 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use foo instead of foo.
  
    22 │ foo.bar(foo.trimLeft)
    23 │ // `trimLeft` is in `MemberExpression.object`
  > 24 │ trimLeft.foo()
       │          ^^^
    25 │ foo.trimLeft.bar()
    26 │ bar['trimStart']()
  
  i foo() is an alias for foo.
  
  i Safe fix: Replace foo with foo.
  
  

```

```
valid.js:25:14 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use bar instead of bar.
  
    23 │ // `trimLeft` is in `MemberExpression.object`
    24 │ trimLeft.foo()
  > 25 │ foo.trimLeft.bar()
       │              ^^^
    26 │ bar['trimStart']()
    27 │ bar["trimStart"]()
  
  i bar() is an alias for bar.
  
  i Safe fix: Replace bar with bar.
  
  

```

```
valid.js:26:5 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use 'trimStart' instead of 'trimStart'.
  
    24 │ trimLeft.foo()
    25 │ foo.trimLeft.bar()
  > 26 │ bar['trimStart']()
       │     ^^^^^^^^^^^
    27 │ bar["trimStart"]()
    28 │ bar[`trimStart`]()
  
  i 'trimStart'() is an alias for 'trimStart'.
  
  i Safe fix: Replace 'trimStart' with 'trimStart'.
  
  

```

```
valid.js:27:5 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use "trimStart" instead of "trimStart".
  
    25 │ foo.trimLeft.bar()
    26 │ bar['trimStart']()
  > 27 │ bar["trimStart"]()
       │     ^^^^^^^^^^^
    28 │ bar[`trimStart`]()
    29 │ 
  
  i "trimStart"() is an alias for "trimStart".
  
  i Safe fix: Replace "trimStart" with "trimStart".
  
  

```

```
valid.js:28:6 lint/nursery/useTrimStartEnd  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use trimStart instead of trimStart.
  
    26 │ bar['trimStart']()
    27 │ bar["trimStart"]()
  > 28 │ bar[`trimStart`]()
       │      ^^^^^^^^^
    29 │ 
  
  i trimStart() is an alias for trimStart.
  
  i Safe fix: Replace trimStart with trimStart.
  
  

```
