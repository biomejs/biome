---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: expect-mixed-chains.js
---
# Input
```js
// Invalid: sync expect without async modifiers should trigger the rule
await expect(1).toBe(1);
await expect(value).toEqual(expectedValue);
await expect(str).toMatch(/pattern/);
await expect(arr).toHaveLength(3);

// Invalid: expect.soft with sync matcher (soft doesn't make it async)
await expect.soft(value).toBe(123);


```

# Diagnostics
```
expect-mixed-chains.js:2:1 lint/nursery/noPlaywrightUselessAwait  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━

  i Unnecessary await expression.
  
    1 │ // Invalid: sync expect without async modifiers should trigger the rule
  > 2 │ await expect(1).toBe(1);
      │ ^^^^^^^^^^^^^^^^^^^^^^^
    3 │ await expect(value).toEqual(expectedValue);
    4 │ await expect(str).toMatch(/pattern/);
  
  i This method does not return a Promise.
  
  i Remove the await keyword.
  
  i Safe fix: Remove unnecessary await
  
    2 │ await·expect(1).toBe(1);
      │ ------                  

```

```
expect-mixed-chains.js:3:1 lint/nursery/noPlaywrightUselessAwait  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━

  i Unnecessary await expression.
  
    1 │ // Invalid: sync expect without async modifiers should trigger the rule
    2 │ await expect(1).toBe(1);
  > 3 │ await expect(value).toEqual(expectedValue);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 │ await expect(str).toMatch(/pattern/);
    5 │ await expect(arr).toHaveLength(3);
  
  i This method does not return a Promise.
  
  i Remove the await keyword.
  
  i Safe fix: Remove unnecessary await
  
    3 │ await·expect(value).toEqual(expectedValue);
      │ ------                                     

```

```
expect-mixed-chains.js:4:1 lint/nursery/noPlaywrightUselessAwait  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━

  i Unnecessary await expression.
  
    2 │ await expect(1).toBe(1);
    3 │ await expect(value).toEqual(expectedValue);
  > 4 │ await expect(str).toMatch(/pattern/);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    5 │ await expect(arr).toHaveLength(3);
    6 │ 
  
  i This method does not return a Promise.
  
  i Remove the await keyword.
  
  i Safe fix: Remove unnecessary await
  
    4 │ await·expect(str).toMatch(/pattern/);
      │ ------                               

```

```
expect-mixed-chains.js:5:1 lint/nursery/noPlaywrightUselessAwait  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━

  i Unnecessary await expression.
  
    3 │ await expect(value).toEqual(expectedValue);
    4 │ await expect(str).toMatch(/pattern/);
  > 5 │ await expect(arr).toHaveLength(3);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    6 │ 
    7 │ // Invalid: expect.soft with sync matcher (soft doesn't make it async)
  
  i This method does not return a Promise.
  
  i Remove the await keyword.
  
  i Safe fix: Remove unnecessary await
  
    5 │ await·expect(arr).toHaveLength(3);
      │ ------                            

```

```
expect-mixed-chains.js:8:1 lint/nursery/noPlaywrightUselessAwait  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━

  i Unnecessary await expression.
  
    7 │ // Invalid: expect.soft with sync matcher (soft doesn't make it async)
  > 8 │ await expect.soft(value).toBe(123);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    9 │ 
  
  i This method does not return a Promise.
  
  i Remove the await keyword.
  
  i Safe fix: Remove unnecessary await
  
    8 │ await·expect.soft(value).toBe(123);
      │ ------                             

```
