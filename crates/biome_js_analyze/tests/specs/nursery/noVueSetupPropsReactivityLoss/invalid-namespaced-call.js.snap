---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid-namespaced-call.js
---
# Input
```js
// namespaced call without proper import should be invalid
export default {
  setup(props) {
    const { qux } = SomeLib.toRefs(props);
    return () => h('div', qux.value)
  }
}
```

# Diagnostics
```
invalid-namespaced-call.js:4:11 lint/nursery/noVueSetupPropsReactivityLoss ━━━━━━━━━━━━━━━━━━━━━━━━━

  i Destructuring `props` in the root scope of `setup` loses reactivity.
  
    2 │ export default {
    3 │   setup(props) {
  > 4 │     const { qux } = SomeLib.toRefs(props);
      │           ^^^^^^^
    5 │     return () => h('div', qux.value)
    6 │   }
  
  i The `props` parameter is defined here.
  
    1 │ // namespaced call without proper import should be invalid
    2 │ export default {
  > 3 │   setup(props) {
      │         ^^^^^
    4 │     const { qux } = SomeLib.toRefs(props);
    5 │     return () => h('div', qux.value)
  
  i To preserve reactivity, access props as properties: `props.propertyName`.
  
  i Alternatively, use `toRefs(props)` or `toRef(props, 'key')` to create reactive refs.
  

```
