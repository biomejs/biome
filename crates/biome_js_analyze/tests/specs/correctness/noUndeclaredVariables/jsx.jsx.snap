---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: jsx.jsx
---
# Input
```jsx
function App({ children }) {
	const h = () => {};
	return <div>{children}</div>;
}

<></>;
<App />;
<App>abc</App>;

```

# Diagnostics
```
jsx.jsx:6:1 lint/correctness/noUndeclaredVariables ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The Fragment variable is undeclared.
  
    4 │ }
    5 │ 
  > 6 │ <></>;
      │ ^
    7 │ <App />;
    8 │ <App>abc</App>;
  
  i By default, Biome recognizes browser and Node.js globals.
    You can ignore more globals using the javascript.globals configuration.
  

```

```
jsx.jsx:7:2 lint/correctness/noUndeclaredVariables ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The h variable is undeclared.
  
    6 │ <></>;
  > 7 │ <App />;
      │  ^^^
    8 │ <App>abc</App>;
    9 │ 
  
  i By default, Biome recognizes browser and Node.js globals.
    You can ignore more globals using the javascript.globals configuration.
  

```

```
jsx.jsx:8:2 lint/correctness/noUndeclaredVariables ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The h variable is undeclared.
  
    6 │ <></>;
    7 │ <App />;
  > 8 │ <App>abc</App>;
      │  ^^^
    9 │ 
  
  i By default, Biome recognizes browser and Node.js globals.
    You can ignore more globals using the javascript.globals configuration.
  

```
