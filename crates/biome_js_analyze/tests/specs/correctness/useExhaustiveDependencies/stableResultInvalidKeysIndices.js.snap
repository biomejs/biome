---
source: crates/biome_js_analyze/tests/spec_tests.rs
assertion_line: 134
expression: stableResultInvalidKeysIndices.js
---
# Input
```js
import { useCallback } from "react";
import { useDispatch } from "react-redux";

function MyComponent25() {
    const dispatch = useDispatch();
    const doAction = useCallback(() => dispatch(someAction()), []);
}

```

# Diagnostics
```
stableResultInvalidKeysIndices.options:12:49 deserialize ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected either property key names or array indices, not a combination of both
  
    10 │                             {
    11 │                                 "name": "otherCustomHook",
  > 12 │                                 "stableResult": ["key", 1]
       │                                                 ^^^^^^^^^^
    13 │                             }
    14 │                         ]
  

```

```
stableResultInvalidKeysIndices.js:6:22 lint/correctness/useExhaustiveDependencies  FIXABLE  ━━━━━━━━━━

  × This hook does not specify its dependency on dispatch.
  
    4 │ function MyComponent25() {
    5 │     const dispatch = useDispatch();
  > 6 │     const doAction = useCallback(() => dispatch(someAction()), []);
      │                      ^^^^^^^^^^^
    7 │ }
    8 │ 
  
  i This dependency is being used here, but is not specified in the hook dependency list.
  
    4 │ function MyComponent25() {
    5 │     const dispatch = useDispatch();
  > 6 │     const doAction = useCallback(() => dispatch(someAction()), []);
      │                                        ^^^^^^^^
    7 │ }
    8 │ 
  
  i Either include it or remove the dependency array.
  
  i Unsafe fix: Add the missing dependency to the list.
  
    6 │ ····const·doAction·=·useCallback(()·=>·dispatch(someAction()),·[dispatch]);
      │                                                                 ++++++++   

```
