---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: validTypeParam.ts
---
# Input
```ts
export function f<T extends U, U>(a: T) {
    return a;
}
export class C<T1, T2> {
    readonly prop: T1;
    method(a: T2) { return a; }
}
export type Alias<T> = { arr: T[] };
export type Mapped = { [K in keyof number]: K };
// See https://github.com/biomejs/biome/issues/639
export type Mapped2 = { [K in number]: number };
export type Inferred<T> = T extends (infer I)[] ? Set<I> : Set<unknown>;
// See https://github.com/biomejs/biome/issues/565
export type TestUnionType<T> = T extends (infer B)[] | infer B ? B : never;
```


