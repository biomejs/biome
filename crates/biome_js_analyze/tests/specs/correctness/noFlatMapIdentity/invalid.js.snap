---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```jsx
array.flatMap(function f(arr) { return arr });

array.flatMap(function (arr) { return arr });

array.flatMap((arr) => arr)

array.flatMap((arr) => {return arr})

array.flatMap(arr => arr)

array.flatMap(arr => {return arr})
```

# Diagnostics
```
invalid.js:1:1 lint/correctness/noFlatMapIdentity  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid unnecessary callback in flatMap call.
  
  > 1 │ array.flatMap(function f(arr) { return arr });
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2 │ 
    3 │ array.flatMap(function (arr) { return arr });
  
  i You can just use flat to flatten the array.
  
  i Safe fix: Replace unnecessary flatMap call to flat instead.
  
     1    │ - array.flatMap(function·f(arr)·{·return·arr·});
        1 │ + array.flat();
     2  2 │   
     3  3 │   array.flatMap(function (arr) { return arr });
  

```

```
invalid.js:3:1 lint/correctness/noFlatMapIdentity  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid unnecessary callback in flatMap call.
  
    1 │ array.flatMap(function f(arr) { return arr });
    2 │ 
  > 3 │ array.flatMap(function (arr) { return arr });
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 │ 
    5 │ array.flatMap((arr) => arr)
  
  i You can just use flat to flatten the array.
  
  i Safe fix: Replace unnecessary flatMap call to flat instead.
  
     1  1 │   array.flatMap(function f(arr) { return arr });
     2  2 │   
     3    │ - array.flatMap(function·(arr)·{·return·arr·});
        3 │ + array.flat();
     4  4 │   
     5  5 │   array.flatMap((arr) => arr)
  

```

```
invalid.js:5:1 lint/correctness/noFlatMapIdentity  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid unnecessary callback in flatMap call.
  
    3 │ array.flatMap(function (arr) { return arr });
    4 │ 
  > 5 │ array.flatMap((arr) => arr)
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    6 │ 
    7 │ array.flatMap((arr) => {return arr})
  
  i You can just use flat to flatten the array.
  
  i Safe fix: Replace unnecessary flatMap call to flat instead.
  
     3  3 │   array.flatMap(function (arr) { return arr });
     4  4 │   
     5    │ - array.flatMap((arr)·=>·arr)
        5 │ + array.flat()
     6  6 │   
     7  7 │   array.flatMap((arr) => {return arr})
  

```

```
invalid.js:7:1 lint/correctness/noFlatMapIdentity  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid unnecessary callback in flatMap call.
  
    5 │ array.flatMap((arr) => arr)
    6 │ 
  > 7 │ array.flatMap((arr) => {return arr})
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    8 │ 
    9 │ array.flatMap(arr => arr)
  
  i You can just use flat to flatten the array.
  
  i Safe fix: Replace unnecessary flatMap call to flat instead.
  
     5  5 │   array.flatMap((arr) => arr)
     6  6 │   
     7    │ - array.flatMap((arr)·=>·{return·arr})
        7 │ + array.flat()
     8  8 │   
     9  9 │   array.flatMap(arr => arr)
  

```

```
invalid.js:9:1 lint/correctness/noFlatMapIdentity  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid unnecessary callback in flatMap call.
  
     7 │ array.flatMap((arr) => {return arr})
     8 │ 
   > 9 │ array.flatMap(arr => arr)
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^
    10 │ 
    11 │ array.flatMap(arr => {return arr})
  
  i You can just use flat to flatten the array.
  
  i Safe fix: Replace unnecessary flatMap call to flat instead.
  
     7  7 │   array.flatMap((arr) => {return arr})
     8  8 │   
     9    │ - array.flatMap(arr·=>·arr)
        9 │ + array.flat()
    10 10 │   
    11 11 │   array.flatMap(arr => {return arr})
  

```

```
invalid.js:11:1 lint/correctness/noFlatMapIdentity  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid unnecessary callback in flatMap call.
  
     9 │ array.flatMap(arr => arr)
    10 │ 
  > 11 │ array.flatMap(arr => {return arr})
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i You can just use flat to flatten the array.
  
  i Safe fix: Replace unnecessary flatMap call to flat instead.
  
     9  9 │   array.flatMap(arr => arr)
    10 10 │   
    11    │ - array.flatMap(arr·=>·{return·arr})
       11 │ + array.flat()
  

```
