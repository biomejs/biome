---
source: crates/biome_js_analyze/tests/spec_tests.rs
assertion_line: 105
expression: valid.js
---
# Input
```js
if (a);
if (a == 0);
if (a = f());
if (a += 1);
if (a |= 1);
if (a |= true);
if (a |= false);
if (a &= 1);
if (a &= true);
if (a &= false);
if (a >>= 1);
if (a >>= true);
if (a >>= false);
if (a >>>= 1);
if (a ??= 1);
if (a ??= true);
if (a ??= false);
if (a ||= b);
if (a ||= false);
if (a ||= 0);
if (a ||= void 0);
if (+(a ||= 1));
if (f(a ||= true));
if ((a ||= 1) + 2);
if (1 + (a ||= true));
if (a ||= '' || false);
if (a ||= void 0 || null);
if ((a ||= false) || b);
if (a || (b ||= false));
if ((a ||= true) && b);
if (a && (b ||= true));
if (a &&= b);
if (a &&= true);
if (a &&= 1);
if (a &&= 'foo');
if ((a &&= '') + false);
if ('' + (a &&= null));
if (a &&= 1 && 2);
if ((a &&= true) && b);
if (a && (b &&= true));
if ((a &&= false) || b);
if (a || (b &&= false));
if (a ||= b ||= false);
if (a &&= b &&= true);
if (a ||= b &&= false);
if (a ||= b &&= true);
if (a &&= b ||= false);
if (a &&= b ||= true);
if (1, a);
if ('every' in []);
// Ignore for now, not sure why ESLint detect this as valid
// if (`///n${a}`) { }
if (`${a}`);
if (`${foo()}`);
if (`${a === 'b' && b === 'a'}`);
if (`foo${a}` === 'fooa');
if (tag`a`);
if (tag`${a}`);
if (+(a || true));
if (-(a || true));
if (~(a || 1));
if (+(a && 0) === +(b && 0));
while (~!a);
while (a = b);
while (`${a}`);
for (; x < 10;);
for (; ;);
for (; `${a}`;);
do { } while (x)
q > 0 ? 1 : 2;
`${a}` === a ? 1 : 2;
`foo${a}` === a ? 1 : 2;
tag`a` === a ? 1 : 2;
tag`${a}` === a ? 1 : 2;
while (x += 3) { };
while (tag`a`) { };
while (tag`${a}`) { };
// while (`///n${a}`) { }
if (typeof x === 'undefined') { };
if (`${typeof x}` === 'undefined') { };
if (a === 'str' && typeof b) { };
typeof a == typeof b;
typeof 'a' === 'string' || typeof b === 'string';
`${typeof 'a'}` === 'string' || `${typeof b}` === 'string';
if (void a || a);
if (a || void a);
if (xyz === 'str1' && abc === 'str2') { }
if (xyz === 'str1' || abc === 'str2') { }
if (xyz === 'str1' || abc === 'str2' && pqr === 5) { }
if (typeof abc === 'string' && abc === 'str2') { }
if (false || abc === 'str') { }
if (true && abc === 'str') { }
if (typeof 'str' && abc === 'str') { }
if (abc === 'str' || false || def === 'str') { }
if (true && abc === 'str' || def === 'str') { }
if (true && typeof abc === 'string') { }
if ('str1' && a) { }
if (a && 'str') { }
if ((foo || true) === 'baz') { }
if ((foo || 'bar') === 'baz') { }
if ((foo || 'bar') !== 'baz') { }
if ((foo || 'bar') == 'baz') { }
if ((foo || 'bar') != 'baz') { }
if ((foo || 233) > 666) { }
if ((foo || 233) < 666) { }
if ((foo || 233) >= 666) { }
if ((foo || 233) <= 666) { }
if ((key || 'k') in obj) { }
if ((foo || {}) instanceof obj) { }
if ((foo || 'bar' || 'bar') === 'bar');
if ((foo || 1n) === 'baz') { }
if (a && 0n || b);
if (1n && a) { };
if ('' + [y] === '' + [ty]) { }
if ('a' === '' + [ty]) { }
if ('' + [y, m, d] === 'a') { }
if ('' + [y, 'm'] === '' + [ty, 'tm']) { }
if ('' + [y, 'm'] === '' + ['ty']) { }
if ([,] in ($2)); else;
if ([...x] + '' === 'y') { }
function* foo() { while (true) { yield 'foo'; } }
function* foo() { for (; true;) { yield 'foo'; } }
function* foo() { do { yield 'foo'; } while (true) }
function* foo() { while (true) { while (true) { yield; } } }
function* foo() { for (; yield;) { } }
function* foo() { for (; ; yield) { } }
function* foo() { while (true) { function* foo() { yield; } yield; } }
function* foo() { for (let x = yield; x < 10; x++) { yield; } yield; }
function* foo() { for (let x = yield; ; x++) { yield; } }
if (new Number(x) + 1 === 2) { }
if ([a] == [b]) { }
if (+[...a]) { }
if (+[...[...a]]) { }
if (`${[...a]}`) { }
if (`${[a]}`) { }
if (+[a]) { }
if (0 - [a]) { }
if (1 * [a]) { }
if (Boolean(a)) { }
if (Boolean(...args)) { }
if (foo.Boolean(1)) { }
function foo(Boolean) { if (Boolean(12)) { } }
const Boolean = () => { }; if (Boolean(1)) { }
const undefined = 'lol'; if (undefined) { }
while (true);
function foo(Boolean) { while (true); }

```

# Diagnostics
```
valid.js:4:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    2 │ if (a == 0);
    3 │ if (a = f());
  > 4 │ if (a += 1);
      │     ^^^^^^
    5 │ if (a |= 1);
    6 │ if (a |= true);
  

```

```
valid.js:5:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    3 │ if (a = f());
    4 │ if (a += 1);
  > 5 │ if (a |= 1);
      │     ^^^^^^
    6 │ if (a |= true);
    7 │ if (a |= false);
  

```

```
valid.js:6:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    4 │ if (a += 1);
    5 │ if (a |= 1);
  > 6 │ if (a |= true);
      │     ^^^^^^^^^
    7 │ if (a |= false);
    8 │ if (a &= 1);
  

```

```
valid.js:7:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    5 │ if (a |= 1);
    6 │ if (a |= true);
  > 7 │ if (a |= false);
      │     ^^^^^^^^^^
    8 │ if (a &= 1);
    9 │ if (a &= true);
  

```

```
valid.js:8:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
     6 │ if (a |= true);
     7 │ if (a |= false);
   > 8 │ if (a &= 1);
       │     ^^^^^^
     9 │ if (a &= true);
    10 │ if (a &= false);
  

```

```
valid.js:9:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
     7 │ if (a |= false);
     8 │ if (a &= 1);
   > 9 │ if (a &= true);
       │     ^^^^^^^^^
    10 │ if (a &= false);
    11 │ if (a >>= 1);
  

```

```
valid.js:10:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
     8 │ if (a &= 1);
     9 │ if (a &= true);
  > 10 │ if (a &= false);
       │     ^^^^^^^^^^
    11 │ if (a >>= 1);
    12 │ if (a >>= true);
  

```

```
valid.js:11:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
     9 │ if (a &= true);
    10 │ if (a &= false);
  > 11 │ if (a >>= 1);
       │     ^^^^^^^
    12 │ if (a >>= true);
    13 │ if (a >>= false);
  

```

```
valid.js:12:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    10 │ if (a &= false);
    11 │ if (a >>= 1);
  > 12 │ if (a >>= true);
       │     ^^^^^^^^^^
    13 │ if (a >>= false);
    14 │ if (a >>>= 1);
  

```

```
valid.js:13:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    11 │ if (a >>= 1);
    12 │ if (a >>= true);
  > 13 │ if (a >>= false);
       │     ^^^^^^^^^^^
    14 │ if (a >>>= 1);
    15 │ if (a ??= 1);
  

```

```
valid.js:14:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    12 │ if (a >>= true);
    13 │ if (a >>= false);
  > 14 │ if (a >>>= 1);
       │     ^^^^^^^^
    15 │ if (a ??= 1);
    16 │ if (a ??= true);
  

```

```
valid.js:15:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    13 │ if (a >>= false);
    14 │ if (a >>>= 1);
  > 15 │ if (a ??= 1);
       │     ^^^^^^^
    16 │ if (a ??= true);
    17 │ if (a ??= false);
  

```

```
valid.js:16:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    14 │ if (a >>>= 1);
    15 │ if (a ??= 1);
  > 16 │ if (a ??= true);
       │     ^^^^^^^^^^
    17 │ if (a ??= false);
    18 │ if (a ||= b);
  

```

```
valid.js:17:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    15 │ if (a ??= 1);
    16 │ if (a ??= true);
  > 17 │ if (a ??= false);
       │     ^^^^^^^^^^^
    18 │ if (a ||= b);
    19 │ if (a ||= false);
  

```

```
valid.js:19:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    17 │ if (a ??= false);
    18 │ if (a ||= b);
  > 19 │ if (a ||= false);
       │     ^^^^^^^^^^^
    20 │ if (a ||= 0);
    21 │ if (a ||= void 0);
  

```

```
valid.js:20:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    18 │ if (a ||= b);
    19 │ if (a ||= false);
  > 20 │ if (a ||= 0);
       │     ^^^^^^^
    21 │ if (a ||= void 0);
    22 │ if (+(a ||= 1));
  

```

```
valid.js:21:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    19 │ if (a ||= false);
    20 │ if (a ||= 0);
  > 21 │ if (a ||= void 0);
       │     ^^^^^^^^^^^^
    22 │ if (+(a ||= 1));
    23 │ if (f(a ||= true));
  

```

```
valid.js:26:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    24 │ if ((a ||= 1) + 2);
    25 │ if (1 + (a ||= true));
  > 26 │ if (a ||= '' || false);
       │     ^^^^^^^^^^^^^^^^^
    27 │ if (a ||= void 0 || null);
    28 │ if ((a ||= false) || b);
  

```

```
valid.js:27:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    25 │ if (1 + (a ||= true));
    26 │ if (a ||= '' || false);
  > 27 │ if (a ||= void 0 || null);
       │     ^^^^^^^^^^^^^^^^^^^^
    28 │ if ((a ||= false) || b);
    29 │ if (a || (b ||= false));
  

```

```
valid.js:33:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    31 │ if (a && (b ||= true));
    32 │ if (a &&= b);
  > 33 │ if (a &&= true);
       │     ^^^^^^^^^^
    34 │ if (a &&= 1);
    35 │ if (a &&= 'foo');
  

```

```
valid.js:34:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    32 │ if (a &&= b);
    33 │ if (a &&= true);
  > 34 │ if (a &&= 1);
       │     ^^^^^^^
    35 │ if (a &&= 'foo');
    36 │ if ((a &&= '') + false);
  

```

```
valid.js:35:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    33 │ if (a &&= true);
    34 │ if (a &&= 1);
  > 35 │ if (a &&= 'foo');
       │     ^^^^^^^^^^^
    36 │ if ((a &&= '') + false);
    37 │ if ('' + (a &&= null));
  

```

```
valid.js:38:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    36 │ if ((a &&= '') + false);
    37 │ if ('' + (a &&= null));
  > 38 │ if (a &&= 1 && 2);
       │     ^^^^^^^^^^^^
    39 │ if ((a &&= true) && b);
    40 │ if (a && (b &&= true));
  

```

```
valid.js:43:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    41 │ if ((a &&= false) || b);
    42 │ if (a || (b &&= false));
  > 43 │ if (a ||= b ||= false);
       │     ^^^^^^^^^^^^^^^^^
    44 │ if (a &&= b &&= true);
    45 │ if (a ||= b &&= false);
  

```

```
valid.js:44:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    42 │ if (a || (b &&= false));
    43 │ if (a ||= b ||= false);
  > 44 │ if (a &&= b &&= true);
       │     ^^^^^^^^^^^^^^^^
    45 │ if (a ||= b &&= false);
    46 │ if (a ||= b &&= true);
  

```

```
valid.js:45:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    43 │ if (a ||= b ||= false);
    44 │ if (a &&= b &&= true);
  > 45 │ if (a ||= b &&= false);
       │     ^^^^^^^^^^^^^^^^^
    46 │ if (a ||= b &&= true);
    47 │ if (a &&= b ||= false);
  

```

```
valid.js:46:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    44 │ if (a &&= b &&= true);
    45 │ if (a ||= b &&= false);
  > 46 │ if (a ||= b &&= true);
       │     ^^^^^^^^^^^^^^^^
    47 │ if (a &&= b ||= false);
    48 │ if (a &&= b ||= true);
  

```

```
valid.js:47:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    45 │ if (a ||= b &&= false);
    46 │ if (a ||= b &&= true);
  > 47 │ if (a &&= b ||= false);
       │     ^^^^^^^^^^^^^^^^^
    48 │ if (a &&= b ||= true);
    49 │ if (1, a);
  

```

```
valid.js:48:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    46 │ if (a ||= b &&= true);
    47 │ if (a &&= b ||= false);
  > 48 │ if (a &&= b ||= true);
       │     ^^^^^^^^^^^^^^^^
    49 │ if (1, a);
    50 │ if ('every' in []);
  

```

```
valid.js:53:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    51 │ // Ignore for now, not sure why ESLint detect this as valid
    52 │ // if (`///n${a}`) { }
  > 53 │ if (`${a}`);
       │     ^^^^^^
    54 │ if (`${foo()}`);
    55 │ if (`${a === 'b' && b === 'a'}`);
  

```

```
valid.js:54:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    52 │ // if (`///n${a}`) { }
    53 │ if (`${a}`);
  > 54 │ if (`${foo()}`);
       │     ^^^^^^^^^^
    55 │ if (`${a === 'b' && b === 'a'}`);
    56 │ if (`foo${a}` === 'fooa');
  

```

```
valid.js:55:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    53 │ if (`${a}`);
    54 │ if (`${foo()}`);
  > 55 │ if (`${a === 'b' && b === 'a'}`);
       │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    56 │ if (`foo${a}` === 'fooa');
    57 │ if (tag`a`);
  

```

```
valid.js:56:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    54 │ if (`${foo()}`);
    55 │ if (`${a === 'b' && b === 'a'}`);
  > 56 │ if (`foo${a}` === 'fooa');
       │     ^^^^^^^^^^^^^^^^^^^^
    57 │ if (tag`a`);
    58 │ if (tag`${a}`);
  

```

```
valid.js:65:8 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    63 │ while (~!a);
    64 │ while (a = b);
  > 65 │ while (`${a}`);
       │        ^^^^^^
    66 │ for (; x < 10;);
    67 │ for (; ;);
  

```

```
valid.js:68:8 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    66 │ for (; x < 10;);
    67 │ for (; ;);
  > 68 │ for (; `${a}`;);
       │        ^^^^^^
    69 │ do { } while (x)
    70 │ q > 0 ? 1 : 2;
  

```

```
valid.js:75:8 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    73 │ tag`a` === a ? 1 : 2;
    74 │ tag`${a}` === a ? 1 : 2;
  > 75 │ while (x += 3) { };
       │        ^^^^^^
    76 │ while (tag`a`) { };
    77 │ while (tag`${a}`) { };
  

```

```
valid.js:80:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    78 │ // while (`///n${a}`) { }
    79 │ if (typeof x === 'undefined') { };
  > 80 │ if (`${typeof x}` === 'undefined') { };
       │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    81 │ if (a === 'str' && typeof b) { };
    82 │ typeof a == typeof b;
  

```

```
valid.js:134:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    132 │ if (+[...a]) { }
    133 │ if (+[...[...a]]) { }
  > 134 │ if (`${[...a]}`) { }
        │     ^^^^^^^^^^^
    135 │ if (`${[a]}`) { }
    136 │ if (+[a]) { }
  

```

```
valid.js:135:5 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    133 │ if (+[...[...a]]) { }
    134 │ if (`${[...a]}`) { }
  > 135 │ if (`${[a]}`) { }
        │     ^^^^^^^^
    136 │ if (+[a]) { }
    137 │ if (0 - [a]) { }
  

```

```
valid.js:144:30 lint/correctness/noConstantCondition ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected constant condition.
  
    142 │ function foo(Boolean) { if (Boolean(12)) { } }
    143 │ const Boolean = () => { }; if (Boolean(1)) { }
  > 144 │ const undefined = 'lol'; if (undefined) { }
        │                              ^^^^^^^^^
    145 │ while (true);
    146 │ function foo(Boolean) { while (true); }
  

```
