---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: assigments.jsx
---
# Input
```jsx
arr = <>Error</>;
err = <Fragment>Error</Fragment>;
err = <React.Fragment>Error</React.Fragment>;

```

# Diagnostics
```
assigments.jsx:1:7 lint/complexity/noUselessFragments  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This fragment is unnecessary.
  
  > 1 │ arr = <>Error</>;
      │       ^^^^^^^^^^
    2 │ err = <Fragment>Error</Fragment>;
    3 │ err = <React.Fragment>Error</React.Fragment>;
  
  i A fragment is redundant if it contains only one child, or if it is the child of a html element, and is not a keyed fragment.
  
  i Unsafe fix: Remove the Fragment
  
    1   │ - arr·=·<>Error</>;
      1 │ + arr·=·"Error";
    2 2 │   err = <Fragment>Error</Fragment>;
    3 3 │   err = <React.Fragment>Error</React.Fragment>;
  

```

```
assigments.jsx:2:7 lint/complexity/noUselessFragments  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This fragment is unnecessary.
  
    1 │ arr = <>Error</>;
  > 2 │ err = <Fragment>Error</Fragment>;
      │       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    3 │ err = <React.Fragment>Error</React.Fragment>;
    4 │ 
  
  i A fragment is redundant if it contains only one child, or if it is the child of a html element, and is not a keyed fragment.
  
  i Unsafe fix: Remove the Fragment
  
    1 1 │   arr = <>Error</>;
    2   │ - err·=·<Fragment>Error</Fragment>;
      2 │ + err·=·"Error";
    3 3 │   err = <React.Fragment>Error</React.Fragment>;
    4 4 │   
  

```

```
assigments.jsx:3:7 lint/complexity/noUselessFragments  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i This fragment is unnecessary.
  
    1 │ arr = <>Error</>;
    2 │ err = <Fragment>Error</Fragment>;
  > 3 │ err = <React.Fragment>Error</React.Fragment>;
      │       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 │ 
  
  i A fragment is redundant if it contains only one child, or if it is the child of a html element, and is not a keyed fragment.
  
  i Unsafe fix: Remove the Fragment
  
    1 1 │   arr = <>Error</>;
    2 2 │   err = <Fragment>Error</Fragment>;
    3   │ - err·=·<React.Fragment>Error</React.Fragment>;
      3 │ + err·=·"Error";
    4 4 │   
  

```
