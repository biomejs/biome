---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```jsx
function foo () {
	f();
	try {
		doSomethingThatMightThrowA();
		doSomethingThatMightThrowB();
	} catch (e) {
		throw e;
	}
	g();
}

for(let i = 0; i < 5; i++) {
	try {
		doSomethingThatMightThrowA();
		if (true) {
			doSomethingThatMightThrowB();
		}
	} catch (e) {
		throw e;
	}
}

try {
	doSomethingThatMightThrow();
} catch (e) {
	throw e;
} finally {
	cleanUp();
}

```

# Diagnostics
```
invalid.js:7:3 lint/complexity/noUselessCatch  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The catch clause that only rethrows the original error is useless.
  
    5 │ 		doSomethingThatMightThrowB();
    6 │ 	} catch (e) {
  > 7 │ 		throw e;
      │ 		^^^^^^^^
    8 │ 	}
    9 │ 	g();
  
  i An unnecessary catch clause can be confusing.
  
  i Unsafe fix: Remove the try/catch clause.
  
     1  1 │   function foo () {
     2  2 │   	f();
     3    │ - → try·{
     4    │ - → → doSomethingThatMightThrowA();
     5    │ - → → doSomethingThatMightThrowB();
     6    │ - → }·catch·(e)·{
     7    │ - → → throw·e;
     8    │ - → }
        3 │ + → → doSomethingThatMightThrowA();
        4 │ + → → doSomethingThatMightThrowB();
     9  5 │   	g();
    10  6 │   }
  

```

```
invalid.js:19:3 lint/complexity/noUselessCatch  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The catch clause that only rethrows the original error is useless.
  
    17 │ 		}
    18 │ 	} catch (e) {
  > 19 │ 		throw e;
       │ 		^^^^^^^^
    20 │ 	}
    21 │ }
  
  i An unnecessary catch clause can be confusing.
  
  i Unsafe fix: Remove the try/catch clause.
  
    11 11 │   
    12 12 │   for(let i = 0; i < 5; i++) {
    13    │ - → try·{
    14    │ - → → doSomethingThatMightThrowA();
       13 │ + → → doSomethingThatMightThrowA();
    15 14 │   		if (true) {
    16 15 │   			doSomethingThatMightThrowB();
    17    │ - → → }
    18    │ - → }·catch·(e)·{
    19    │ - → → throw·e;
    20    │ - → }
       16 │ + → → }
    21 17 │   }
    22 18 │   
  

```

```
invalid.js:26:2 lint/complexity/noUselessCatch  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The catch clause that only rethrows the original error is useless.
  
    24 │ 	doSomethingThatMightThrow();
    25 │ } catch (e) {
  > 26 │ 	throw e;
       │ 	^^^^^^^^
    27 │ } finally {
    28 │ 	cleanUp();
  
  i An unnecessary catch clause can be confusing.
  
  i Unsafe fix: Remove the catch clause.
  
    23 23 │   try {
    24 24 │   	doSomethingThatMightThrow();
    25    │ - }·catch·(e)·{
    26    │ - → throw·e;
    27    │ - }·finally·{
       25 │ + }·finally·{
    28 26 │   	cleanUp();
    29 27 │   }
  

```
