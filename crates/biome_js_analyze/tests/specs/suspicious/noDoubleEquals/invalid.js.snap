---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```js
const foo = `
text
${a == b}
`;

// existing comment
a == b;

if (a == b) {
    false;
}

if (/** some weird comment
    **/ a == b) {

    }

let a = `Output of "biome rage":
  formatter enabled: ${formatter == true}
  linter: ${linter}
`;

/* biome-ignore lint/suspicious/noDoubleEquals: <explanation> */
1 == 'a'

/** biome-ignore lint/suspicious/noDoubleEquals: <explanation> */
1 == 'a'

/**     biome-ignore lint/suspicious/noDoubleEquals: <explanation> */
1 == 'a'

/** biome-ignore     lint/suspicious/noDoubleEquals: <explanation> */
1 == 'a'

/** biome-ignore lint/suspicious/noDoubleEquals:    <explanation> */
1 == 'a'

//     biome-ignore lint/suspicious/noDoubleEquals: <explanation>
1 == 'a'

// biome-ignore     lint/suspicious/noDoubleEquals: <explanation>
1 == 'a'

// biome-ignore lint/suspicious/noDoubleEquals:    <explanation>
1 == 'a'

```

# Diagnostics
```
invalid.js:23:49 suppressions/incorrect ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! A suppression shouldn't have an <explanation> placeholder. Example of suppression: // biome-ignore lint: false positive
  
    21 │ `;
    22 │ 
  > 23 │ /* biome-ignore lint/suspicious/noDoubleEquals: <explanation> */
       │                                                 ^^^^^^^^^^^^^
    24 │ 1 == 'a'
    25 │ 
  

```

```
invalid.js:26:50 suppressions/incorrect ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! A suppression shouldn't have an <explanation> placeholder. Example of suppression: // biome-ignore lint: false positive
  
    24 │ 1 == 'a'
    25 │ 
  > 26 │ /** biome-ignore lint/suspicious/noDoubleEquals: <explanation> */
       │                                                  ^^^^^^^^^^^^^
    27 │ 1 == 'a'
    28 │ 
  

```

```
invalid.js:29:54 suppressions/incorrect ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! A suppression shouldn't have an <explanation> placeholder. Example of suppression: // biome-ignore lint: false positive
  
    27 │ 1 == 'a'
    28 │ 
  > 29 │ /**     biome-ignore lint/suspicious/noDoubleEquals: <explanation> */
       │                                                      ^^^^^^^^^^^^^
    30 │ 1 == 'a'
    31 │ 
  

```

```
invalid.js:32:54 suppressions/incorrect ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! A suppression shouldn't have an <explanation> placeholder. Example of suppression: // biome-ignore lint: false positive
  
    30 │ 1 == 'a'
    31 │ 
  > 32 │ /** biome-ignore     lint/suspicious/noDoubleEquals: <explanation> */
       │                                                      ^^^^^^^^^^^^^
    33 │ 1 == 'a'
    34 │ 
  

```

```
invalid.js:35:53 suppressions/incorrect ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! A suppression shouldn't have an <explanation> placeholder. Example of suppression: // biome-ignore lint: false positive
  
    33 │ 1 == 'a'
    34 │ 
  > 35 │ /** biome-ignore lint/suspicious/noDoubleEquals:    <explanation> */
       │                                                     ^^^^^^^^^^^^^
    36 │ 1 == 'a'
    37 │ 
  

```

```
invalid.js:38:53 suppressions/incorrect ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! A suppression shouldn't have an <explanation> placeholder. Example of suppression: // biome-ignore lint: false positive
  
    36 │ 1 == 'a'
    37 │ 
  > 38 │ //     biome-ignore lint/suspicious/noDoubleEquals: <explanation>
       │                                                     ^^^^^^^^^^^^^
    39 │ 1 == 'a'
    40 │ 
  

```

```
invalid.js:41:53 suppressions/incorrect ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! A suppression shouldn't have an <explanation> placeholder. Example of suppression: // biome-ignore lint: false positive
  
    39 │ 1 == 'a'
    40 │ 
  > 41 │ // biome-ignore     lint/suspicious/noDoubleEquals: <explanation>
       │                                                     ^^^^^^^^^^^^^
    42 │ 1 == 'a'
    43 │ 
  

```

```
invalid.js:44:52 suppressions/incorrect ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! A suppression shouldn't have an <explanation> placeholder. Example of suppression: // biome-ignore lint: false positive
  
    42 │ 1 == 'a'
    43 │ 
  > 44 │ // biome-ignore lint/suspicious/noDoubleEquals:    <explanation>
       │                                                    ^^^^^^^^^^^^^
    45 │ 1 == 'a'
    46 │ 
  

```

```
invalid.js:3:5 lint/suspicious/noDoubleEquals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Using == may be unsafe if you are relying on type coercion.
  
    1 │ const foo = `
    2 │ text
  > 3 │ ${a == b}
      │     ^^
    4 │ `;
    5 │ 
  
  i == is only allowed when comparing against null.
  
  i Unsafe fix: Use === instead.
  
    3 │ ${a·===·b}
      │       +   

```

```
invalid.js:7:3 lint/suspicious/noDoubleEquals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Using == may be unsafe if you are relying on type coercion.
  
    6 │ // existing comment
  > 7 │ a == b;
      │   ^^
    8 │ 
    9 │ if (a == b) {
  
  i == is only allowed when comparing against null.
  
  i Unsafe fix: Use === instead.
  
    7 │ a·===·b;
      │     +   

```

```
invalid.js:9:7 lint/suspicious/noDoubleEquals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Using == may be unsafe if you are relying on type coercion.
  
     7 │ a == b;
     8 │ 
   > 9 │ if (a == b) {
       │       ^^
    10 │     false;
    11 │ }
  
  i == is only allowed when comparing against null.
  
  i Unsafe fix: Use === instead.
  
    9 │ if·(a·===·b)·{
      │         +     

```

```
invalid.js:14:11 lint/suspicious/noDoubleEquals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Using == may be unsafe if you are relying on type coercion.
  
    13 │ if (/** some weird comment
  > 14 │     **/ a == b) {
       │           ^^
    15 │ 
    16 │     }
  
  i == is only allowed when comparing against null.
  
  i Unsafe fix: Use === instead.
  
    14 │ ····**/·a·===·b)·{
       │             +     

```

```
invalid.js:19:34 lint/suspicious/noDoubleEquals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Using == may be unsafe if you are relying on type coercion.
  
    18 │ let a = `Output of "biome rage":
  > 19 │   formatter enabled: ${formatter == true}
       │                                  ^^
    20 │   linter: ${linter}
    21 │ `;
  
  i == is only allowed when comparing against null.
  
  i Unsafe fix: Use === instead.
  
    19 │ ··formatter·enabled:·${formatter·===·true}
       │                                    +      

```
