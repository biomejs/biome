---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```css
a {
    prop1: value;
    prop2: value;
}

a {
    prop1: 1px;
}

a {
    prop1: a();
}

a {
    prop1: a(1);
}

a {
    prop1: 2/3;
}

a {
    prop1: --custom;
}


```


## AST

```
CssRoot {
    bom_token: missing (optional),
    rules: CssRuleList [
        CssRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@0..2 "a" [] [Whitespace(" ")],
                        },
                    },
                    sub_selectors: CssSubSelectorList [],
                },
            ],
            block: CssBlock {
                l_curly_token: L_CURLY@2..3 "{" [] [],
                declaration_list: CssDeclarationList [
                    CssDeclaration {
                        name: CssIdentifier {
                            value_token: IDENT@3..13 "prop1" [Newline("\n"), Whitespace("    ")] [],
                        },
                        colon_token: COLON@13..15 ":" [] [Whitespace(" ")],
                        value: CssIdentifier {
                            value_token: IDENT@15..20 "value" [] [],
                        },
                        important: missing (optional),
                    },
                    SEMICOLON@20..21 ";" [] [],
                    CssDeclaration {
                        name: CssIdentifier {
                            value_token: IDENT@21..31 "prop2" [Newline("\n"), Whitespace("    ")] [],
                        },
                        colon_token: COLON@31..33 ":" [] [Whitespace(" ")],
                        value: CssIdentifier {
                            value_token: IDENT@33..38 "value" [] [],
                        },
                        important: missing (optional),
                    },
                    SEMICOLON@38..39 ";" [] [],
                ],
                r_curly_token: R_CURLY@39..41 "}" [Newline("\n")] [],
            },
        },
        CssRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@41..45 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                        },
                    },
                    sub_selectors: CssSubSelectorList [],
                },
            ],
            block: CssBlock {
                l_curly_token: L_CURLY@45..46 "{" [] [],
                declaration_list: CssDeclarationList [
                    CssDeclaration {
                        name: CssIdentifier {
                            value_token: IDENT@46..56 "prop1" [Newline("\n"), Whitespace("    ")] [],
                        },
                        colon_token: COLON@56..58 ":" [] [Whitespace(" ")],
                        value: CssDimension {
                            value: CssNumber {
                                value_token: CSS_NUMBER_LITERAL@58..59 "1" [] [],
                            },
                            unit: CssIdentifier {
                                value_token: IDENT@59..61 "px" [] [],
                            },
                        },
                        important: missing (optional),
                    },
                    SEMICOLON@61..62 ";" [] [],
                ],
                r_curly_token: R_CURLY@62..64 "}" [Newline("\n")] [],
            },
        },
        CssRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@64..68 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                        },
                    },
                    sub_selectors: CssSubSelectorList [],
                },
            ],
            block: CssBlock {
                l_curly_token: L_CURLY@68..69 "{" [] [],
                declaration_list: CssDeclarationList [
                    CssDeclaration {
                        name: CssIdentifier {
                            value_token: IDENT@69..79 "prop1" [Newline("\n"), Whitespace("    ")] [],
                        },
                        colon_token: COLON@79..81 ":" [] [Whitespace(" ")],
                        value: CssAnyFunction {
                            css_simple_function: CssSimpleFunction {
                                name: CssIdentifier {
                                    value_token: IDENT@81..82 "a" [] [],
                                },
                                l_paren_token: L_PAREN@82..83 "(" [] [],
                                items: CssParameterList [],
                                r_paren_token: R_PAREN@83..84 ")" [] [],
                            },
                        },
                        important: missing (optional),
                    },
                    SEMICOLON@84..85 ";" [] [],
                ],
                r_curly_token: R_CURLY@85..87 "}" [Newline("\n")] [],
            },
        },
        CssRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@87..91 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                        },
                    },
                    sub_selectors: CssSubSelectorList [],
                },
            ],
            block: CssBlock {
                l_curly_token: L_CURLY@91..92 "{" [] [],
                declaration_list: CssDeclarationList [
                    CssDeclaration {
                        name: CssIdentifier {
                            value_token: IDENT@92..102 "prop1" [Newline("\n"), Whitespace("    ")] [],
                        },
                        colon_token: COLON@102..104 ":" [] [Whitespace(" ")],
                        value: CssAnyFunction {
                            css_simple_function: CssSimpleFunction {
                                name: CssIdentifier {
                                    value_token: IDENT@104..105 "a" [] [],
                                },
                                l_paren_token: L_PAREN@105..106 "(" [] [],
                                items: CssParameterList [
                                    CssParameter {
                                        any_css_value: CssNumber {
                                            value_token: CSS_NUMBER_LITERAL@106..107 "1" [] [],
                                        },
                                    },
                                ],
                                r_paren_token: R_PAREN@107..108 ")" [] [],
                            },
                        },
                        important: missing (optional),
                    },
                    SEMICOLON@108..109 ";" [] [],
                ],
                r_curly_token: R_CURLY@109..111 "}" [Newline("\n")] [],
            },
        },
        CssRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@111..115 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                        },
                    },
                    sub_selectors: CssSubSelectorList [],
                },
            ],
            block: CssBlock {
                l_curly_token: L_CURLY@115..116 "{" [] [],
                declaration_list: CssDeclarationList [
                    CssDeclaration {
                        name: CssIdentifier {
                            value_token: IDENT@116..126 "prop1" [Newline("\n"), Whitespace("    ")] [],
                        },
                        colon_token: COLON@126..128 ":" [] [Whitespace(" ")],
                        value: CssRatio {
                            numerator: CssNumber {
                                value_token: CSS_NUMBER_LITERAL@128..129 "2" [] [],
                            },
                            slash_token: SLASH@129..130 "/" [] [],
                            denominator: CssNumber {
                                value_token: CSS_NUMBER_LITERAL@130..131 "3" [] [],
                            },
                        },
                        important: missing (optional),
                    },
                    SEMICOLON@131..132 ";" [] [],
                ],
                r_curly_token: R_CURLY@132..134 "}" [Newline("\n")] [],
            },
        },
        CssRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@134..138 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                        },
                    },
                    sub_selectors: CssSubSelectorList [],
                },
            ],
            block: CssBlock {
                l_curly_token: L_CURLY@138..139 "{" [] [],
                declaration_list: CssDeclarationList [
                    CssDeclaration {
                        name: CssIdentifier {
                            value_token: IDENT@139..149 "prop1" [Newline("\n"), Whitespace("    ")] [],
                        },
                        colon_token: COLON@149..151 ":" [] [Whitespace(" ")],
                        value: CssCustomProperty {
                            value: CssIdentifier {
                                value_token: IDENT@151..159 "--custom" [] [],
                            },
                        },
                        important: missing (optional),
                    },
                    SEMICOLON@159..160 ";" [] [],
                ],
                r_curly_token: R_CURLY@160..162 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@162..164 "" [Newline("\n"), Newline("\n")] [],
}
```

## CST

```
0: CSS_ROOT@0..164
  0: (empty)
  1: CSS_RULE_LIST@0..162
    0: CSS_RULE@0..41
      0: CSS_SELECTOR_LIST@0..2
        0: CSS_COMPOUND_SELECTOR@0..2
          0: (empty)
          1: CSS_TYPE_SELECTOR@0..2
            0: (empty)
            1: CSS_IDENTIFIER@0..2
              0: IDENT@0..2 "a" [] [Whitespace(" ")]
          2: CSS_SUB_SELECTOR_LIST@2..2
      1: CSS_BLOCK@2..41
        0: L_CURLY@2..3 "{" [] []
        1: CSS_DECLARATION_LIST@3..39
          0: CSS_DECLARATION@3..20
            0: CSS_IDENTIFIER@3..13
              0: IDENT@3..13 "prop1" [Newline("\n"), Whitespace("    ")] []
            1: COLON@13..15 ":" [] [Whitespace(" ")]
            2: CSS_IDENTIFIER@15..20
              0: IDENT@15..20 "value" [] []
            3: (empty)
          1: SEMICOLON@20..21 ";" [] []
          2: CSS_DECLARATION@21..38
            0: CSS_IDENTIFIER@21..31
              0: IDENT@21..31 "prop2" [Newline("\n"), Whitespace("    ")] []
            1: COLON@31..33 ":" [] [Whitespace(" ")]
            2: CSS_IDENTIFIER@33..38
              0: IDENT@33..38 "value" [] []
            3: (empty)
          3: SEMICOLON@38..39 ";" [] []
        2: R_CURLY@39..41 "}" [Newline("\n")] []
    1: CSS_RULE@41..64
      0: CSS_SELECTOR_LIST@41..45
        0: CSS_COMPOUND_SELECTOR@41..45
          0: (empty)
          1: CSS_TYPE_SELECTOR@41..45
            0: (empty)
            1: CSS_IDENTIFIER@41..45
              0: IDENT@41..45 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
          2: CSS_SUB_SELECTOR_LIST@45..45
      1: CSS_BLOCK@45..64
        0: L_CURLY@45..46 "{" [] []
        1: CSS_DECLARATION_LIST@46..62
          0: CSS_DECLARATION@46..61
            0: CSS_IDENTIFIER@46..56
              0: IDENT@46..56 "prop1" [Newline("\n"), Whitespace("    ")] []
            1: COLON@56..58 ":" [] [Whitespace(" ")]
            2: CSS_DIMENSION@58..61
              0: CSS_NUMBER@58..59
                0: CSS_NUMBER_LITERAL@58..59 "1" [] []
              1: CSS_IDENTIFIER@59..61
                0: IDENT@59..61 "px" [] []
            3: (empty)
          1: SEMICOLON@61..62 ";" [] []
        2: R_CURLY@62..64 "}" [Newline("\n")] []
    2: CSS_RULE@64..87
      0: CSS_SELECTOR_LIST@64..68
        0: CSS_COMPOUND_SELECTOR@64..68
          0: (empty)
          1: CSS_TYPE_SELECTOR@64..68
            0: (empty)
            1: CSS_IDENTIFIER@64..68
              0: IDENT@64..68 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
          2: CSS_SUB_SELECTOR_LIST@68..68
      1: CSS_BLOCK@68..87
        0: L_CURLY@68..69 "{" [] []
        1: CSS_DECLARATION_LIST@69..85
          0: CSS_DECLARATION@69..84
            0: CSS_IDENTIFIER@69..79
              0: IDENT@69..79 "prop1" [Newline("\n"), Whitespace("    ")] []
            1: COLON@79..81 ":" [] [Whitespace(" ")]
            2: CSS_ANY_FUNCTION@81..84
              0: CSS_SIMPLE_FUNCTION@81..84
                0: CSS_IDENTIFIER@81..82
                  0: IDENT@81..82 "a" [] []
                1: L_PAREN@82..83 "(" [] []
                2: CSS_PARAMETER_LIST@83..83
                3: R_PAREN@83..84 ")" [] []
            3: (empty)
          1: SEMICOLON@84..85 ";" [] []
        2: R_CURLY@85..87 "}" [Newline("\n")] []
    3: CSS_RULE@87..111
      0: CSS_SELECTOR_LIST@87..91
        0: CSS_COMPOUND_SELECTOR@87..91
          0: (empty)
          1: CSS_TYPE_SELECTOR@87..91
            0: (empty)
            1: CSS_IDENTIFIER@87..91
              0: IDENT@87..91 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
          2: CSS_SUB_SELECTOR_LIST@91..91
      1: CSS_BLOCK@91..111
        0: L_CURLY@91..92 "{" [] []
        1: CSS_DECLARATION_LIST@92..109
          0: CSS_DECLARATION@92..108
            0: CSS_IDENTIFIER@92..102
              0: IDENT@92..102 "prop1" [Newline("\n"), Whitespace("    ")] []
            1: COLON@102..104 ":" [] [Whitespace(" ")]
            2: CSS_ANY_FUNCTION@104..108
              0: CSS_SIMPLE_FUNCTION@104..108
                0: CSS_IDENTIFIER@104..105
                  0: IDENT@104..105 "a" [] []
                1: L_PAREN@105..106 "(" [] []
                2: CSS_PARAMETER_LIST@106..107
                  0: CSS_PARAMETER@106..107
                    0: CSS_NUMBER@106..107
                      0: CSS_NUMBER_LITERAL@106..107 "1" [] []
                3: R_PAREN@107..108 ")" [] []
            3: (empty)
          1: SEMICOLON@108..109 ";" [] []
        2: R_CURLY@109..111 "}" [Newline("\n")] []
    4: CSS_RULE@111..134
      0: CSS_SELECTOR_LIST@111..115
        0: CSS_COMPOUND_SELECTOR@111..115
          0: (empty)
          1: CSS_TYPE_SELECTOR@111..115
            0: (empty)
            1: CSS_IDENTIFIER@111..115
              0: IDENT@111..115 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
          2: CSS_SUB_SELECTOR_LIST@115..115
      1: CSS_BLOCK@115..134
        0: L_CURLY@115..116 "{" [] []
        1: CSS_DECLARATION_LIST@116..132
          0: CSS_DECLARATION@116..131
            0: CSS_IDENTIFIER@116..126
              0: IDENT@116..126 "prop1" [Newline("\n"), Whitespace("    ")] []
            1: COLON@126..128 ":" [] [Whitespace(" ")]
            2: CSS_RATIO@128..131
              0: CSS_NUMBER@128..129
                0: CSS_NUMBER_LITERAL@128..129 "2" [] []
              1: SLASH@129..130 "/" [] []
              2: CSS_NUMBER@130..131
                0: CSS_NUMBER_LITERAL@130..131 "3" [] []
            3: (empty)
          1: SEMICOLON@131..132 ";" [] []
        2: R_CURLY@132..134 "}" [Newline("\n")] []
    5: CSS_RULE@134..162
      0: CSS_SELECTOR_LIST@134..138
        0: CSS_COMPOUND_SELECTOR@134..138
          0: (empty)
          1: CSS_TYPE_SELECTOR@134..138
            0: (empty)
            1: CSS_IDENTIFIER@134..138
              0: IDENT@134..138 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
          2: CSS_SUB_SELECTOR_LIST@138..138
      1: CSS_BLOCK@138..162
        0: L_CURLY@138..139 "{" [] []
        1: CSS_DECLARATION_LIST@139..160
          0: CSS_DECLARATION@139..159
            0: CSS_IDENTIFIER@139..149
              0: IDENT@139..149 "prop1" [Newline("\n"), Whitespace("    ")] []
            1: COLON@149..151 ":" [] [Whitespace(" ")]
            2: CSS_CUSTOM_PROPERTY@151..159
              0: CSS_IDENTIFIER@151..159
                0: IDENT@151..159 "--custom" [] []
            3: (empty)
          1: SEMICOLON@159..160 ";" [] []
        2: R_CURLY@160..162 "}" [Newline("\n")] []
  2: EOF@162..164 "" [Newline("\n"), Newline("\n")] []

```


