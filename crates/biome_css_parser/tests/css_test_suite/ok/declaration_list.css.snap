---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```css
a {
    prop1: value;
    prop2: value;
}

a {
    prop1: 1px;
}

a {
    prop1: a();
}

a {
    prop1: a(1);
}

a {
    prop1: a(1,1);
}

a {
    prop1: a(1,1 1);
}

a {
    prop1: 2/3;
}

a {
    prop1: --custom;
}


```


## AST

```
CssStyleSheet {
    bom_token: missing (optional),
    content: CssStyleSheetContent [
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@0..2 "a" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@2..3 "{" [] [],
                content: CssCurlyBracketsBlockContent [
                    CssBlockDeclarationList {
                        css_declaration_list: CssDeclarationList [
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@3..13 "prop1" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@13..15 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssIdentifier {
                                        value_token: IDENT@15..20 "value" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@20..21 ";" [] [],
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@21..31 "prop2" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@31..33 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssIdentifier {
                                        value_token: IDENT@33..38 "value" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@38..39 ";" [] [],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@39..41 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@41..45 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@45..46 "{" [] [],
                content: CssCurlyBracketsBlockContent [
                    CssBlockDeclarationList {
                        css_declaration_list: CssDeclarationList [
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@46..56 "prop1" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@56..58 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssNumber {
                                        value_token: CSS_NUMBER_LITERAL@58..59 "1" [] [],
                                    },
                                    CssIdentifier {
                                        value_token: IDENT@59..61 "px" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@61..62 ";" [] [],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@62..64 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@64..68 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@68..69 "{" [] [],
                content: CssCurlyBracketsBlockContent [
                    CssBlockDeclarationList {
                        css_declaration_list: CssDeclarationList [
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@69..79 "prop1" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@79..81 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssFunctionBlock {
                                        css_function_token: CssFunctionToken {
                                            valye_token: FUNCTION_TOKEN@81..83 "a(" [] [],
                                        },
                                        css_component_value_list: CssComponentValueList [],
                                        r_paren_token: R_PAREN@83..84 ")" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@84..85 ";" [] [],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@85..87 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@87..91 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@91..92 "{" [] [],
                content: CssCurlyBracketsBlockContent [
                    CssBlockDeclarationList {
                        css_declaration_list: CssDeclarationList [
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@92..102 "prop1" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@102..104 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssFunctionBlock {
                                        css_function_token: CssFunctionToken {
                                            valye_token: FUNCTION_TOKEN@104..106 "a(" [] [],
                                        },
                                        css_component_value_list: CssComponentValueList [
                                            CssNumber {
                                                value_token: CSS_NUMBER_LITERAL@106..107 "1" [] [],
                                            },
                                        ],
                                        r_paren_token: R_PAREN@107..108 ")" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@108..109 ";" [] [],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@109..111 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@111..115 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@115..116 "{" [] [],
                content: CssCurlyBracketsBlockContent [
                    CssBlockDeclarationList {
                        css_declaration_list: CssDeclarationList [
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@116..126 "prop1" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@126..128 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssFunctionBlock {
                                        css_function_token: CssFunctionToken {
                                            valye_token: FUNCTION_TOKEN@128..130 "a(" [] [],
                                        },
                                        css_component_value_list: CssComponentValueList [
                                            CssNumber {
                                                value_token: CSS_NUMBER_LITERAL@130..131 "1" [] [],
                                            },
                                            CssDelim {
                                                value_token: DELIM@131..132 "," [] [],
                                            },
                                            CssNumber {
                                                value_token: CSS_NUMBER_LITERAL@132..133 "1" [] [],
                                            },
                                        ],
                                        r_paren_token: R_PAREN@133..134 ")" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@134..135 ";" [] [],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@135..137 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@137..141 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@141..142 "{" [] [],
                content: CssCurlyBracketsBlockContent [
                    CssBlockDeclarationList {
                        css_declaration_list: CssDeclarationList [
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@142..152 "prop1" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@152..154 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssFunctionBlock {
                                        css_function_token: CssFunctionToken {
                                            valye_token: FUNCTION_TOKEN@154..156 "a(" [] [],
                                        },
                                        css_component_value_list: CssComponentValueList [
                                            CssNumber {
                                                value_token: CSS_NUMBER_LITERAL@156..157 "1" [] [],
                                            },
                                            CssDelim {
                                                value_token: DELIM@157..158 "," [] [],
                                            },
                                            CssNumber {
                                                value_token: CSS_NUMBER_LITERAL@158..160 "1" [] [Whitespace(" ")],
                                            },
                                            CssNumber {
                                                value_token: CSS_NUMBER_LITERAL@160..161 "1" [] [],
                                            },
                                        ],
                                        r_paren_token: R_PAREN@161..162 ")" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@162..163 ";" [] [],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@163..165 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@165..169 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@169..170 "{" [] [],
                content: CssCurlyBracketsBlockContent [
                    CssBlockDeclarationList {
                        css_declaration_list: CssDeclarationList [
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@170..180 "prop1" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@180..182 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssNumber {
                                        value_token: CSS_NUMBER_LITERAL@182..183 "2" [] [],
                                    },
                                    CssDelim {
                                        value_token: DELIM@183..184 "/" [] [],
                                    },
                                    CssNumber {
                                        value_token: CSS_NUMBER_LITERAL@184..185 "3" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@185..186 ";" [] [],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@186..188 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@188..192 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@192..193 "{" [] [],
                content: CssCurlyBracketsBlockContent [
                    CssBlockDeclarationList {
                        css_declaration_list: CssDeclarationList [
                            CssDeclaration {
                                name: CssIdentifier {
                                    value_token: IDENT@193..203 "prop1" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@203..205 ":" [] [Whitespace(" ")],
                                valie: CssComponentValueList [
                                    CssIdentifier {
                                        value_token: IDENT@205..213 "--custom" [] [],
                                    },
                                ],
                                important: missing (optional),
                            },
                            SEMICOLON@213..214 ";" [] [],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@214..216 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@216..218 "" [Newline("\n"), Newline("\n")] [],
}
```

## CST

```
0: CSS_STYLE_SHEET@0..218
  0: (empty)
  1: CSS_STYLE_SHEET_CONTENT@0..216
    0: CSS_QUALIFIED_RULE@0..41
      0: CSS_QUALIFIED_RULE_PRELUDE@0..2
        0: CSS_IDENTIFIER@0..2
          0: IDENT@0..2 "a" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@2..41
        0: L_CURLY@2..3 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@3..39
          0: CSS_BLOCK_DECLARATION_LIST@3..39
            0: CSS_DECLARATION_LIST@3..39
              0: CSS_DECLARATION@3..20
                0: CSS_IDENTIFIER@3..13
                  0: IDENT@3..13 "prop1" [Newline("\n"), Whitespace("    ")] []
                1: COLON@13..15 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@15..20
                  0: CSS_IDENTIFIER@15..20
                    0: IDENT@15..20 "value" [] []
                3: (empty)
              1: SEMICOLON@20..21 ";" [] []
              2: CSS_DECLARATION@21..38
                0: CSS_IDENTIFIER@21..31
                  0: IDENT@21..31 "prop2" [Newline("\n"), Whitespace("    ")] []
                1: COLON@31..33 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@33..38
                  0: CSS_IDENTIFIER@33..38
                    0: IDENT@33..38 "value" [] []
                3: (empty)
              3: SEMICOLON@38..39 ";" [] []
        2: R_CURLY@39..41 "}" [Newline("\n")] []
    1: CSS_QUALIFIED_RULE@41..64
      0: CSS_QUALIFIED_RULE_PRELUDE@41..45
        0: CSS_IDENTIFIER@41..45
          0: IDENT@41..45 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@45..64
        0: L_CURLY@45..46 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@46..62
          0: CSS_BLOCK_DECLARATION_LIST@46..62
            0: CSS_DECLARATION_LIST@46..62
              0: CSS_DECLARATION@46..61
                0: CSS_IDENTIFIER@46..56
                  0: IDENT@46..56 "prop1" [Newline("\n"), Whitespace("    ")] []
                1: COLON@56..58 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@58..61
                  0: CSS_NUMBER@58..59
                    0: CSS_NUMBER_LITERAL@58..59 "1" [] []
                  1: CSS_IDENTIFIER@59..61
                    0: IDENT@59..61 "px" [] []
                3: (empty)
              1: SEMICOLON@61..62 ";" [] []
        2: R_CURLY@62..64 "}" [Newline("\n")] []
    2: CSS_QUALIFIED_RULE@64..87
      0: CSS_QUALIFIED_RULE_PRELUDE@64..68
        0: CSS_IDENTIFIER@64..68
          0: IDENT@64..68 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@68..87
        0: L_CURLY@68..69 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@69..85
          0: CSS_BLOCK_DECLARATION_LIST@69..85
            0: CSS_DECLARATION_LIST@69..85
              0: CSS_DECLARATION@69..84
                0: CSS_IDENTIFIER@69..79
                  0: IDENT@69..79 "prop1" [Newline("\n"), Whitespace("    ")] []
                1: COLON@79..81 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@81..84
                  0: CSS_FUNCTION_BLOCK@81..84
                    0: CSS_FUNCTION_TOKEN@81..83
                      0: FUNCTION_TOKEN@81..83 "a(" [] []
                    1: CSS_COMPONENT_VALUE_LIST@83..83
                    2: R_PAREN@83..84 ")" [] []
                3: (empty)
              1: SEMICOLON@84..85 ";" [] []
        2: R_CURLY@85..87 "}" [Newline("\n")] []
    3: CSS_QUALIFIED_RULE@87..111
      0: CSS_QUALIFIED_RULE_PRELUDE@87..91
        0: CSS_IDENTIFIER@87..91
          0: IDENT@87..91 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@91..111
        0: L_CURLY@91..92 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@92..109
          0: CSS_BLOCK_DECLARATION_LIST@92..109
            0: CSS_DECLARATION_LIST@92..109
              0: CSS_DECLARATION@92..108
                0: CSS_IDENTIFIER@92..102
                  0: IDENT@92..102 "prop1" [Newline("\n"), Whitespace("    ")] []
                1: COLON@102..104 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@104..108
                  0: CSS_FUNCTION_BLOCK@104..108
                    0: CSS_FUNCTION_TOKEN@104..106
                      0: FUNCTION_TOKEN@104..106 "a(" [] []
                    1: CSS_COMPONENT_VALUE_LIST@106..107
                      0: CSS_NUMBER@106..107
                        0: CSS_NUMBER_LITERAL@106..107 "1" [] []
                    2: R_PAREN@107..108 ")" [] []
                3: (empty)
              1: SEMICOLON@108..109 ";" [] []
        2: R_CURLY@109..111 "}" [Newline("\n")] []
    4: CSS_QUALIFIED_RULE@111..137
      0: CSS_QUALIFIED_RULE_PRELUDE@111..115
        0: CSS_IDENTIFIER@111..115
          0: IDENT@111..115 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@115..137
        0: L_CURLY@115..116 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@116..135
          0: CSS_BLOCK_DECLARATION_LIST@116..135
            0: CSS_DECLARATION_LIST@116..135
              0: CSS_DECLARATION@116..134
                0: CSS_IDENTIFIER@116..126
                  0: IDENT@116..126 "prop1" [Newline("\n"), Whitespace("    ")] []
                1: COLON@126..128 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@128..134
                  0: CSS_FUNCTION_BLOCK@128..134
                    0: CSS_FUNCTION_TOKEN@128..130
                      0: FUNCTION_TOKEN@128..130 "a(" [] []
                    1: CSS_COMPONENT_VALUE_LIST@130..133
                      0: CSS_NUMBER@130..131
                        0: CSS_NUMBER_LITERAL@130..131 "1" [] []
                      1: CSS_DELIM@131..132
                        0: DELIM@131..132 "," [] []
                      2: CSS_NUMBER@132..133
                        0: CSS_NUMBER_LITERAL@132..133 "1" [] []
                    2: R_PAREN@133..134 ")" [] []
                3: (empty)
              1: SEMICOLON@134..135 ";" [] []
        2: R_CURLY@135..137 "}" [Newline("\n")] []
    5: CSS_QUALIFIED_RULE@137..165
      0: CSS_QUALIFIED_RULE_PRELUDE@137..141
        0: CSS_IDENTIFIER@137..141
          0: IDENT@137..141 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@141..165
        0: L_CURLY@141..142 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@142..163
          0: CSS_BLOCK_DECLARATION_LIST@142..163
            0: CSS_DECLARATION_LIST@142..163
              0: CSS_DECLARATION@142..162
                0: CSS_IDENTIFIER@142..152
                  0: IDENT@142..152 "prop1" [Newline("\n"), Whitespace("    ")] []
                1: COLON@152..154 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@154..162
                  0: CSS_FUNCTION_BLOCK@154..162
                    0: CSS_FUNCTION_TOKEN@154..156
                      0: FUNCTION_TOKEN@154..156 "a(" [] []
                    1: CSS_COMPONENT_VALUE_LIST@156..161
                      0: CSS_NUMBER@156..157
                        0: CSS_NUMBER_LITERAL@156..157 "1" [] []
                      1: CSS_DELIM@157..158
                        0: DELIM@157..158 "," [] []
                      2: CSS_NUMBER@158..160
                        0: CSS_NUMBER_LITERAL@158..160 "1" [] [Whitespace(" ")]
                      3: CSS_NUMBER@160..161
                        0: CSS_NUMBER_LITERAL@160..161 "1" [] []
                    2: R_PAREN@161..162 ")" [] []
                3: (empty)
              1: SEMICOLON@162..163 ";" [] []
        2: R_CURLY@163..165 "}" [Newline("\n")] []
    6: CSS_QUALIFIED_RULE@165..188
      0: CSS_QUALIFIED_RULE_PRELUDE@165..169
        0: CSS_IDENTIFIER@165..169
          0: IDENT@165..169 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@169..188
        0: L_CURLY@169..170 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@170..186
          0: CSS_BLOCK_DECLARATION_LIST@170..186
            0: CSS_DECLARATION_LIST@170..186
              0: CSS_DECLARATION@170..185
                0: CSS_IDENTIFIER@170..180
                  0: IDENT@170..180 "prop1" [Newline("\n"), Whitespace("    ")] []
                1: COLON@180..182 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@182..185
                  0: CSS_NUMBER@182..183
                    0: CSS_NUMBER_LITERAL@182..183 "2" [] []
                  1: CSS_DELIM@183..184
                    0: DELIM@183..184 "/" [] []
                  2: CSS_NUMBER@184..185
                    0: CSS_NUMBER_LITERAL@184..185 "3" [] []
                3: (empty)
              1: SEMICOLON@185..186 ";" [] []
        2: R_CURLY@186..188 "}" [Newline("\n")] []
    7: CSS_QUALIFIED_RULE@188..216
      0: CSS_QUALIFIED_RULE_PRELUDE@188..192
        0: CSS_IDENTIFIER@188..192
          0: IDENT@188..192 "a" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@192..216
        0: L_CURLY@192..193 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@193..214
          0: CSS_BLOCK_DECLARATION_LIST@193..214
            0: CSS_DECLARATION_LIST@193..214
              0: CSS_DECLARATION@193..213
                0: CSS_IDENTIFIER@193..203
                  0: IDENT@193..203 "prop1" [Newline("\n"), Whitespace("    ")] []
                1: COLON@203..205 ":" [] [Whitespace(" ")]
                2: CSS_COMPONENT_VALUE_LIST@205..213
                  0: CSS_IDENTIFIER@205..213
                    0: IDENT@205..213 "--custom" [] []
                3: (empty)
              1: SEMICOLON@213..214 ";" [] []
        2: R_CURLY@214..216 "}" [Newline("\n")] []
  2: EOF@216..218 "" [Newline("\n"), Newline("\n")] []

```


