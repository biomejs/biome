---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```css
:matches(ul) li {}
:matches(ul, ol) li {}

```


## AST

```
CssRoot {
    bom_token: missing (optional),
    rules: CssRuleList [
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssComplexSelector {
                    left: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: missing (optional),
                        sub_selectors: CssSubSelectorList [
                            CssPseudoClassSelector {
                                colon_token: COLON@0..1 ":" [] [],
                                class: CssPseudoClassFunctionSelectorList {
                                    name: MATCHES_KW@1..8 "matches" [] [],
                                    l_paren_token: L_PAREN@8..9 "(" [] [],
                                    selectors: CssSelectorList [
                                        CssCompoundSelector {
                                            nesting_selectors: CssNestedSelectorList [],
                                            simple_selector: CssTypeSelector {
                                                namespace: missing (optional),
                                                ident: CssIdentifier {
                                                    value_token: IDENT@9..11 "ul" [] [],
                                                },
                                            },
                                            sub_selectors: CssSubSelectorList [],
                                        },
                                    ],
                                    r_paren_token: R_PAREN@11..12 ")" [] [],
                                },
                            },
                        ],
                    },
                    combinator: CSS_SPACE_LITERAL@12..13 " " [] [],
                    right: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: CssTypeSelector {
                            namespace: missing (optional),
                            ident: CssIdentifier {
                                value_token: IDENT@13..16 "li" [] [Whitespace(" ")],
                            },
                        },
                        sub_selectors: CssSubSelectorList [],
                    },
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@16..17 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@17..18 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssComplexSelector {
                    left: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: missing (optional),
                        sub_selectors: CssSubSelectorList [
                            CssPseudoClassSelector {
                                colon_token: COLON@18..20 ":" [Newline("\n")] [],
                                class: CssPseudoClassFunctionSelectorList {
                                    name: MATCHES_KW@20..27 "matches" [] [],
                                    l_paren_token: L_PAREN@27..28 "(" [] [],
                                    selectors: CssSelectorList [
                                        CssCompoundSelector {
                                            nesting_selectors: CssNestedSelectorList [],
                                            simple_selector: CssTypeSelector {
                                                namespace: missing (optional),
                                                ident: CssIdentifier {
                                                    value_token: IDENT@28..30 "ul" [] [],
                                                },
                                            },
                                            sub_selectors: CssSubSelectorList [],
                                        },
                                        COMMA@30..32 "," [] [Whitespace(" ")],
                                        CssCompoundSelector {
                                            nesting_selectors: CssNestedSelectorList [],
                                            simple_selector: CssTypeSelector {
                                                namespace: missing (optional),
                                                ident: CssIdentifier {
                                                    value_token: IDENT@32..34 "ol" [] [],
                                                },
                                            },
                                            sub_selectors: CssSubSelectorList [],
                                        },
                                    ],
                                    r_paren_token: R_PAREN@34..35 ")" [] [],
                                },
                            },
                        ],
                    },
                    combinator: CSS_SPACE_LITERAL@35..36 " " [] [],
                    right: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: CssTypeSelector {
                            namespace: missing (optional),
                            ident: CssIdentifier {
                                value_token: IDENT@36..39 "li" [] [Whitespace(" ")],
                            },
                        },
                        sub_selectors: CssSubSelectorList [],
                    },
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@39..40 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@40..41 "}" [] [],
            },
        },
    ],
    eof_token: EOF@41..42 "" [Newline("\n")] [],
}
```

## CST

```
0: CSS_ROOT@0..42
  0: (empty)
  1: CSS_RULE_LIST@0..41
    0: CSS_QUALIFIED_RULE@0..18
      0: CSS_SELECTOR_LIST@0..16
        0: CSS_COMPLEX_SELECTOR@0..16
          0: CSS_COMPOUND_SELECTOR@0..12
            0: CSS_NESTED_SELECTOR_LIST@0..0
            1: (empty)
            2: CSS_SUB_SELECTOR_LIST@0..12
              0: CSS_PSEUDO_CLASS_SELECTOR@0..12
                0: COLON@0..1 ":" [] []
                1: CSS_PSEUDO_CLASS_FUNCTION_SELECTOR_LIST@1..12
                  0: MATCHES_KW@1..8 "matches" [] []
                  1: L_PAREN@8..9 "(" [] []
                  2: CSS_SELECTOR_LIST@9..11
                    0: CSS_COMPOUND_SELECTOR@9..11
                      0: CSS_NESTED_SELECTOR_LIST@9..9
                      1: CSS_TYPE_SELECTOR@9..11
                        0: (empty)
                        1: CSS_IDENTIFIER@9..11
                          0: IDENT@9..11 "ul" [] []
                      2: CSS_SUB_SELECTOR_LIST@11..11
                  3: R_PAREN@11..12 ")" [] []
          1: CSS_SPACE_LITERAL@12..13 " " [] []
          2: CSS_COMPOUND_SELECTOR@13..16
            0: CSS_NESTED_SELECTOR_LIST@13..13
            1: CSS_TYPE_SELECTOR@13..16
              0: (empty)
              1: CSS_IDENTIFIER@13..16
                0: IDENT@13..16 "li" [] [Whitespace(" ")]
            2: CSS_SUB_SELECTOR_LIST@16..16
      1: CSS_DECLARATION_OR_RULE_BLOCK@16..18
        0: L_CURLY@16..17 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@17..17
        2: R_CURLY@17..18 "}" [] []
    1: CSS_QUALIFIED_RULE@18..41
      0: CSS_SELECTOR_LIST@18..39
        0: CSS_COMPLEX_SELECTOR@18..39
          0: CSS_COMPOUND_SELECTOR@18..35
            0: CSS_NESTED_SELECTOR_LIST@18..18
            1: (empty)
            2: CSS_SUB_SELECTOR_LIST@18..35
              0: CSS_PSEUDO_CLASS_SELECTOR@18..35
                0: COLON@18..20 ":" [Newline("\n")] []
                1: CSS_PSEUDO_CLASS_FUNCTION_SELECTOR_LIST@20..35
                  0: MATCHES_KW@20..27 "matches" [] []
                  1: L_PAREN@27..28 "(" [] []
                  2: CSS_SELECTOR_LIST@28..34
                    0: CSS_COMPOUND_SELECTOR@28..30
                      0: CSS_NESTED_SELECTOR_LIST@28..28
                      1: CSS_TYPE_SELECTOR@28..30
                        0: (empty)
                        1: CSS_IDENTIFIER@28..30
                          0: IDENT@28..30 "ul" [] []
                      2: CSS_SUB_SELECTOR_LIST@30..30
                    1: COMMA@30..32 "," [] [Whitespace(" ")]
                    2: CSS_COMPOUND_SELECTOR@32..34
                      0: CSS_NESTED_SELECTOR_LIST@32..32
                      1: CSS_TYPE_SELECTOR@32..34
                        0: (empty)
                        1: CSS_IDENTIFIER@32..34
                          0: IDENT@32..34 "ol" [] []
                      2: CSS_SUB_SELECTOR_LIST@34..34
                  3: R_PAREN@34..35 ")" [] []
          1: CSS_SPACE_LITERAL@35..36 " " [] []
          2: CSS_COMPOUND_SELECTOR@36..39
            0: CSS_NESTED_SELECTOR_LIST@36..36
            1: CSS_TYPE_SELECTOR@36..39
              0: (empty)
              1: CSS_IDENTIFIER@36..39
                0: IDENT@36..39 "li" [] [Whitespace(" ")]
            2: CSS_SUB_SELECTOR_LIST@39..39
      1: CSS_DECLARATION_OR_RULE_BLOCK@39..41
        0: L_CURLY@39..40 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@40..40
        2: R_CURLY@40..41 "}" [] []
  2: EOF@41..42 "" [Newline("\n")] []

```
