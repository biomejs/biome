---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```css
:lang(\*-Latn) {}
:lang("*-Latn") {}
html:lang(fr-be) {}
html:lang(de) {}
html:lang(de, fr) {}
:lang(fr-be) > q {}
:lang(de) > q {}
:lang(fr-be) .class {}

```


## AST

```
CssRoot {
    bom_token: missing (optional),
    rules: CssRuleList [
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssPseudoClassSelector {
                            colon_token: COLON@0..1 ":" [] [],
                            class: CssPseudoClassFunctionValueList {
                                name_token: LANG_KW@1..5 "lang" [] [],
                                l_paren_token: L_PAREN@5..6 "(" [] [],
                                values: CssPseudoValueList [
                                    CssIdentifier {
                                        value_token: IDENT@6..13 "\\*-Latn" [] [],
                                    },
                                ],
                                r_paren_token: R_PAREN@13..15 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@15..16 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@16..17 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssPseudoClassSelector {
                            colon_token: COLON@17..19 ":" [Newline("\n")] [],
                            class: CssPseudoClassFunctionValueList {
                                name_token: LANG_KW@19..23 "lang" [] [],
                                l_paren_token: L_PAREN@23..24 "(" [] [],
                                values: CssPseudoValueList [
                                    CssString {
                                        value_token: CSS_STRING_LITERAL@24..32 "\"*-Latn\"" [] [],
                                    },
                                ],
                                r_paren_token: R_PAREN@32..34 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@34..35 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@35..36 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@36..41 "html" [Newline("\n")] [],
                        },
                    },
                    sub_selectors: CssSubSelectorList [
                        CssPseudoClassSelector {
                            colon_token: COLON@41..42 ":" [] [],
                            class: CssPseudoClassFunctionValueList {
                                name_token: LANG_KW@42..46 "lang" [] [],
                                l_paren_token: L_PAREN@46..47 "(" [] [],
                                values: CssPseudoValueList [
                                    CssIdentifier {
                                        value_token: IDENT@47..52 "fr-be" [] [],
                                    },
                                ],
                                r_paren_token: R_PAREN@52..54 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@54..55 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@55..56 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@56..61 "html" [Newline("\n")] [],
                        },
                    },
                    sub_selectors: CssSubSelectorList [
                        CssPseudoClassSelector {
                            colon_token: COLON@61..62 ":" [] [],
                            class: CssPseudoClassFunctionValueList {
                                name_token: LANG_KW@62..66 "lang" [] [],
                                l_paren_token: L_PAREN@66..67 "(" [] [],
                                values: CssPseudoValueList [
                                    CssIdentifier {
                                        value_token: IDENT@67..69 "de" [] [],
                                    },
                                ],
                                r_paren_token: R_PAREN@69..71 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@71..72 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@72..73 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@73..78 "html" [Newline("\n")] [],
                        },
                    },
                    sub_selectors: CssSubSelectorList [
                        CssPseudoClassSelector {
                            colon_token: COLON@78..79 ":" [] [],
                            class: CssPseudoClassFunctionValueList {
                                name_token: LANG_KW@79..83 "lang" [] [],
                                l_paren_token: L_PAREN@83..84 "(" [] [],
                                values: CssPseudoValueList [
                                    CssIdentifier {
                                        value_token: IDENT@84..86 "de" [] [],
                                    },
                                    COMMA@86..88 "," [] [Whitespace(" ")],
                                    CssIdentifier {
                                        value_token: IDENT@88..90 "fr" [] [],
                                    },
                                ],
                                r_paren_token: R_PAREN@90..92 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@92..93 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@93..94 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssComplexSelector {
                    left: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: missing (optional),
                        sub_selectors: CssSubSelectorList [
                            CssPseudoClassSelector {
                                colon_token: COLON@94..96 ":" [Newline("\n")] [],
                                class: CssPseudoClassFunctionValueList {
                                    name_token: LANG_KW@96..100 "lang" [] [],
                                    l_paren_token: L_PAREN@100..101 "(" [] [],
                                    values: CssPseudoValueList [
                                        CssIdentifier {
                                            value_token: IDENT@101..106 "fr-be" [] [],
                                        },
                                    ],
                                    r_paren_token: R_PAREN@106..108 ")" [] [Whitespace(" ")],
                                },
                            },
                        ],
                    },
                    combinator: R_ANGLE@108..110 ">" [] [Whitespace(" ")],
                    right: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: CssTypeSelector {
                            namespace: missing (optional),
                            ident: CssIdentifier {
                                value_token: IDENT@110..112 "q" [] [Whitespace(" ")],
                            },
                        },
                        sub_selectors: CssSubSelectorList [],
                    },
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@112..113 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@113..114 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssComplexSelector {
                    left: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: missing (optional),
                        sub_selectors: CssSubSelectorList [
                            CssPseudoClassSelector {
                                colon_token: COLON@114..116 ":" [Newline("\n")] [],
                                class: CssPseudoClassFunctionValueList {
                                    name_token: LANG_KW@116..120 "lang" [] [],
                                    l_paren_token: L_PAREN@120..121 "(" [] [],
                                    values: CssPseudoValueList [
                                        CssIdentifier {
                                            value_token: IDENT@121..123 "de" [] [],
                                        },
                                    ],
                                    r_paren_token: R_PAREN@123..125 ")" [] [Whitespace(" ")],
                                },
                            },
                        ],
                    },
                    combinator: R_ANGLE@125..127 ">" [] [Whitespace(" ")],
                    right: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: CssTypeSelector {
                            namespace: missing (optional),
                            ident: CssIdentifier {
                                value_token: IDENT@127..129 "q" [] [Whitespace(" ")],
                            },
                        },
                        sub_selectors: CssSubSelectorList [],
                    },
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@129..130 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@130..131 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssComplexSelector {
                    left: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: missing (optional),
                        sub_selectors: CssSubSelectorList [
                            CssPseudoClassSelector {
                                colon_token: COLON@131..133 ":" [Newline("\n")] [],
                                class: CssPseudoClassFunctionValueList {
                                    name_token: LANG_KW@133..137 "lang" [] [],
                                    l_paren_token: L_PAREN@137..138 "(" [] [],
                                    values: CssPseudoValueList [
                                        CssIdentifier {
                                            value_token: IDENT@138..143 "fr-be" [] [],
                                        },
                                    ],
                                    r_paren_token: R_PAREN@143..144 ")" [] [],
                                },
                            },
                        ],
                    },
                    combinator: CSS_SPACE_LITERAL@144..145 " " [] [],
                    right: CssCompoundSelector {
                        nesting_selectors: CssNestedSelectorList [],
                        simple_selector: missing (optional),
                        sub_selectors: CssSubSelectorList [
                            CssClassSelector {
                                dot_token: DOT@145..146 "." [] [],
                                name: CssCustomIdentifier {
                                    value_token: IDENT@146..152 "class" [] [Whitespace(" ")],
                                },
                            },
                        ],
                    },
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@152..153 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@153..154 "}" [] [],
            },
        },
    ],
    eof_token: EOF@154..155 "" [Newline("\n")] [],
}
```

## CST

```
0: CSS_ROOT@0..155
  0: (empty)
  1: CSS_RULE_LIST@0..154
    0: CSS_QUALIFIED_RULE@0..17
      0: CSS_SELECTOR_LIST@0..15
        0: CSS_COMPOUND_SELECTOR@0..15
          0: CSS_NESTED_SELECTOR_LIST@0..0
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@0..15
            0: CSS_PSEUDO_CLASS_SELECTOR@0..15
              0: COLON@0..1 ":" [] []
              1: CSS_PSEUDO_CLASS_FUNCTION_VALUE_LIST@1..15
                0: LANG_KW@1..5 "lang" [] []
                1: L_PAREN@5..6 "(" [] []
                2: CSS_PSEUDO_VALUE_LIST@6..13
                  0: CSS_IDENTIFIER@6..13
                    0: IDENT@6..13 "\\*-Latn" [] []
                3: R_PAREN@13..15 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@15..17
        0: L_CURLY@15..16 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@16..16
        2: R_CURLY@16..17 "}" [] []
    1: CSS_QUALIFIED_RULE@17..36
      0: CSS_SELECTOR_LIST@17..34
        0: CSS_COMPOUND_SELECTOR@17..34
          0: CSS_NESTED_SELECTOR_LIST@17..17
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@17..34
            0: CSS_PSEUDO_CLASS_SELECTOR@17..34
              0: COLON@17..19 ":" [Newline("\n")] []
              1: CSS_PSEUDO_CLASS_FUNCTION_VALUE_LIST@19..34
                0: LANG_KW@19..23 "lang" [] []
                1: L_PAREN@23..24 "(" [] []
                2: CSS_PSEUDO_VALUE_LIST@24..32
                  0: CSS_STRING@24..32
                    0: CSS_STRING_LITERAL@24..32 "\"*-Latn\"" [] []
                3: R_PAREN@32..34 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@34..36
        0: L_CURLY@34..35 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@35..35
        2: R_CURLY@35..36 "}" [] []
    2: CSS_QUALIFIED_RULE@36..56
      0: CSS_SELECTOR_LIST@36..54
        0: CSS_COMPOUND_SELECTOR@36..54
          0: CSS_NESTED_SELECTOR_LIST@36..36
          1: CSS_TYPE_SELECTOR@36..41
            0: (empty)
            1: CSS_IDENTIFIER@36..41
              0: IDENT@36..41 "html" [Newline("\n")] []
          2: CSS_SUB_SELECTOR_LIST@41..54
            0: CSS_PSEUDO_CLASS_SELECTOR@41..54
              0: COLON@41..42 ":" [] []
              1: CSS_PSEUDO_CLASS_FUNCTION_VALUE_LIST@42..54
                0: LANG_KW@42..46 "lang" [] []
                1: L_PAREN@46..47 "(" [] []
                2: CSS_PSEUDO_VALUE_LIST@47..52
                  0: CSS_IDENTIFIER@47..52
                    0: IDENT@47..52 "fr-be" [] []
                3: R_PAREN@52..54 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@54..56
        0: L_CURLY@54..55 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@55..55
        2: R_CURLY@55..56 "}" [] []
    3: CSS_QUALIFIED_RULE@56..73
      0: CSS_SELECTOR_LIST@56..71
        0: CSS_COMPOUND_SELECTOR@56..71
          0: CSS_NESTED_SELECTOR_LIST@56..56
          1: CSS_TYPE_SELECTOR@56..61
            0: (empty)
            1: CSS_IDENTIFIER@56..61
              0: IDENT@56..61 "html" [Newline("\n")] []
          2: CSS_SUB_SELECTOR_LIST@61..71
            0: CSS_PSEUDO_CLASS_SELECTOR@61..71
              0: COLON@61..62 ":" [] []
              1: CSS_PSEUDO_CLASS_FUNCTION_VALUE_LIST@62..71
                0: LANG_KW@62..66 "lang" [] []
                1: L_PAREN@66..67 "(" [] []
                2: CSS_PSEUDO_VALUE_LIST@67..69
                  0: CSS_IDENTIFIER@67..69
                    0: IDENT@67..69 "de" [] []
                3: R_PAREN@69..71 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@71..73
        0: L_CURLY@71..72 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@72..72
        2: R_CURLY@72..73 "}" [] []
    4: CSS_QUALIFIED_RULE@73..94
      0: CSS_SELECTOR_LIST@73..92
        0: CSS_COMPOUND_SELECTOR@73..92
          0: CSS_NESTED_SELECTOR_LIST@73..73
          1: CSS_TYPE_SELECTOR@73..78
            0: (empty)
            1: CSS_IDENTIFIER@73..78
              0: IDENT@73..78 "html" [Newline("\n")] []
          2: CSS_SUB_SELECTOR_LIST@78..92
            0: CSS_PSEUDO_CLASS_SELECTOR@78..92
              0: COLON@78..79 ":" [] []
              1: CSS_PSEUDO_CLASS_FUNCTION_VALUE_LIST@79..92
                0: LANG_KW@79..83 "lang" [] []
                1: L_PAREN@83..84 "(" [] []
                2: CSS_PSEUDO_VALUE_LIST@84..90
                  0: CSS_IDENTIFIER@84..86
                    0: IDENT@84..86 "de" [] []
                  1: COMMA@86..88 "," [] [Whitespace(" ")]
                  2: CSS_IDENTIFIER@88..90
                    0: IDENT@88..90 "fr" [] []
                3: R_PAREN@90..92 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@92..94
        0: L_CURLY@92..93 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@93..93
        2: R_CURLY@93..94 "}" [] []
    5: CSS_QUALIFIED_RULE@94..114
      0: CSS_SELECTOR_LIST@94..112
        0: CSS_COMPLEX_SELECTOR@94..112
          0: CSS_COMPOUND_SELECTOR@94..108
            0: CSS_NESTED_SELECTOR_LIST@94..94
            1: (empty)
            2: CSS_SUB_SELECTOR_LIST@94..108
              0: CSS_PSEUDO_CLASS_SELECTOR@94..108
                0: COLON@94..96 ":" [Newline("\n")] []
                1: CSS_PSEUDO_CLASS_FUNCTION_VALUE_LIST@96..108
                  0: LANG_KW@96..100 "lang" [] []
                  1: L_PAREN@100..101 "(" [] []
                  2: CSS_PSEUDO_VALUE_LIST@101..106
                    0: CSS_IDENTIFIER@101..106
                      0: IDENT@101..106 "fr-be" [] []
                  3: R_PAREN@106..108 ")" [] [Whitespace(" ")]
          1: R_ANGLE@108..110 ">" [] [Whitespace(" ")]
          2: CSS_COMPOUND_SELECTOR@110..112
            0: CSS_NESTED_SELECTOR_LIST@110..110
            1: CSS_TYPE_SELECTOR@110..112
              0: (empty)
              1: CSS_IDENTIFIER@110..112
                0: IDENT@110..112 "q" [] [Whitespace(" ")]
            2: CSS_SUB_SELECTOR_LIST@112..112
      1: CSS_DECLARATION_OR_RULE_BLOCK@112..114
        0: L_CURLY@112..113 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@113..113
        2: R_CURLY@113..114 "}" [] []
    6: CSS_QUALIFIED_RULE@114..131
      0: CSS_SELECTOR_LIST@114..129
        0: CSS_COMPLEX_SELECTOR@114..129
          0: CSS_COMPOUND_SELECTOR@114..125
            0: CSS_NESTED_SELECTOR_LIST@114..114
            1: (empty)
            2: CSS_SUB_SELECTOR_LIST@114..125
              0: CSS_PSEUDO_CLASS_SELECTOR@114..125
                0: COLON@114..116 ":" [Newline("\n")] []
                1: CSS_PSEUDO_CLASS_FUNCTION_VALUE_LIST@116..125
                  0: LANG_KW@116..120 "lang" [] []
                  1: L_PAREN@120..121 "(" [] []
                  2: CSS_PSEUDO_VALUE_LIST@121..123
                    0: CSS_IDENTIFIER@121..123
                      0: IDENT@121..123 "de" [] []
                  3: R_PAREN@123..125 ")" [] [Whitespace(" ")]
          1: R_ANGLE@125..127 ">" [] [Whitespace(" ")]
          2: CSS_COMPOUND_SELECTOR@127..129
            0: CSS_NESTED_SELECTOR_LIST@127..127
            1: CSS_TYPE_SELECTOR@127..129
              0: (empty)
              1: CSS_IDENTIFIER@127..129
                0: IDENT@127..129 "q" [] [Whitespace(" ")]
            2: CSS_SUB_SELECTOR_LIST@129..129
      1: CSS_DECLARATION_OR_RULE_BLOCK@129..131
        0: L_CURLY@129..130 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@130..130
        2: R_CURLY@130..131 "}" [] []
    7: CSS_QUALIFIED_RULE@131..154
      0: CSS_SELECTOR_LIST@131..152
        0: CSS_COMPLEX_SELECTOR@131..152
          0: CSS_COMPOUND_SELECTOR@131..144
            0: CSS_NESTED_SELECTOR_LIST@131..131
            1: (empty)
            2: CSS_SUB_SELECTOR_LIST@131..144
              0: CSS_PSEUDO_CLASS_SELECTOR@131..144
                0: COLON@131..133 ":" [Newline("\n")] []
                1: CSS_PSEUDO_CLASS_FUNCTION_VALUE_LIST@133..144
                  0: LANG_KW@133..137 "lang" [] []
                  1: L_PAREN@137..138 "(" [] []
                  2: CSS_PSEUDO_VALUE_LIST@138..143
                    0: CSS_IDENTIFIER@138..143
                      0: IDENT@138..143 "fr-be" [] []
                  3: R_PAREN@143..144 ")" [] []
          1: CSS_SPACE_LITERAL@144..145 " " [] []
          2: CSS_COMPOUND_SELECTOR@145..152
            0: CSS_NESTED_SELECTOR_LIST@145..145
            1: (empty)
            2: CSS_SUB_SELECTOR_LIST@145..152
              0: CSS_CLASS_SELECTOR@145..152
                0: DOT@145..146 "." [] []
                1: CSS_CUSTOM_IDENTIFIER@146..152
                  0: IDENT@146..152 "class" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@152..154
        0: L_CURLY@152..153 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@153..153
        2: R_CURLY@153..154 "}" [] []
  2: EOF@154..155 "" [Newline("\n")] []

```
