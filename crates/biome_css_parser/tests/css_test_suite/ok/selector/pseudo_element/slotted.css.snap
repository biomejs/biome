---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```css
::slotted(*) {}
::slotted(span) {}
::slotted(   span   ) {}
::SLOTTED(SPAN) {
}

```


## AST

```
CssStyleSheet {
    bom_token: missing (optional),
    content: CssStyleSheetContent [
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssPreservedTokenKey {
                    value: COLON@0..1 ":" [] [],
                },
                CssPreservedTokenKey {
                    value: COLON@1..2 ":" [] [],
                },
                CssFunctionBlock {
                    css_function_token: CssFunctionToken {
                        valye_token: FUNCTION_TOKEN@2..10 "slotted(" [] [],
                    },
                    css_component_value_list: CssComponentValueList [
                        CssDelim {
                            value_token: DELIM@10..11 "*" [] [],
                        },
                    ],
                    r_paren_token: R_PAREN@11..13 ")" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@13..14 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@14..15 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssPreservedTokenKey {
                    value: COLON@15..17 ":" [Newline("\n")] [],
                },
                CssPreservedTokenKey {
                    value: COLON@17..18 ":" [] [],
                },
                CssFunctionBlock {
                    css_function_token: CssFunctionToken {
                        valye_token: FUNCTION_TOKEN@18..26 "slotted(" [] [],
                    },
                    css_component_value_list: CssComponentValueList [
                        CssIdentifier {
                            value_token: IDENT@26..30 "span" [] [],
                        },
                    ],
                    r_paren_token: R_PAREN@30..32 ")" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@32..33 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@33..34 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssPreservedTokenKey {
                    value: COLON@34..36 ":" [Newline("\n")] [],
                },
                CssPreservedTokenKey {
                    value: COLON@36..37 ":" [] [],
                },
                CssFunctionBlock {
                    css_function_token: CssFunctionToken {
                        valye_token: FUNCTION_TOKEN@37..48 "slotted(" [] [Whitespace("   ")],
                    },
                    css_component_value_list: CssComponentValueList [
                        CssIdentifier {
                            value_token: IDENT@48..55 "span" [] [Whitespace("   ")],
                        },
                    ],
                    r_paren_token: R_PAREN@55..57 ")" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@57..58 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@58..59 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssPreservedTokenKey {
                    value: COLON@59..61 ":" [Newline("\n")] [],
                },
                CssPreservedTokenKey {
                    value: COLON@61..62 ":" [] [],
                },
                CssFunctionBlock {
                    css_function_token: CssFunctionToken {
                        valye_token: FUNCTION_TOKEN@62..70 "SLOTTED(" [] [],
                    },
                    css_component_value_list: CssComponentValueList [
                        CssIdentifier {
                            value_token: IDENT@70..74 "SPAN" [] [],
                        },
                    ],
                    r_paren_token: R_PAREN@74..76 ")" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@76..77 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@77..79 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@79..80 "" [Newline("\n")] [],
}
```

## CST

```
0: CSS_STYLE_SHEET@0..80
  0: (empty)
  1: CSS_STYLE_SHEET_CONTENT@0..79
    0: CSS_QUALIFIED_RULE@0..15
      0: CSS_QUALIFIED_RULE_PRELUDE@0..13
        0: CSS_PRESERVED_TOKEN_KEY@0..1
          0: COLON@0..1 ":" [] []
        1: CSS_PRESERVED_TOKEN_KEY@1..2
          0: COLON@1..2 ":" [] []
        2: CSS_FUNCTION_BLOCK@2..13
          0: CSS_FUNCTION_TOKEN@2..10
            0: FUNCTION_TOKEN@2..10 "slotted(" [] []
          1: CSS_COMPONENT_VALUE_LIST@10..11
            0: CSS_DELIM@10..11
              0: DELIM@10..11 "*" [] []
          2: R_PAREN@11..13 ")" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@13..15
        0: L_CURLY@13..14 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@14..14
        2: R_CURLY@14..15 "}" [] []
    1: CSS_QUALIFIED_RULE@15..34
      0: CSS_QUALIFIED_RULE_PRELUDE@15..32
        0: CSS_PRESERVED_TOKEN_KEY@15..17
          0: COLON@15..17 ":" [Newline("\n")] []
        1: CSS_PRESERVED_TOKEN_KEY@17..18
          0: COLON@17..18 ":" [] []
        2: CSS_FUNCTION_BLOCK@18..32
          0: CSS_FUNCTION_TOKEN@18..26
            0: FUNCTION_TOKEN@18..26 "slotted(" [] []
          1: CSS_COMPONENT_VALUE_LIST@26..30
            0: CSS_IDENTIFIER@26..30
              0: IDENT@26..30 "span" [] []
          2: R_PAREN@30..32 ")" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@32..34
        0: L_CURLY@32..33 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@33..33
        2: R_CURLY@33..34 "}" [] []
    2: CSS_QUALIFIED_RULE@34..59
      0: CSS_QUALIFIED_RULE_PRELUDE@34..57
        0: CSS_PRESERVED_TOKEN_KEY@34..36
          0: COLON@34..36 ":" [Newline("\n")] []
        1: CSS_PRESERVED_TOKEN_KEY@36..37
          0: COLON@36..37 ":" [] []
        2: CSS_FUNCTION_BLOCK@37..57
          0: CSS_FUNCTION_TOKEN@37..48
            0: FUNCTION_TOKEN@37..48 "slotted(" [] [Whitespace("   ")]
          1: CSS_COMPONENT_VALUE_LIST@48..55
            0: CSS_IDENTIFIER@48..55
              0: IDENT@48..55 "span" [] [Whitespace("   ")]
          2: R_PAREN@55..57 ")" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@57..59
        0: L_CURLY@57..58 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@58..58
        2: R_CURLY@58..59 "}" [] []
    3: CSS_QUALIFIED_RULE@59..79
      0: CSS_QUALIFIED_RULE_PRELUDE@59..76
        0: CSS_PRESERVED_TOKEN_KEY@59..61
          0: COLON@59..61 ":" [Newline("\n")] []
        1: CSS_PRESERVED_TOKEN_KEY@61..62
          0: COLON@61..62 ":" [] []
        2: CSS_FUNCTION_BLOCK@62..76
          0: CSS_FUNCTION_TOKEN@62..70
            0: FUNCTION_TOKEN@62..70 "SLOTTED(" [] []
          1: CSS_COMPONENT_VALUE_LIST@70..74
            0: CSS_IDENTIFIER@70..74
              0: IDENT@70..74 "SPAN" [] []
          2: R_PAREN@74..76 ")" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@76..79
        0: L_CURLY@76..77 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@77..77
        2: R_CURLY@77..79 "}" [Newline("\n")] []
  2: EOF@79..80 "" [Newline("\n")] []

```


