---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```css
::cue {}
::cue(v[voice="Esme"]) {}
::cue(   v[voice="Esme"]   ) {}
video::cue {}
video::cue(b) {}
video::cue(#cue1) {}

```


## AST

```
CssRoot {
    bom_token: missing (optional),
    rules: CssRuleList [
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssPseudoElementSelector {
                            double_colon_token: COLON2@0..2 "::" [] [],
                            element: CssPseudoElementIdentifier {
                                name: CssIdentifier {
                                    value_token: IDENT@2..6 "cue" [] [Whitespace(" ")],
                                },
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@6..7 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@7..8 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssPseudoElementSelector {
                            double_colon_token: COLON2@8..11 "::" [Newline("\n")] [],
                            element: CssPseudoElementFunctionSelector {
                                name: CssIdentifier {
                                    value_token: IDENT@11..14 "cue" [] [],
                                },
                                l_paren_token: L_PAREN@14..15 "(" [] [],
                                selector: CssCompoundSelector {
                                    nesting_selectors: CssNestedSelectorList [],
                                    simple_selector: CssTypeSelector {
                                        namespace: missing (optional),
                                        ident: CssIdentifier {
                                            value_token: IDENT@15..16 "v" [] [],
                                        },
                                    },
                                    sub_selectors: CssSubSelectorList [
                                        CssAttributeSelector {
                                            l_brack_token: L_BRACK@16..17 "[" [] [],
                                            name: CssAttributeName {
                                                namespace: missing (optional),
                                                name: CssIdentifier {
                                                    value_token: IDENT@17..22 "voice" [] [],
                                                },
                                            },
                                            matcher: CssAttributeMatcher {
                                                operator: EQ@22..23 "=" [] [],
                                                value: CssAttributeMatcherValue {
                                                    name: CssString {
                                                        value_token: CSS_STRING_LITERAL@23..29 "\"Esme\"" [] [],
                                                    },
                                                },
                                                modifier: missing (optional),
                                            },
                                            r_brack_token: R_BRACK@29..30 "]" [] [],
                                        },
                                    ],
                                },
                                r_paren_token: R_PAREN@30..32 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@32..33 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@33..34 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssPseudoElementSelector {
                            double_colon_token: COLON2@34..37 "::" [Newline("\n")] [],
                            element: CssPseudoElementFunctionSelector {
                                name: CssIdentifier {
                                    value_token: IDENT@37..40 "cue" [] [],
                                },
                                l_paren_token: L_PAREN@40..44 "(" [] [Whitespace("   ")],
                                selector: CssCompoundSelector {
                                    nesting_selectors: CssNestedSelectorList [],
                                    simple_selector: CssTypeSelector {
                                        namespace: missing (optional),
                                        ident: CssIdentifier {
                                            value_token: IDENT@44..45 "v" [] [],
                                        },
                                    },
                                    sub_selectors: CssSubSelectorList [
                                        CssAttributeSelector {
                                            l_brack_token: L_BRACK@45..46 "[" [] [],
                                            name: CssAttributeName {
                                                namespace: missing (optional),
                                                name: CssIdentifier {
                                                    value_token: IDENT@46..51 "voice" [] [],
                                                },
                                            },
                                            matcher: CssAttributeMatcher {
                                                operator: EQ@51..52 "=" [] [],
                                                value: CssAttributeMatcherValue {
                                                    name: CssString {
                                                        value_token: CSS_STRING_LITERAL@52..58 "\"Esme\"" [] [],
                                                    },
                                                },
                                                modifier: missing (optional),
                                            },
                                            r_brack_token: R_BRACK@58..62 "]" [] [Whitespace("   ")],
                                        },
                                    ],
                                },
                                r_paren_token: R_PAREN@62..64 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@64..65 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@65..66 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@66..72 "video" [Newline("\n")] [],
                        },
                    },
                    sub_selectors: CssSubSelectorList [
                        CssPseudoElementSelector {
                            double_colon_token: COLON2@72..74 "::" [] [],
                            element: CssPseudoElementIdentifier {
                                name: CssIdentifier {
                                    value_token: IDENT@74..78 "cue" [] [Whitespace(" ")],
                                },
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@78..79 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@79..80 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@80..86 "video" [Newline("\n")] [],
                        },
                    },
                    sub_selectors: CssSubSelectorList [
                        CssPseudoElementSelector {
                            double_colon_token: COLON2@86..88 "::" [] [],
                            element: CssPseudoElementFunctionSelector {
                                name: CssIdentifier {
                                    value_token: IDENT@88..91 "cue" [] [],
                                },
                                l_paren_token: L_PAREN@91..92 "(" [] [],
                                selector: CssCompoundSelector {
                                    nesting_selectors: CssNestedSelectorList [],
                                    simple_selector: CssTypeSelector {
                                        namespace: missing (optional),
                                        ident: CssIdentifier {
                                            value_token: IDENT@92..93 "b" [] [],
                                        },
                                    },
                                    sub_selectors: CssSubSelectorList [],
                                },
                                r_paren_token: R_PAREN@93..95 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@95..96 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@96..97 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selectors: CssNestedSelectorList [],
                    simple_selector: CssTypeSelector {
                        namespace: missing (optional),
                        ident: CssIdentifier {
                            value_token: IDENT@97..103 "video" [Newline("\n")] [],
                        },
                    },
                    sub_selectors: CssSubSelectorList [
                        CssPseudoElementSelector {
                            double_colon_token: COLON2@103..105 "::" [] [],
                            element: CssPseudoElementFunctionSelector {
                                name: CssIdentifier {
                                    value_token: IDENT@105..108 "cue" [] [],
                                },
                                l_paren_token: L_PAREN@108..109 "(" [] [],
                                selector: CssCompoundSelector {
                                    nesting_selectors: CssNestedSelectorList [],
                                    simple_selector: missing (optional),
                                    sub_selectors: CssSubSelectorList [
                                        CssIdSelector {
                                            hash_token: HASH@109..110 "#" [] [],
                                            name: CssCustomIdentifier {
                                                value_token: IDENT@110..114 "cue1" [] [],
                                            },
                                        },
                                    ],
                                },
                                r_paren_token: R_PAREN@114..116 ")" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@116..117 "{" [] [],
                items: CssDeclarationOrRuleList [],
                r_curly_token: R_CURLY@117..118 "}" [] [],
            },
        },
    ],
    eof_token: EOF@118..119 "" [Newline("\n")] [],
}
```

## CST

```
0: CSS_ROOT@0..119
  0: (empty)
  1: CSS_RULE_LIST@0..118
    0: CSS_QUALIFIED_RULE@0..8
      0: CSS_SELECTOR_LIST@0..6
        0: CSS_COMPOUND_SELECTOR@0..6
          0: CSS_NESTED_SELECTOR_LIST@0..0
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@0..6
            0: CSS_PSEUDO_ELEMENT_SELECTOR@0..6
              0: COLON2@0..2 "::" [] []
              1: CSS_PSEUDO_ELEMENT_IDENTIFIER@2..6
                0: CSS_IDENTIFIER@2..6
                  0: IDENT@2..6 "cue" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@6..8
        0: L_CURLY@6..7 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@7..7
        2: R_CURLY@7..8 "}" [] []
    1: CSS_QUALIFIED_RULE@8..34
      0: CSS_SELECTOR_LIST@8..32
        0: CSS_COMPOUND_SELECTOR@8..32
          0: CSS_NESTED_SELECTOR_LIST@8..8
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@8..32
            0: CSS_PSEUDO_ELEMENT_SELECTOR@8..32
              0: COLON2@8..11 "::" [Newline("\n")] []
              1: CSS_PSEUDO_ELEMENT_FUNCTION_SELECTOR@11..32
                0: CSS_IDENTIFIER@11..14
                  0: IDENT@11..14 "cue" [] []
                1: L_PAREN@14..15 "(" [] []
                2: CSS_COMPOUND_SELECTOR@15..30
                  0: CSS_NESTED_SELECTOR_LIST@15..15
                  1: CSS_TYPE_SELECTOR@15..16
                    0: (empty)
                    1: CSS_IDENTIFIER@15..16
                      0: IDENT@15..16 "v" [] []
                  2: CSS_SUB_SELECTOR_LIST@16..30
                    0: CSS_ATTRIBUTE_SELECTOR@16..30
                      0: L_BRACK@16..17 "[" [] []
                      1: CSS_ATTRIBUTE_NAME@17..22
                        0: (empty)
                        1: CSS_IDENTIFIER@17..22
                          0: IDENT@17..22 "voice" [] []
                      2: CSS_ATTRIBUTE_MATCHER@22..29
                        0: EQ@22..23 "=" [] []
                        1: CSS_ATTRIBUTE_MATCHER_VALUE@23..29
                          0: CSS_STRING@23..29
                            0: CSS_STRING_LITERAL@23..29 "\"Esme\"" [] []
                        2: (empty)
                      3: R_BRACK@29..30 "]" [] []
                3: R_PAREN@30..32 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@32..34
        0: L_CURLY@32..33 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@33..33
        2: R_CURLY@33..34 "}" [] []
    2: CSS_QUALIFIED_RULE@34..66
      0: CSS_SELECTOR_LIST@34..64
        0: CSS_COMPOUND_SELECTOR@34..64
          0: CSS_NESTED_SELECTOR_LIST@34..34
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@34..64
            0: CSS_PSEUDO_ELEMENT_SELECTOR@34..64
              0: COLON2@34..37 "::" [Newline("\n")] []
              1: CSS_PSEUDO_ELEMENT_FUNCTION_SELECTOR@37..64
                0: CSS_IDENTIFIER@37..40
                  0: IDENT@37..40 "cue" [] []
                1: L_PAREN@40..44 "(" [] [Whitespace("   ")]
                2: CSS_COMPOUND_SELECTOR@44..62
                  0: CSS_NESTED_SELECTOR_LIST@44..44
                  1: CSS_TYPE_SELECTOR@44..45
                    0: (empty)
                    1: CSS_IDENTIFIER@44..45
                      0: IDENT@44..45 "v" [] []
                  2: CSS_SUB_SELECTOR_LIST@45..62
                    0: CSS_ATTRIBUTE_SELECTOR@45..62
                      0: L_BRACK@45..46 "[" [] []
                      1: CSS_ATTRIBUTE_NAME@46..51
                        0: (empty)
                        1: CSS_IDENTIFIER@46..51
                          0: IDENT@46..51 "voice" [] []
                      2: CSS_ATTRIBUTE_MATCHER@51..58
                        0: EQ@51..52 "=" [] []
                        1: CSS_ATTRIBUTE_MATCHER_VALUE@52..58
                          0: CSS_STRING@52..58
                            0: CSS_STRING_LITERAL@52..58 "\"Esme\"" [] []
                        2: (empty)
                      3: R_BRACK@58..62 "]" [] [Whitespace("   ")]
                3: R_PAREN@62..64 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@64..66
        0: L_CURLY@64..65 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@65..65
        2: R_CURLY@65..66 "}" [] []
    3: CSS_QUALIFIED_RULE@66..80
      0: CSS_SELECTOR_LIST@66..78
        0: CSS_COMPOUND_SELECTOR@66..78
          0: CSS_NESTED_SELECTOR_LIST@66..66
          1: CSS_TYPE_SELECTOR@66..72
            0: (empty)
            1: CSS_IDENTIFIER@66..72
              0: IDENT@66..72 "video" [Newline("\n")] []
          2: CSS_SUB_SELECTOR_LIST@72..78
            0: CSS_PSEUDO_ELEMENT_SELECTOR@72..78
              0: COLON2@72..74 "::" [] []
              1: CSS_PSEUDO_ELEMENT_IDENTIFIER@74..78
                0: CSS_IDENTIFIER@74..78
                  0: IDENT@74..78 "cue" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@78..80
        0: L_CURLY@78..79 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@79..79
        2: R_CURLY@79..80 "}" [] []
    4: CSS_QUALIFIED_RULE@80..97
      0: CSS_SELECTOR_LIST@80..95
        0: CSS_COMPOUND_SELECTOR@80..95
          0: CSS_NESTED_SELECTOR_LIST@80..80
          1: CSS_TYPE_SELECTOR@80..86
            0: (empty)
            1: CSS_IDENTIFIER@80..86
              0: IDENT@80..86 "video" [Newline("\n")] []
          2: CSS_SUB_SELECTOR_LIST@86..95
            0: CSS_PSEUDO_ELEMENT_SELECTOR@86..95
              0: COLON2@86..88 "::" [] []
              1: CSS_PSEUDO_ELEMENT_FUNCTION_SELECTOR@88..95
                0: CSS_IDENTIFIER@88..91
                  0: IDENT@88..91 "cue" [] []
                1: L_PAREN@91..92 "(" [] []
                2: CSS_COMPOUND_SELECTOR@92..93
                  0: CSS_NESTED_SELECTOR_LIST@92..92
                  1: CSS_TYPE_SELECTOR@92..93
                    0: (empty)
                    1: CSS_IDENTIFIER@92..93
                      0: IDENT@92..93 "b" [] []
                  2: CSS_SUB_SELECTOR_LIST@93..93
                3: R_PAREN@93..95 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@95..97
        0: L_CURLY@95..96 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@96..96
        2: R_CURLY@96..97 "}" [] []
    5: CSS_QUALIFIED_RULE@97..118
      0: CSS_SELECTOR_LIST@97..116
        0: CSS_COMPOUND_SELECTOR@97..116
          0: CSS_NESTED_SELECTOR_LIST@97..97
          1: CSS_TYPE_SELECTOR@97..103
            0: (empty)
            1: CSS_IDENTIFIER@97..103
              0: IDENT@97..103 "video" [Newline("\n")] []
          2: CSS_SUB_SELECTOR_LIST@103..116
            0: CSS_PSEUDO_ELEMENT_SELECTOR@103..116
              0: COLON2@103..105 "::" [] []
              1: CSS_PSEUDO_ELEMENT_FUNCTION_SELECTOR@105..116
                0: CSS_IDENTIFIER@105..108
                  0: IDENT@105..108 "cue" [] []
                1: L_PAREN@108..109 "(" [] []
                2: CSS_COMPOUND_SELECTOR@109..114
                  0: CSS_NESTED_SELECTOR_LIST@109..109
                  1: (empty)
                  2: CSS_SUB_SELECTOR_LIST@109..114
                    0: CSS_ID_SELECTOR@109..114
                      0: HASH@109..110 "#" [] []
                      1: CSS_CUSTOM_IDENTIFIER@110..114
                        0: IDENT@110..114 "cue1" [] []
                3: R_PAREN@114..116 ")" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@116..118
        0: L_CURLY@116..117 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@117..117
        2: R_CURLY@117..118 "}" [] []
  2: EOF@118..119 "" [Newline("\n")] []

```
