---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```css
::cue {}
::cue(v[voice="Esme"]) {}
::cue(   v[voice="Esme"]   ) {}
video::cue {}
video::cue(b) {}
video::cue(#cue1) {}

```


## AST

```
CssStyleSheet {
    bom_token: missing (optional),
    content: CssStyleSheetContent [
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssPreservedTokenKey {
                    value: COLON@0..1 ":" [] [],
                },
                CssPreservedTokenKey {
                    value: COLON@1..2 ":" [] [],
                },
                CssIdentifier {
                    value_token: IDENT@2..6 "cue" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@6..7 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@7..8 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssPreservedTokenKey {
                    value: COLON@8..10 ":" [Newline("\n")] [],
                },
                CssPreservedTokenKey {
                    value: COLON@10..11 ":" [] [],
                },
                CssFunctionBlock {
                    css_function_token: CssFunctionToken {
                        valye_token: FUNCTION_TOKEN@11..15 "cue(" [] [],
                    },
                    css_component_value_list: CssComponentValueList [
                        CssIdentifier {
                            value_token: IDENT@15..16 "v" [] [],
                        },
                        CssSimpleSquareBracketsBlock {
                            l_brack_token: L_BRACK@16..17 "[" [] [],
                            content: CssSimpleComponentValueList [
                                CssIdentifier {
                                    value_token: IDENT@17..22 "voice" [] [],
                                },
                                CssDelim {
                                    value_token: DELIM@22..23 "=" [] [],
                                },
                                CssString {
                                    value_token: CSS_STRING_LITERAL@23..29 "\"Esme\"" [] [],
                                },
                            ],
                            r_brack_token: R_BRACK@29..30 "]" [] [],
                        },
                    ],
                    r_paren_token: R_PAREN@30..32 ")" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@32..33 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@33..34 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssPreservedTokenKey {
                    value: COLON@34..36 ":" [Newline("\n")] [],
                },
                CssPreservedTokenKey {
                    value: COLON@36..37 ":" [] [],
                },
                CssFunctionBlock {
                    css_function_token: CssFunctionToken {
                        valye_token: FUNCTION_TOKEN@37..44 "cue(" [] [Whitespace("   ")],
                    },
                    css_component_value_list: CssComponentValueList [
                        CssIdentifier {
                            value_token: IDENT@44..45 "v" [] [],
                        },
                        CssSimpleSquareBracketsBlock {
                            l_brack_token: L_BRACK@45..46 "[" [] [],
                            content: CssSimpleComponentValueList [
                                CssIdentifier {
                                    value_token: IDENT@46..51 "voice" [] [],
                                },
                                CssDelim {
                                    value_token: DELIM@51..52 "=" [] [],
                                },
                                CssString {
                                    value_token: CSS_STRING_LITERAL@52..58 "\"Esme\"" [] [],
                                },
                            ],
                            r_brack_token: R_BRACK@58..62 "]" [] [Whitespace("   ")],
                        },
                    ],
                    r_paren_token: R_PAREN@62..64 ")" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@64..65 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@65..66 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@66..72 "video" [Newline("\n")] [],
                },
                CssPreservedTokenKey {
                    value: COLON@72..73 ":" [] [],
                },
                CssPreservedTokenKey {
                    value: COLON@73..74 ":" [] [],
                },
                CssIdentifier {
                    value_token: IDENT@74..78 "cue" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@78..79 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@79..80 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@80..86 "video" [Newline("\n")] [],
                },
                CssPreservedTokenKey {
                    value: COLON@86..87 ":" [] [],
                },
                CssPreservedTokenKey {
                    value: COLON@87..88 ":" [] [],
                },
                CssFunctionBlock {
                    css_function_token: CssFunctionToken {
                        valye_token: FUNCTION_TOKEN@88..92 "cue(" [] [],
                    },
                    css_component_value_list: CssComponentValueList [
                        CssIdentifier {
                            value_token: IDENT@92..93 "b" [] [],
                        },
                    ],
                    r_paren_token: R_PAREN@93..95 ")" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@95..96 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@96..97 "}" [] [],
            },
        },
        CssQualifiedRule {
            prelude: CssQualifiedRulePrelude [
                CssIdentifier {
                    value_token: IDENT@97..103 "video" [Newline("\n")] [],
                },
                CssPreservedTokenKey {
                    value: COLON@103..104 ":" [] [],
                },
                CssPreservedTokenKey {
                    value: COLON@104..105 ":" [] [],
                },
                CssFunctionBlock {
                    css_function_token: CssFunctionToken {
                        valye_token: FUNCTION_TOKEN@105..109 "cue(" [] [],
                    },
                    css_component_value_list: CssComponentValueList [
                        CssHash {
                            value_token: HASH_TOKEN@109..114 "#cue1" [] [],
                        },
                    ],
                    r_paren_token: R_PAREN@114..116 ")" [] [Whitespace(" ")],
                },
            ],
            block: CssCurlyBracketsBlock {
                l_curly_token: L_CURLY@116..117 "{" [] [],
                content: CssCurlyBracketsBlockContent [],
                r_curly_token: R_CURLY@117..118 "}" [] [],
            },
        },
    ],
    eof_token: EOF@118..119 "" [Newline("\n")] [],
}
```

## CST

```
0: CSS_STYLE_SHEET@0..119
  0: (empty)
  1: CSS_STYLE_SHEET_CONTENT@0..118
    0: CSS_QUALIFIED_RULE@0..8
      0: CSS_QUALIFIED_RULE_PRELUDE@0..6
        0: CSS_PRESERVED_TOKEN_KEY@0..1
          0: COLON@0..1 ":" [] []
        1: CSS_PRESERVED_TOKEN_KEY@1..2
          0: COLON@1..2 ":" [] []
        2: CSS_IDENTIFIER@2..6
          0: IDENT@2..6 "cue" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@6..8
        0: L_CURLY@6..7 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@7..7
        2: R_CURLY@7..8 "}" [] []
    1: CSS_QUALIFIED_RULE@8..34
      0: CSS_QUALIFIED_RULE_PRELUDE@8..32
        0: CSS_PRESERVED_TOKEN_KEY@8..10
          0: COLON@8..10 ":" [Newline("\n")] []
        1: CSS_PRESERVED_TOKEN_KEY@10..11
          0: COLON@10..11 ":" [] []
        2: CSS_FUNCTION_BLOCK@11..32
          0: CSS_FUNCTION_TOKEN@11..15
            0: FUNCTION_TOKEN@11..15 "cue(" [] []
          1: CSS_COMPONENT_VALUE_LIST@15..30
            0: CSS_IDENTIFIER@15..16
              0: IDENT@15..16 "v" [] []
            1: CSS_SIMPLE_SQUARE_BRACKETS_BLOCK@16..30
              0: L_BRACK@16..17 "[" [] []
              1: CSS_SIMPLE_COMPONENT_VALUE_LIST@17..29
                0: CSS_IDENTIFIER@17..22
                  0: IDENT@17..22 "voice" [] []
                1: CSS_DELIM@22..23
                  0: DELIM@22..23 "=" [] []
                2: CSS_STRING@23..29
                  0: CSS_STRING_LITERAL@23..29 "\"Esme\"" [] []
              2: R_BRACK@29..30 "]" [] []
          2: R_PAREN@30..32 ")" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@32..34
        0: L_CURLY@32..33 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@33..33
        2: R_CURLY@33..34 "}" [] []
    2: CSS_QUALIFIED_RULE@34..66
      0: CSS_QUALIFIED_RULE_PRELUDE@34..64
        0: CSS_PRESERVED_TOKEN_KEY@34..36
          0: COLON@34..36 ":" [Newline("\n")] []
        1: CSS_PRESERVED_TOKEN_KEY@36..37
          0: COLON@36..37 ":" [] []
        2: CSS_FUNCTION_BLOCK@37..64
          0: CSS_FUNCTION_TOKEN@37..44
            0: FUNCTION_TOKEN@37..44 "cue(" [] [Whitespace("   ")]
          1: CSS_COMPONENT_VALUE_LIST@44..62
            0: CSS_IDENTIFIER@44..45
              0: IDENT@44..45 "v" [] []
            1: CSS_SIMPLE_SQUARE_BRACKETS_BLOCK@45..62
              0: L_BRACK@45..46 "[" [] []
              1: CSS_SIMPLE_COMPONENT_VALUE_LIST@46..58
                0: CSS_IDENTIFIER@46..51
                  0: IDENT@46..51 "voice" [] []
                1: CSS_DELIM@51..52
                  0: DELIM@51..52 "=" [] []
                2: CSS_STRING@52..58
                  0: CSS_STRING_LITERAL@52..58 "\"Esme\"" [] []
              2: R_BRACK@58..62 "]" [] [Whitespace("   ")]
          2: R_PAREN@62..64 ")" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@64..66
        0: L_CURLY@64..65 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@65..65
        2: R_CURLY@65..66 "}" [] []
    3: CSS_QUALIFIED_RULE@66..80
      0: CSS_QUALIFIED_RULE_PRELUDE@66..78
        0: CSS_IDENTIFIER@66..72
          0: IDENT@66..72 "video" [Newline("\n")] []
        1: CSS_PRESERVED_TOKEN_KEY@72..73
          0: COLON@72..73 ":" [] []
        2: CSS_PRESERVED_TOKEN_KEY@73..74
          0: COLON@73..74 ":" [] []
        3: CSS_IDENTIFIER@74..78
          0: IDENT@74..78 "cue" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@78..80
        0: L_CURLY@78..79 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@79..79
        2: R_CURLY@79..80 "}" [] []
    4: CSS_QUALIFIED_RULE@80..97
      0: CSS_QUALIFIED_RULE_PRELUDE@80..95
        0: CSS_IDENTIFIER@80..86
          0: IDENT@80..86 "video" [Newline("\n")] []
        1: CSS_PRESERVED_TOKEN_KEY@86..87
          0: COLON@86..87 ":" [] []
        2: CSS_PRESERVED_TOKEN_KEY@87..88
          0: COLON@87..88 ":" [] []
        3: CSS_FUNCTION_BLOCK@88..95
          0: CSS_FUNCTION_TOKEN@88..92
            0: FUNCTION_TOKEN@88..92 "cue(" [] []
          1: CSS_COMPONENT_VALUE_LIST@92..93
            0: CSS_IDENTIFIER@92..93
              0: IDENT@92..93 "b" [] []
          2: R_PAREN@93..95 ")" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@95..97
        0: L_CURLY@95..96 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@96..96
        2: R_CURLY@96..97 "}" [] []
    5: CSS_QUALIFIED_RULE@97..118
      0: CSS_QUALIFIED_RULE_PRELUDE@97..116
        0: CSS_IDENTIFIER@97..103
          0: IDENT@97..103 "video" [Newline("\n")] []
        1: CSS_PRESERVED_TOKEN_KEY@103..104
          0: COLON@103..104 ":" [] []
        2: CSS_PRESERVED_TOKEN_KEY@104..105
          0: COLON@104..105 ":" [] []
        3: CSS_FUNCTION_BLOCK@105..116
          0: CSS_FUNCTION_TOKEN@105..109
            0: FUNCTION_TOKEN@105..109 "cue(" [] []
          1: CSS_COMPONENT_VALUE_LIST@109..114
            0: CSS_HASH@109..114
              0: HASH_TOKEN@109..114 "#cue1" [] []
          2: R_PAREN@114..116 ")" [] [Whitespace(" ")]
      1: CSS_CURLY_BRACKETS_BLOCK@116..118
        0: L_CURLY@116..117 "{" [] []
        1: CSS_CURLY_BRACKETS_BLOCK_CONTENT@117..117
        2: R_CURLY@117..118 "}" [] []
  2: EOF@118..119 "" [Newline("\n")] []

```


