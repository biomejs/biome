---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```css
[ .class {}

[title="foo" P] {}

```


## AST

```
CssRoot {
    rules: CssRuleList [
        CssRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssAttributeSelector {
                            l_brack_token: L_BRACK@0..2 "[" [] [Whitespace(" ")],
                            name: missing (required),
                            matcher: missing (optional),
                            r_brack_token: missing (required),
                        },
                        CssClassSelector {
                            dot_token: DOT@2..3 "." [] [],
                            name: CssIdentifier {
                                value_token: IDENT@3..9 "class" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssBlock {
                l_curly_token: L_CURLY@9..10 "{" [] [],
                declaration_list: CssDeclarationList [],
                r_curly_token: R_CURLY@10..11 "}" [] [],
            },
        },
        CssRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssBogusSubSelector {
                            items: [
                                L_BRACK@11..14 "[" [Newline("\n"), Newline("\n")] [],
                                CssIdentifier {
                                    value_token: IDENT@14..19 "title" [] [],
                                },
                                CssBogus {
                                    items: [
                                        EQ@19..20 "=" [] [],
                                        CssAttributeMatcherValue {
                                            name: CssString {
                                                value_token: CSS_STRING_LITERAL@20..26 "\"foo\"" [] [Whitespace(" ")],
                                            },
                                        },
                                        IDENT@26..27 "P" [] [],
                                    ],
                                },
                                R_BRACK@27..29 "]" [] [Whitespace(" ")],
                            ],
                        },
                    ],
                },
            ],
            block: CssBlock {
                l_curly_token: L_CURLY@29..30 "{" [] [],
                declaration_list: CssDeclarationList [],
                r_curly_token: R_CURLY@30..31 "}" [] [],
            },
        },
    ],
    eof_token: EOF@31..32 "" [Newline("\n")] [],
}
```

## CST

```
0: CSS_ROOT@0..32
  0: CSS_RULE_LIST@0..31
    0: CSS_RULE@0..11
      0: CSS_SELECTOR_LIST@0..9
        0: CSS_COMPOUND_SELECTOR@0..9
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@0..9
            0: CSS_ATTRIBUTE_SELECTOR@0..2
              0: L_BRACK@0..2 "[" [] [Whitespace(" ")]
              1: (empty)
              2: (empty)
              3: (empty)
            1: CSS_CLASS_SELECTOR@2..9
              0: DOT@2..3 "." [] []
              1: CSS_IDENTIFIER@3..9
                0: IDENT@3..9 "class" [] [Whitespace(" ")]
      1: CSS_BLOCK@9..11
        0: L_CURLY@9..10 "{" [] []
        1: CSS_DECLARATION_LIST@10..10
        2: R_CURLY@10..11 "}" [] []
    1: CSS_RULE@11..31
      0: CSS_SELECTOR_LIST@11..29
        0: CSS_COMPOUND_SELECTOR@11..29
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@11..29
            0: CSS_BOGUS_SUB_SELECTOR@11..29
              0: L_BRACK@11..14 "[" [Newline("\n"), Newline("\n")] []
              1: CSS_IDENTIFIER@14..19
                0: IDENT@14..19 "title" [] []
              2: CSS_BOGUS@19..27
                0: EQ@19..20 "=" [] []
                1: CSS_ATTRIBUTE_MATCHER_VALUE@20..26
                  0: CSS_STRING@20..26
                    0: CSS_STRING_LITERAL@20..26 "\"foo\"" [] [Whitespace(" ")]
                2: IDENT@26..27 "P" [] []
              3: R_BRACK@27..29 "]" [] [Whitespace(" ")]
      1: CSS_BLOCK@29..31
        0: L_CURLY@29..30 "{" [] []
        1: CSS_DECLARATION_LIST@30..30
        2: R_CURLY@30..31 "}" [] []
  1: EOF@31..32 "" [Newline("\n")] []

```

## Diagnostics

```
attribute_selector.css:1:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected an identifier but instead found '.'.
  
  > 1 │ [ .class {}
      │   ^
    2 │ 
    3 │ [title="foo" P] {}
  
  i Expected an identifier here.
  
  > 1 │ [ .class {}
      │   ^
    2 │ 
    3 │ [title="foo" P] {}
  
attribute_selector.css:3:14 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a s, a S, an i, or a I but instead found 'P'.
  
    1 │ [ .class {}
    2 │ 
  > 3 │ [title="foo" P] {}
      │              ^
    4 │ 
  
  i Expected a s, a S, an i, or a I here.
  
    1 │ [ .class {}
    2 │ 
  > 3 │ [title="foo" P] {}
      │              ^
    4 │ 
  
```


