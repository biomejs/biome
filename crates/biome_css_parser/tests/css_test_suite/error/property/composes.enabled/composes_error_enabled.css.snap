---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```css
.a {
	composes: ;
}

.otherClassName {
	composes: className from ;
}

.otherClassName {
	composes: globalClassName from ;
}

.otherClassName {
	composes:  from ;
}

.otherClassName {
	composes:  from global;
}

```


## AST

```
CssRoot {
    bom_token: missing (optional),
    rules: CssRuleList [
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssClassSelector {
                            dot_token: DOT@0..1 "." [] [],
                            name: CssCustomIdentifier {
                                value_token: IDENT@1..3 "a" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@3..4 "{" [] [],
                items: CssDeclarationOrRuleList [
                    CssDeclarationWithSemicolon {
                        declaration: CssDeclaration {
                            property: CssComposesProperty {
                                name: CssIdentifier {
                                    value_token: IDENT@4..14 "composes" [Newline("\n"), Whitespace("\t")] [],
                                },
                                colon_token: COLON@14..16 ":" [] [Whitespace(" ")],
                                value: CssComposesPropertyValue {
                                    classes: CssComposesClassList [],
                                    specifier: missing (optional),
                                },
                            },
                            important: missing (optional),
                        },
                        semicolon_token: SEMICOLON@16..17 ";" [] [],
                    },
                ],
                r_curly_token: R_CURLY@17..19 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssClassSelector {
                            dot_token: DOT@19..22 "." [Newline("\n"), Newline("\n")] [],
                            name: CssCustomIdentifier {
                                value_token: IDENT@22..37 "otherClassName" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@37..38 "{" [] [],
                items: CssDeclarationOrRuleList [
                    CssDeclarationWithSemicolon {
                        declaration: CssDeclaration {
                            property: CssComposesProperty {
                                name: CssIdentifier {
                                    value_token: IDENT@38..48 "composes" [Newline("\n"), Whitespace("\t")] [],
                                },
                                colon_token: COLON@48..50 ":" [] [Whitespace(" ")],
                                value: CssComposesPropertyValue {
                                    classes: CssComposesClassList [
                                        CssCustomIdentifier {
                                            value_token: IDENT@50..60 "className" [] [Whitespace(" ")],
                                        },
                                    ],
                                    specifier: CssComposesImportSpecifier {
                                        from_token: FROM_KW@60..65 "from" [] [Whitespace(" ")],
                                        source: missing (required),
                                    },
                                },
                            },
                            important: missing (optional),
                        },
                        semicolon_token: SEMICOLON@65..66 ";" [] [],
                    },
                ],
                r_curly_token: R_CURLY@66..68 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssClassSelector {
                            dot_token: DOT@68..71 "." [Newline("\n"), Newline("\n")] [],
                            name: CssCustomIdentifier {
                                value_token: IDENT@71..86 "otherClassName" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@86..87 "{" [] [],
                items: CssDeclarationOrRuleList [
                    CssDeclarationWithSemicolon {
                        declaration: CssDeclaration {
                            property: CssComposesProperty {
                                name: CssIdentifier {
                                    value_token: IDENT@87..97 "composes" [Newline("\n"), Whitespace("\t")] [],
                                },
                                colon_token: COLON@97..99 ":" [] [Whitespace(" ")],
                                value: CssComposesPropertyValue {
                                    classes: CssComposesClassList [
                                        CssCustomIdentifier {
                                            value_token: IDENT@99..115 "globalClassName" [] [Whitespace(" ")],
                                        },
                                    ],
                                    specifier: CssComposesImportSpecifier {
                                        from_token: FROM_KW@115..120 "from" [] [Whitespace(" ")],
                                        source: missing (required),
                                    },
                                },
                            },
                            important: missing (optional),
                        },
                        semicolon_token: SEMICOLON@120..121 ";" [] [],
                    },
                ],
                r_curly_token: R_CURLY@121..123 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssClassSelector {
                            dot_token: DOT@123..126 "." [Newline("\n"), Newline("\n")] [],
                            name: CssCustomIdentifier {
                                value_token: IDENT@126..141 "otherClassName" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@141..142 "{" [] [],
                items: CssDeclarationOrRuleList [
                    CssDeclarationWithSemicolon {
                        declaration: CssDeclaration {
                            property: CssComposesProperty {
                                name: CssIdentifier {
                                    value_token: IDENT@142..152 "composes" [Newline("\n"), Whitespace("\t")] [],
                                },
                                colon_token: COLON@152..155 ":" [] [Whitespace("  ")],
                                value: CssComposesPropertyValue {
                                    classes: CssComposesClassList [],
                                    specifier: CssComposesImportSpecifier {
                                        from_token: FROM_KW@155..160 "from" [] [Whitespace(" ")],
                                        source: missing (required),
                                    },
                                },
                            },
                            important: missing (optional),
                        },
                        semicolon_token: SEMICOLON@160..161 ";" [] [],
                    },
                ],
                r_curly_token: R_CURLY@161..163 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssClassSelector {
                            dot_token: DOT@163..166 "." [Newline("\n"), Newline("\n")] [],
                            name: CssCustomIdentifier {
                                value_token: IDENT@166..181 "otherClassName" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@181..182 "{" [] [],
                items: CssDeclarationOrRuleList [
                    CssDeclarationWithSemicolon {
                        declaration: CssDeclaration {
                            property: CssComposesProperty {
                                name: CssIdentifier {
                                    value_token: IDENT@182..192 "composes" [Newline("\n"), Whitespace("\t")] [],
                                },
                                colon_token: COLON@192..195 ":" [] [Whitespace("  ")],
                                value: CssComposesPropertyValue {
                                    classes: CssComposesClassList [],
                                    specifier: CssComposesImportSpecifier {
                                        from_token: FROM_KW@195..200 "from" [] [Whitespace(" ")],
                                        source: CssIdentifier {
                                            value_token: IDENT@200..206 "global" [] [],
                                        },
                                    },
                                },
                            },
                            important: missing (optional),
                        },
                        semicolon_token: SEMICOLON@206..207 ";" [] [],
                    },
                ],
                r_curly_token: R_CURLY@207..209 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@209..210 "" [Newline("\n")] [],
}
```

## CST

```
0: CSS_ROOT@0..210
  0: (empty)
  1: CSS_RULE_LIST@0..209
    0: CSS_QUALIFIED_RULE@0..19
      0: CSS_SELECTOR_LIST@0..3
        0: CSS_COMPOUND_SELECTOR@0..3
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@0..3
            0: CSS_CLASS_SELECTOR@0..3
              0: DOT@0..1 "." [] []
              1: CSS_CUSTOM_IDENTIFIER@1..3
                0: IDENT@1..3 "a" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@3..19
        0: L_CURLY@3..4 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@4..17
          0: CSS_DECLARATION_WITH_SEMICOLON@4..17
            0: CSS_DECLARATION@4..16
              0: CSS_COMPOSES_PROPERTY@4..16
                0: CSS_IDENTIFIER@4..14
                  0: IDENT@4..14 "composes" [Newline("\n"), Whitespace("\t")] []
                1: COLON@14..16 ":" [] [Whitespace(" ")]
                2: CSS_COMPOSES_PROPERTY_VALUE@16..16
                  0: CSS_COMPOSES_CLASS_LIST@16..16
                  1: (empty)
              1: (empty)
            1: SEMICOLON@16..17 ";" [] []
        2: R_CURLY@17..19 "}" [Newline("\n")] []
    1: CSS_QUALIFIED_RULE@19..68
      0: CSS_SELECTOR_LIST@19..37
        0: CSS_COMPOUND_SELECTOR@19..37
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@19..37
            0: CSS_CLASS_SELECTOR@19..37
              0: DOT@19..22 "." [Newline("\n"), Newline("\n")] []
              1: CSS_CUSTOM_IDENTIFIER@22..37
                0: IDENT@22..37 "otherClassName" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@37..68
        0: L_CURLY@37..38 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@38..66
          0: CSS_DECLARATION_WITH_SEMICOLON@38..66
            0: CSS_DECLARATION@38..65
              0: CSS_COMPOSES_PROPERTY@38..65
                0: CSS_IDENTIFIER@38..48
                  0: IDENT@38..48 "composes" [Newline("\n"), Whitespace("\t")] []
                1: COLON@48..50 ":" [] [Whitespace(" ")]
                2: CSS_COMPOSES_PROPERTY_VALUE@50..65
                  0: CSS_COMPOSES_CLASS_LIST@50..60
                    0: CSS_CUSTOM_IDENTIFIER@50..60
                      0: IDENT@50..60 "className" [] [Whitespace(" ")]
                  1: CSS_COMPOSES_IMPORT_SPECIFIER@60..65
                    0: FROM_KW@60..65 "from" [] [Whitespace(" ")]
                    1: (empty)
              1: (empty)
            1: SEMICOLON@65..66 ";" [] []
        2: R_CURLY@66..68 "}" [Newline("\n")] []
    2: CSS_QUALIFIED_RULE@68..123
      0: CSS_SELECTOR_LIST@68..86
        0: CSS_COMPOUND_SELECTOR@68..86
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@68..86
            0: CSS_CLASS_SELECTOR@68..86
              0: DOT@68..71 "." [Newline("\n"), Newline("\n")] []
              1: CSS_CUSTOM_IDENTIFIER@71..86
                0: IDENT@71..86 "otherClassName" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@86..123
        0: L_CURLY@86..87 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@87..121
          0: CSS_DECLARATION_WITH_SEMICOLON@87..121
            0: CSS_DECLARATION@87..120
              0: CSS_COMPOSES_PROPERTY@87..120
                0: CSS_IDENTIFIER@87..97
                  0: IDENT@87..97 "composes" [Newline("\n"), Whitespace("\t")] []
                1: COLON@97..99 ":" [] [Whitespace(" ")]
                2: CSS_COMPOSES_PROPERTY_VALUE@99..120
                  0: CSS_COMPOSES_CLASS_LIST@99..115
                    0: CSS_CUSTOM_IDENTIFIER@99..115
                      0: IDENT@99..115 "globalClassName" [] [Whitespace(" ")]
                  1: CSS_COMPOSES_IMPORT_SPECIFIER@115..120
                    0: FROM_KW@115..120 "from" [] [Whitespace(" ")]
                    1: (empty)
              1: (empty)
            1: SEMICOLON@120..121 ";" [] []
        2: R_CURLY@121..123 "}" [Newline("\n")] []
    3: CSS_QUALIFIED_RULE@123..163
      0: CSS_SELECTOR_LIST@123..141
        0: CSS_COMPOUND_SELECTOR@123..141
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@123..141
            0: CSS_CLASS_SELECTOR@123..141
              0: DOT@123..126 "." [Newline("\n"), Newline("\n")] []
              1: CSS_CUSTOM_IDENTIFIER@126..141
                0: IDENT@126..141 "otherClassName" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@141..163
        0: L_CURLY@141..142 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@142..161
          0: CSS_DECLARATION_WITH_SEMICOLON@142..161
            0: CSS_DECLARATION@142..160
              0: CSS_COMPOSES_PROPERTY@142..160
                0: CSS_IDENTIFIER@142..152
                  0: IDENT@142..152 "composes" [Newline("\n"), Whitespace("\t")] []
                1: COLON@152..155 ":" [] [Whitespace("  ")]
                2: CSS_COMPOSES_PROPERTY_VALUE@155..160
                  0: CSS_COMPOSES_CLASS_LIST@155..155
                  1: CSS_COMPOSES_IMPORT_SPECIFIER@155..160
                    0: FROM_KW@155..160 "from" [] [Whitespace(" ")]
                    1: (empty)
              1: (empty)
            1: SEMICOLON@160..161 ";" [] []
        2: R_CURLY@161..163 "}" [Newline("\n")] []
    4: CSS_QUALIFIED_RULE@163..209
      0: CSS_SELECTOR_LIST@163..181
        0: CSS_COMPOUND_SELECTOR@163..181
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@163..181
            0: CSS_CLASS_SELECTOR@163..181
              0: DOT@163..166 "." [Newline("\n"), Newline("\n")] []
              1: CSS_CUSTOM_IDENTIFIER@166..181
                0: IDENT@166..181 "otherClassName" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@181..209
        0: L_CURLY@181..182 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@182..207
          0: CSS_DECLARATION_WITH_SEMICOLON@182..207
            0: CSS_DECLARATION@182..206
              0: CSS_COMPOSES_PROPERTY@182..206
                0: CSS_IDENTIFIER@182..192
                  0: IDENT@182..192 "composes" [Newline("\n"), Whitespace("\t")] []
                1: COLON@192..195 ":" [] [Whitespace("  ")]
                2: CSS_COMPOSES_PROPERTY_VALUE@195..206
                  0: CSS_COMPOSES_CLASS_LIST@195..195
                  1: CSS_COMPOSES_IMPORT_SPECIFIER@195..206
                    0: FROM_KW@195..200 "from" [] [Whitespace(" ")]
                    1: CSS_IDENTIFIER@200..206
                      0: IDENT@200..206 "global" [] []
              1: (empty)
            1: SEMICOLON@206..207 ";" [] []
        2: R_CURLY@207..209 "}" [Newline("\n")] []
  2: EOF@209..210 "" [Newline("\n")] []

```

## Diagnostics

```
composes_error_enabled.css:2:12 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a non-empty list of classes after `composes`.
  
    1 │ .a {
  > 2 │ 	composes: ;
      │ 	          ^
    3 │ }
    4 │ 
  
composes_error_enabled.css:6:27 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected value or character.
  
    5 │ .otherClassName {
  > 6 │ 	composes: className from ;
      │ 	                         ^
    7 │ }
    8 │ 
  
  i Expected one of:
  
  - <identifier>
  - <string>
  
composes_error_enabled.css:10:33 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected value or character.
  
     9 │ .otherClassName {
  > 10 │ 	composes: globalClassName from ;
       │ 	                               ^
    11 │ }
    12 │ 
  
  i Expected one of:
  
  - <identifier>
  - <string>
  
composes_error_enabled.css:14:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a non-empty list of classes after `composes`.
  
    13 │ .otherClassName {
  > 14 │ 	composes:  from ;
       │ 	           ^^^^
    15 │ }
    16 │ 
  
composes_error_enabled.css:14:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Unexpected value or character.
  
    13 │ .otherClassName {
  > 14 │ 	composes:  from ;
       │ 	                ^
    15 │ }
    16 │ 
  
  i Expected one of:
  
  - <identifier>
  - <string>
  
composes_error_enabled.css:18:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a non-empty list of classes after `composes`.
  
    17 │ .otherClassName {
  > 18 │ 	composes:  from global;
       │ 	           ^^^^
    19 │ }
    20 │ 
  
```
