---
source: crates/biome_formatter_test/src/snapshot_builder.rs
assertion_line: 211
info: ts/type/trailing-commas/none/type_arguments_trailing_commas.ts
---
# Input

```ts
type Foo = Bar<A,>;
type Foo = Bar<A, >;

type Foo = Bar<1, 2,>;
type Foo = Bar<1, 2, >;

type C1 = Bar<A, /* tail */>;
type C2 = Bar<1, 2, /* tail */>;

type M1 = Bar<
    A, // tail
>;
type M2 = Bar<
    1,
    2, // tail
>;

```


=============================

# Outputs

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: LF
Line width: 80
Quote style: Double Quotes
JSX quote style: Double Quotes
Quote properties: As needed
Trailing commas: All
Semicolons: Always
Arrow parentheses: Always
Bracket spacing: true
Bracket same line: false
Attribute Position: Auto
Expand lists: Auto
Operator linebreak: After
-----

```ts
type Foo = Bar<A>;
type Foo = Bar<A>;

type Foo = Bar<1, 2>;
type Foo = Bar<1, 2>;

type C1 = Bar<A /* tail */>;
type C2 = Bar<1, 2 /* tail */>;

type M1 = Bar<
	A // tail
>;
type M2 = Bar<
	1,
	2 // tail
>;
```

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: LF
Line width: 80
Quote style: Double Quotes
JSX quote style: Double Quotes
Quote properties: As needed
Trailing commas: None
Semicolons: Always
Arrow parentheses: Always
Bracket spacing: true
Bracket same line: false
Attribute Position: Auto
Expand lists: Auto
Operator linebreak: After
-----

```ts
type Foo = Bar<A>;
type Foo = Bar<A>;

type Foo = Bar<1, 2>;
type Foo = Bar<1, 2>;

type C1 = Bar<A /* tail */>;
type C2 = Bar<1, 2 /* tail */>;

type M1 = Bar<
	A // tail
>;
type M2 = Bar<
	1,
	2 // tail
>;
```
