---
source: crates/biome_formatter_test/src/snapshot_builder.rs
info: js/binary-expressions/in_instanceof.js
---

# Input

```js
!foo in bar;
(!foo in bar); 
!(foo in bar);
(!foo) in bar;

!foo instanceof Bar;
(!foo instanceof Bar);
!(foo instanceof Bar);
(!foo) instanceof Bar;

~foo in bar;
(~foo in bar); 
~(foo in bar);
(~foo) in bar;

~foo instanceof Bar;
(~foo instanceof Bar);
~(foo instanceof Bar);
(~foo) instanceof Bar;

+foo in bar;
(+foo in bar); 
+(foo in bar);
(+foo) in bar;

+foo instanceof Bar;
(+foo instanceof Bar);
+(foo instanceof Bar);
(+foo) instanceof Bar;

-foo in bar;
(-foo in bar); 
-(foo in bar);
(-foo) in bar;

-foo instanceof Bar;
(-foo instanceof Bar);
-(foo instanceof Bar);
(-foo) instanceof Bar;

void 0 in bar;
(void 0 in bar);
void (0 in bar);
(void 0) in bar;

void 0 instanceof bar;
(void 0 instanceof bar);
void (0 instanceof bar);
(void 0) instanceof bar;

delete 0 in bar;
(delete 0 in bar);
delete (0 in bar);
(delete 0) in bar;

delete 0 instanceof bar;
(delete 0 instanceof bar);
delete (0 instanceof bar);
(delete 0) instanceof bar;

typeof 0 in bar;
(typeof 0 in bar);
typeof (0 in bar);
(typeof 0) in bar;

typeof 0 instanceof bar;
(typeof 0 instanceof bar);
typeof (0 instanceof bar);
(typeof 0) instanceof bar;

++x instanceof bar; // not ambiguous, because ++(x instanceof bar) is obviously invalid

!!foo instanceof Bar;

```


# Prettier differences

```diff
--- Prettier
+++ Biome
@@ -1,73 +1,73 @@
-(!foo) in bar;
-(!foo) in bar;
+!foo in bar;
+!foo in bar;
 !(foo in bar);
-(!foo) in bar;
+!foo in bar;
 
-(!foo) instanceof Bar;
-(!foo) instanceof Bar;
+!foo instanceof Bar;
+!foo instanceof Bar;
 !(foo instanceof Bar);
-(!foo) instanceof Bar;
+!foo instanceof Bar;
 
-(~foo) in bar;
-(~foo) in bar;
+~foo in bar;
+~foo in bar;
 ~(foo in bar);
-(~foo) in bar;
+~foo in bar;
 
-(~foo) instanceof Bar;
-(~foo) instanceof Bar;
+~foo instanceof Bar;
+~foo instanceof Bar;
 ~(foo instanceof Bar);
-(~foo) instanceof Bar;
+~foo instanceof Bar;
 
-(+foo) in bar;
-(+foo) in bar;
++foo in bar;
++foo in bar;
 +(foo in bar);
-(+foo) in bar;
++foo in bar;
 
-(+foo) instanceof Bar;
-(+foo) instanceof Bar;
++foo instanceof Bar;
++foo instanceof Bar;
 +(foo instanceof Bar);
-(+foo) instanceof Bar;
++foo instanceof Bar;
 
-(-foo) in bar;
-(-foo) in bar;
+-foo in bar;
+-foo in bar;
 -(foo in bar);
-(-foo) in bar;
+-foo in bar;
 
-(-foo) instanceof Bar;
-(-foo) instanceof Bar;
+-foo instanceof Bar;
+-foo instanceof Bar;
 -(foo instanceof Bar);
-(-foo) instanceof Bar;
+-foo instanceof Bar;
 
-(void 0) in bar;
-(void 0) in bar;
+void 0 in bar;
+void 0 in bar;
 void (0 in bar);
-(void 0) in bar;
+void 0 in bar;
 
-(void 0) instanceof bar;
-(void 0) instanceof bar;
+void 0 instanceof bar;
+void 0 instanceof bar;
 void (0 instanceof bar);
-(void 0) instanceof bar;
+void 0 instanceof bar;
 
-(delete 0) in bar;
-(delete 0) in bar;
+delete 0 in bar;
+delete 0 in bar;
 delete (0 in bar);
-(delete 0) in bar;
+delete 0 in bar;
 
-(delete 0) instanceof bar;
-(delete 0) instanceof bar;
+delete 0 instanceof bar;
+delete 0 instanceof bar;
 delete (0 instanceof bar);
-(delete 0) instanceof bar;
+delete 0 instanceof bar;
 
-(typeof 0) in bar;
-(typeof 0) in bar;
+typeof 0 in bar;
+typeof 0 in bar;
 typeof (0 in bar);
-(typeof 0) in bar;
+typeof 0 in bar;
 
-(typeof 0) instanceof bar;
-(typeof 0) instanceof bar;
+typeof 0 instanceof bar;
+typeof 0 instanceof bar;
 typeof (0 instanceof bar);
-(typeof 0) instanceof bar;
+typeof 0 instanceof bar;
 
 ++x instanceof bar; // not ambiguous, because ++(x instanceof bar) is obviously invalid
 
-(!!foo) instanceof Bar;
+!!foo instanceof Bar;
```

# Output

```js
!foo in bar;
!foo in bar;
!(foo in bar);
!foo in bar;

!foo instanceof Bar;
!foo instanceof Bar;
!(foo instanceof Bar);
!foo instanceof Bar;

~foo in bar;
~foo in bar;
~(foo in bar);
~foo in bar;

~foo instanceof Bar;
~foo instanceof Bar;
~(foo instanceof Bar);
~foo instanceof Bar;

+foo in bar;
+foo in bar;
+(foo in bar);
+foo in bar;

+foo instanceof Bar;
+foo instanceof Bar;
+(foo instanceof Bar);
+foo instanceof Bar;

-foo in bar;
-foo in bar;
-(foo in bar);
-foo in bar;

-foo instanceof Bar;
-foo instanceof Bar;
-(foo instanceof Bar);
-foo instanceof Bar;

void 0 in bar;
void 0 in bar;
void (0 in bar);
void 0 in bar;

void 0 instanceof bar;
void 0 instanceof bar;
void (0 instanceof bar);
void 0 instanceof bar;

delete 0 in bar;
delete 0 in bar;
delete (0 in bar);
delete 0 in bar;

delete 0 instanceof bar;
delete 0 instanceof bar;
delete (0 instanceof bar);
delete 0 instanceof bar;

typeof 0 in bar;
typeof 0 in bar;
typeof (0 in bar);
typeof 0 in bar;

typeof 0 instanceof bar;
typeof 0 instanceof bar;
typeof (0 instanceof bar);
typeof 0 instanceof bar;

++x instanceof bar; // not ambiguous, because ++(x instanceof bar) is obviously invalid

!!foo instanceof Bar;
```

# Lines exceeding max width of 80 characters
```
   71: ++x instanceof bar; // not ambiguous, because ++(x instanceof bar) is obviously invalid
```


