---
source: crates/biome_formatter_test/src/snapshot_builder.rs
info: typescript/chain-expression/call-expression.ts
---
# Input

```ts
// Member expressions
(a?.b)!   ();
(a?.b!)   ();
(a!?.b)   ();
(a.b?.c)!   ();
(a.b?.c!)   ();
(a.b!?.c)   ();
(a!.b?.c)   ();
(a?.b.c)!   ();
(a?.b.c!)   ();
(a?.b!.c)   ();
(a!?.b.c)   ();
(a[b?.c])!   ();
(a[b?.c]!)   ();
(a[b?.c!])   ();
(a[b!?.c])   ();
((a?.b).c)!   ();
((a?.b).c!)   ();
// FIXME: ((a?.b!).c)   ();
((a!?.b).c)   ();
(a[b?.()])!   ();
(a[b?.()]!)   ();
(a[b?.()!])   ();
(a[b!?.()])   ();
(a![b?.()])   ();
((a?.b).c)!   ();
((a?.b).c!)   ();
// FIXME: ((a?.b)!.c)   ();
// FIXME: ((a?.b!).c)   ();
((a!?.b).c)   ();
((a?.()).b)!   ();
((a?.()).b!)   ();
((a?.())!.b)   ();
((a?.()!).b)   ();
((a!?.()).b)   ();

// Call expressions
(a?.())!   ();
(a?.()!)   ();
(a!?.())   ();
(a.b.c?.())!   ();
(a.b.c?.()!)   ();
(a.b.c!?.())   ();
(a.b?.c())!   ();
(a.b?.c()!)   ();
(a.b!?.c())   ();
(a?.b.c())!   ();
(a?.b.c()!)   ();
(a?.b!.c())   ();
(a(b?.c))!   ();
(a(b?.c)!)   ();
(a(b?.c!))   ();
((a?.b)())!   ();
((a?.b)()!)   ();
((a?.b)!())   ();
((a?.b!)())   ();
((a?.())())!   ();
((a?.())()!)   ();
((a?.())!())   ();
((a?.()!)())   ();
((a!?.())())   ();

// Not `.callee`
foo((a?.b)!)

```


# Prettier differences

```diff
--- Prettier
+++ Biome
@@ -8,7 +8,7 @@
 (a!.b?.c)();
 a?.b.c!();
 a?.b.c!();
-(a?.b!.c)();
+a?.b!.c();
 (a!?.b.c)();
 a[b?.c]!();
 a[b?.c]!();
@@ -30,8 +30,8 @@
 (a!?.b).c();
 (a?.()).b!();
 (a?.()).b!();
-(a?.())!.b();
-(a?.())!.b();
+a?.()!.b();
+a?.()!.b();
 (a!?.()).b();
 
 // Call expressions
@@ -46,7 +46,7 @@
 (a.b!?.c())();
 a?.b.c()!();
 a?.b.c()!();
-(a?.b!.c())();
+a?.b!.c()();
 a(b?.c)!();
 a(b?.c)!();
 a(b?.c!)();
```

# Output

```ts
// Member expressions
a?.b!();
a?.b!();
(a!?.b)();
a.b?.c!();
a.b?.c!();
(a.b!?.c)();
(a!.b?.c)();
a?.b.c!();
a?.b.c!();
a?.b!.c();
(a!?.b.c)();
a[b?.c]!();
a[b?.c]!();
a[b?.c!]();
a[b!?.c]();
(a?.b).c!();
(a?.b).c!();
// FIXME: ((a?.b!).c)   ();
(a!?.b).c();
a[b?.()]!();
a[b?.()]!();
a[b?.()!]();
a[b!?.()]();
a![b?.()]();
(a?.b).c!();
(a?.b).c!();
// FIXME: ((a?.b)!.c)   ();
// FIXME: ((a?.b!).c)   ();
(a!?.b).c();
(a?.()).b!();
(a?.()).b!();
a?.()!.b();
a?.()!.b();
(a!?.()).b();

// Call expressions
a?.()!();
a?.()!();
(a!?.())();
a.b.c?.()!();
a.b.c?.()!();
(a.b.c!?.())();
a.b?.c()!();
a.b?.c()!();
(a.b!?.c())();
a?.b.c()!();
a?.b.c()!();
a?.b!.c()();
a(b?.c)!();
a(b?.c)!();
a(b?.c!)();
(a?.b)()!();
(a?.b)()!();
a?.b!()();
a?.b!()();
(a?.())()!();
(a?.())()!();
a?.()!()();
a?.()!()();
(a!?.())()();

// Not `.callee`
foo(a?.b!);
```
