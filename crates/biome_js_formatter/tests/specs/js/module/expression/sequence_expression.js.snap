---
source: crates/biome_formatter_test/src/snapshot_builder.rs
info: js/module/expression/sequence_expression.js
---
# Input

```js
a,b

const f = () => (
    ____________first, ____________second, ____________third, ____________third, ____________third, ____________third, ____________third

);

(
    ____________first, ____________second, ____________third, ____________third, ____________third, ____________third, ____________third

)

function a() {
    return     ____________first, ____________second, ____________third, ____________third, ____________third, ____________third, ____________third
}

const object ={
    something: (
        ____________first, ____________second, ____________third, ____________third, ____________third, ____________third, ____________third
    )

}

a,
	// rome-ignore format: Test suppression comments
	[
		0,    1, 2
	], d;

aLongIdentifierName,
    aLongIdentifierName,
    aLongIdentifierName,
    aLongIdentifierName;

```


=============================

# Outputs

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: LF
Line width: 80
Quote style: Double Quotes
JSX quote style: Double Quotes
Quote properties: As needed
Trailing commas: All
Semicolons: Always
Arrow parentheses: Always
Bracket spacing: true
Bracket same line: false
Attribute Position: Auto
-----

```js
a, b;

const f = () => (
	____________first,
	____________second,
	____________third,
	____________third,
	____________third,
	____________third,
	____________third
);

____________first,
	____________second,
	____________third,
	____________third,
	____________third,
	____________third,
	____________third;

function a() {
	return (
		____________first,
		____________second,
		____________third,
		____________third,
		____________third,
		____________third,
		____________third
	);
}

const object = {
	something:
		(____________first,
		____________second,
		____________third,
		____________third,
		____________third,
		____________third,
		____________third),
};

a,
	// rome-ignore format: Test suppression comments
	[
		0,    1, 2
	],
	d;

aLongIdentifierName,
	aLongIdentifierName,
	aLongIdentifierName,
	aLongIdentifierName;
```
