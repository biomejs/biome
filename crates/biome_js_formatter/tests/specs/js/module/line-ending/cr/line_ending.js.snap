---
source: crates/biome_formatter_test/src/snapshot_builder.rs
info: js/module/line-ending/cr/line_ending.js
---
# Input

```js
// Original file in LF
// just some random code
export const env = createEnv({
  DISCORD_TOKEN: { type: 'string' },
  TOPGG_TOKEN: { type: 'string' },

  GUILD_LOGS: { type: 'string' },
  GLOBAL_DETECTOR_LOGS: { type: 'string' },
  TEST_GUILD: { type: 'string' },

  SUPPORT_INVITE: { type: 'string' },
  GAS_INVITE: { type: 'string' },

  DOCS_LINK: { type: 'string' },

  NODE_ENV: { type: 'string' },
});

```


=============================

# Outputs

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: LF
Line width: 80
Quote style: Double Quotes
JSX quote style: Double Quotes
Quote properties: As needed
Trailing comma: All
Semicolons: Always
Arrow parentheses: Always
Bracket spacing: true
Bracket same line: false
Attribute Position: Auto
-----

```js
// Original file in LF
// just some random code
export const env = createEnv({
	DISCORD_TOKEN: { type: "string" },
	TOPGG_TOKEN: { type: "string" },

	GUILD_LOGS: { type: "string" },
	GLOBAL_DETECTOR_LOGS: { type: "string" },
	TEST_GUILD: { type: "string" },

	SUPPORT_INVITE: { type: "string" },
	GAS_INVITE: { type: "string" },

	DOCS_LINK: { type: "string" },

	NODE_ENV: { type: "string" },
});
```

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: CR
Line width: 80
Quote style: Double Quotes
JSX quote style: Double Quotes
Quote properties: As needed
Trailing comma: All
Semicolons: Always
Arrow parentheses: Always
Bracket spacing: true
Bracket same line: false
Attribute Position: Auto
-----

```js
// Original file in LF<CR>
// just some random code<CR>
export const env = createEnv({<CR>
	DISCORD_TOKEN: { type: "string" },<CR>
	TOPGG_TOKEN: { type: "string" },<CR>
<CR>
	GUILD_LOGS: { type: "string" },<CR>
	GLOBAL_DETECTOR_LOGS: { type: "string" },<CR>
	TEST_GUILD: { type: "string" },<CR>
<CR>
	SUPPORT_INVITE: { type: "string" },<CR>
	GAS_INVITE: { type: "string" },<CR>
<CR>
	DOCS_LINK: { type: "string" },<CR>
<CR>
	NODE_ENV: { type: "string" },<CR>
});<CR>
```
