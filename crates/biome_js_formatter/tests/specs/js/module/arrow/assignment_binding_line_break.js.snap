---
source: crates/biome_formatter_test/src/snapshot_builder.rs
info: js/module/arrow/assignment_binding_line_break.js
---
# Input

```js
const foo = bar => `This is a string that's long enough to wrap and contains an interpolated value ${bar}
and then a newline`

const foo = bar => `This is a string that's long enough to wrap and contains an interpolated value ${bar} and then a newline`
```


=============================

# Outputs

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: LF
Line width: 80
Quote style: Double Quotes
JSX quote style: Double Quotes
Quote properties: As needed
Trailing comma: All
Semicolons: Always
Arrow parentheses: Always
Bracket spacing: true
Bracket same line: false
Attribute Position: Auto
-----

```js
const foo = (
	bar,
) => `This is a string that's long enough to wrap and contains an interpolated value ${bar}
and then a newline`;

const foo = (bar) =>
	`This is a string that's long enough to wrap and contains an interpolated value ${bar} and then a newline`;
```

# Lines exceeding max width of 80 characters
```
    3: ) => `This is a string that's long enough to wrap and contains an interpolated value ${bar}
    7: 	`This is a string that's long enough to wrap and contains an interpolated value ${bar} and then a newline`;
```

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: LF
Line width: 80
Quote style: Double Quotes
JSX quote style: Double Quotes
Quote properties: As needed
Trailing comma: All
Semicolons: Always
Arrow parentheses: As needed
Bracket spacing: true
Bracket same line: false
Attribute Position: Auto
-----

```js
const foo =
	bar => `This is a string that's long enough to wrap and contains an interpolated value ${bar}
and then a newline`;

const foo = bar =>
	`This is a string that's long enough to wrap and contains an interpolated value ${bar} and then a newline`;
```

# Lines exceeding max width of 80 characters
```
    2: 	bar => `This is a string that's long enough to wrap and contains an interpolated value ${bar}
    6: 	`This is a string that's long enough to wrap and contains an interpolated value ${bar} and then a newline`;
```
