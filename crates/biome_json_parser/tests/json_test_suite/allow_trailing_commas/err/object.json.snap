---
source: crates/biome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
{},

```


## AST

```
JsonRoot {
    bom_token: missing (optional),
    value: JsonArrayValue {
        l_brack_token: missing (required),
        elements: JsonArrayElementList [
            JsonObjectValue {
                l_curly_token: L_CURLY@0..1 "{" [] [],
                json_member_list: JsonMemberList [],
                r_curly_token: R_CURLY@1..2 "}" [] [],
            },
            missing separator,
            JsonBogusValue {
                items: [
                    COMMA@2..3 "," [] [],
                ],
            },
        ],
        r_brack_token: missing (required),
    },
    eof_token: EOF@3..4 "" [Newline("\n")] [],
}
```

## CST

```
0: JSON_ROOT@0..4
  0: (empty)
  1: JSON_ARRAY_VALUE@0..3
    0: (empty)
    1: JSON_ARRAY_ELEMENT_LIST@0..3
      0: JSON_OBJECT_VALUE@0..2
        0: L_CURLY@0..1 "{" [] []
        1: JSON_MEMBER_LIST@1..1
        2: R_CURLY@1..2 "}" [] []
      1: (empty)
      2: JSON_BOGUS_VALUE@2..3
        0: COMMA@2..3 "," [] []
    2: (empty)
  2: EOF@3..4 "" [Newline("\n")] []

```

## Diagnostics

```
object.json:1:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
  > 1 │ {},
      │   ^
    2 │ 
  
  i Use an array for a sequence of values: `[1, 2]`
  
```


