---
source: crates/biome_yaml_parser/tests/spec_test.rs
expression: snapshot
---
## Input
```yaml
- 20   
- "20"   # abc
- [50]    
    

```

## AST

```
YamlRoot {
    documents: YamlDocumentList [
        YamlDocument {
            bom_token: missing (optional),
            directives: YamlDirectiveList [],
            dashdashdash_token: missing (optional),
            node: YamlBlockSequence {
                sequence_start_token: SEQUENCE_START@0..0 "" [] [],
                properties: missing (optional),
                entries: YamlBlockSequenceEntryList [
                    YamlBlockSequenceEntry {
                        minus_token: DASH@0..2 "-" [] [Whitespace(" ")],
                        value: YamlFlowInBlockNode {
                            flow_start_token: FLOW_START@2..2 "" [] [],
                            flow: YamlFlowYamlNode {
                                properties: missing (optional),
                                content: YamlPlainScalar {
                                    value_token: PLAIN_LITERAL@2..7 "20   " [] [],
                                },
                            },
                            flow_end_token: FLOW_END@7..7 "" [] [],
                        },
                    },
                    YamlBlockSequenceEntry {
                        minus_token: DASH@7..10 "-" [Newline("\n")] [Whitespace(" ")],
                        value: YamlFlowInBlockNode {
                            flow_start_token: FLOW_START@10..10 "" [] [],
                            flow: YamlFlowJsonNode {
                                properties: missing (optional),
                                content: YamlDoubleQuotedScalar {
                                    value_token: DOUBLE_QUOTED_LITERAL@10..22 "\"20\"" [] [Whitespace("   "), Comments("# abc")],
                                },
                            },
                            flow_end_token: FLOW_END@22..22 "" [] [],
                        },
                    },
                    YamlBlockSequenceEntry {
                        minus_token: DASH@22..25 "-" [Newline("\n")] [Whitespace(" ")],
                        value: YamlFlowInBlockNode {
                            flow_start_token: FLOW_START@25..25 "" [] [],
                            flow: YamlFlowJsonNode {
                                properties: missing (optional),
                                content: YamlFlowSequence {
                                    l_brack_token: L_BRACK@25..26 "[" [] [],
                                    entries: YamlFlowSequenceEntryList [
                                        YamlFlowYamlNode {
                                            properties: missing (optional),
                                            content: YamlPlainScalar {
                                                value_token: PLAIN_LITERAL@26..28 "50" [] [],
                                            },
                                        },
                                    ],
                                    r_brack_token: R_BRACK@28..33 "]" [] [Whitespace("    ")],
                                },
                            },
                            flow_end_token: FLOW_END@33..33 "" [] [],
                        },
                    },
                ],
                sequence_end_token: SEQUENCE_END@33..33 "" [] [],
            },
            dotdotdot_token: missing (optional),
        },
    ],
    eof_token: EOF@33..39 "" [Newline("\n"), Whitespace("    "), Newline("\n")] [],
}
```

## CST

```
0: YAML_ROOT@0..39
  0: YAML_DOCUMENT_LIST@0..33
    0: YAML_DOCUMENT@0..33
      0: (empty)
      1: YAML_DIRECTIVE_LIST@0..0
      2: (empty)
      3: YAML_BLOCK_SEQUENCE@0..33
        0: SEQUENCE_START@0..0 "" [] []
        1: (empty)
        2: YAML_BLOCK_SEQUENCE_ENTRY_LIST@0..33
          0: YAML_BLOCK_SEQUENCE_ENTRY@0..7
            0: DASH@0..2 "-" [] [Whitespace(" ")]
            1: YAML_FLOW_IN_BLOCK_NODE@2..7
              0: FLOW_START@2..2 "" [] []
              1: YAML_FLOW_YAML_NODE@2..7
                0: (empty)
                1: YAML_PLAIN_SCALAR@2..7
                  0: PLAIN_LITERAL@2..7 "20   " [] []
              2: FLOW_END@7..7 "" [] []
          1: YAML_BLOCK_SEQUENCE_ENTRY@7..22
            0: DASH@7..10 "-" [Newline("\n")] [Whitespace(" ")]
            1: YAML_FLOW_IN_BLOCK_NODE@10..22
              0: FLOW_START@10..10 "" [] []
              1: YAML_FLOW_JSON_NODE@10..22
                0: (empty)
                1: YAML_DOUBLE_QUOTED_SCALAR@10..22
                  0: DOUBLE_QUOTED_LITERAL@10..22 "\"20\"" [] [Whitespace("   "), Comments("# abc")]
              2: FLOW_END@22..22 "" [] []
          2: YAML_BLOCK_SEQUENCE_ENTRY@22..33
            0: DASH@22..25 "-" [Newline("\n")] [Whitespace(" ")]
            1: YAML_FLOW_IN_BLOCK_NODE@25..33
              0: FLOW_START@25..25 "" [] []
              1: YAML_FLOW_JSON_NODE@25..33
                0: (empty)
                1: YAML_FLOW_SEQUENCE@25..33
                  0: L_BRACK@25..26 "[" [] []
                  1: YAML_FLOW_SEQUENCE_ENTRY_LIST@26..28
                    0: YAML_FLOW_YAML_NODE@26..28
                      0: (empty)
                      1: YAML_PLAIN_SCALAR@26..28
                        0: PLAIN_LITERAL@26..28 "50" [] []
                  2: R_BRACK@28..33 "]" [] [Whitespace("    ")]
              2: FLOW_END@33..33 "" [] []
        3: SEQUENCE_END@33..33 "" [] []
      4: (empty)
  1: EOF@33..39 "" [Newline("\n"), Whitespace("    "), Newline("\n")] []

```
