---
source: crates/biome_yaml_parser/tests/spec_test.rs
expression: snapshot
---
## Input
```yaml
a:
  plain # separated by
  aa: bb

```

## AST

```
YamlRoot {
    documents: YamlDocumentList [
        YamlDocument {
            bom_token: missing (optional),
            directives: YamlDirectiveList [],
            dashdashdash_token: missing (optional),
            node: YamlBlockMapping {
                mapping_start_token: MAPPING_START@0..0 "" [] [],
                properties: missing (optional),
                entries: YamlBlockMapEntryList [
                    YamlBlockMapImplicitEntry {
                        key: YamlFlowYamlNode {
                            properties: missing (optional),
                            content: YamlPlainScalar {
                                value_token: PLAIN_LITERAL@0..1 "a" [] [],
                            },
                        },
                        colon_token: COLON@1..2 ":" [] [],
                        value: YamlFlowInBlockNode {
                            flow_start_token: FLOW_START@2..5 "" [Newline("\n"), Whitespace("  ")] [],
                            flow: YamlFlowYamlNode {
                                properties: missing (optional),
                                content: YamlPlainScalar {
                                    value_token: PLAIN_LITERAL@5..25 "plain " [] [Comments("# separated by")],
                                },
                            },
                            flow_end_token: FLOW_END@25..25 "" [] [],
                        },
                    },
                    YamlBogusBlockMapEntry {
                        items: [
                            MAPPING_START@25..28 "" [Newline("\n"), Whitespace("  ")] [],
                            PLAIN_LITERAL@28..30 "aa" [] [],
                            COLON@30..32 ":" [] [Whitespace(" ")],
                            FLOW_START@32..32 "" [] [],
                            PLAIN_LITERAL@32..34 "bb" [] [],
                            FLOW_END@34..34 "" [] [],
                            MAPPING_END@34..34 "" [] [],
                        ],
                    },
                ],
                mapping_end_token: MAPPING_END@34..35 "" [Newline("\n")] [],
            },
            dotdotdot_token: missing (optional),
        },
    ],
    eof_token: EOF@35..35 "" [] [],
}
```

## CST

```
0: YAML_ROOT@0..35
  0: YAML_DOCUMENT_LIST@0..35
    0: YAML_DOCUMENT@0..35
      0: (empty)
      1: YAML_DIRECTIVE_LIST@0..0
      2: (empty)
      3: YAML_BLOCK_MAPPING@0..35
        0: MAPPING_START@0..0 "" [] []
        1: (empty)
        2: YAML_BLOCK_MAP_ENTRY_LIST@0..34
          0: YAML_BLOCK_MAP_IMPLICIT_ENTRY@0..25
            0: YAML_FLOW_YAML_NODE@0..1
              0: (empty)
              1: YAML_PLAIN_SCALAR@0..1
                0: PLAIN_LITERAL@0..1 "a" [] []
            1: COLON@1..2 ":" [] []
            2: YAML_FLOW_IN_BLOCK_NODE@2..25
              0: FLOW_START@2..5 "" [Newline("\n"), Whitespace("  ")] []
              1: YAML_FLOW_YAML_NODE@5..25
                0: (empty)
                1: YAML_PLAIN_SCALAR@5..25
                  0: PLAIN_LITERAL@5..25 "plain " [] [Comments("# separated by")]
              2: FLOW_END@25..25 "" [] []
          1: YAML_BOGUS_BLOCK_MAP_ENTRY@25..34
            0: MAPPING_START@25..28 "" [Newline("\n"), Whitespace("  ")] []
            1: PLAIN_LITERAL@28..30 "aa" [] []
            2: COLON@30..32 ":" [] [Whitespace(" ")]
            3: FLOW_START@32..32 "" [] []
            4: PLAIN_LITERAL@32..34 "bb" [] []
            5: FLOW_END@34..34 "" [] []
            6: MAPPING_END@34..34 "" [] []
        3: MAPPING_END@34..35 "" [Newline("\n")] []
      4: (empty)
  1: EOF@35..35 "" [] []

```

## Diagnostics

```
mapping_followed_plain.yaml:3:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a block mapping entry but instead found 'aa: bb'.
  
    1 │ a:
    2 │   plain # separated by
  > 3 │   aa: bb
      │   ^^^^^^
    4 │ 
  
  i Expected a block mapping entry here.
  
    1 │ a:
    2 │   plain # separated by
  > 3 │   aa: bb
      │   ^^^^^^
    4 │ 
  
```
