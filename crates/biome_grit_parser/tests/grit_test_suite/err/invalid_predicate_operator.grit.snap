---
source: crates/biome_grit_parser/tests/spec_test.rs
expression: snapshot
---
## Input
```grit
`var $x = [$numbers]` => `var firstPrimes = [$numbers]` where {
  $numbers + [ `2` ]
}

```

## AST

```
GritRoot {
    bom_token: missing (optional),
    version: missing (optional),
    language: missing (optional),
    definitions: GritDefinitionList [
        GritPatternWhere {
            pattern: GritRewrite {
                left: GritCodeSnippet {
                    source: GritBacktickSnippetLiteral {
                        value_token: GRIT_BACKTICK_SNIPPET@0..22 "`var $x = [$numbers]`" [] [Whitespace(" ")],
                    },
                },
                annotation: missing (optional),
                fat_arrow_token: FAT_ARROW@22..25 "=>" [] [Whitespace(" ")],
                right: GritCodeSnippet {
                    source: GritBacktickSnippetLiteral {
                        value_token: GRIT_BACKTICK_SNIPPET@25..56 "`var firstPrimes = [$numbers]`" [] [Whitespace(" ")],
                    },
                },
            },
            where_token: WHERE_KW@56..62 "where" [] [Whitespace(" ")],
            side_condition: GritPredicateAnd {
                and_token: missing (optional),
                l_curly_token: L_CURLY@62..63 "{" [] [],
                predicates: GritPredicateList [
                    GritBogusPredicate {
                        items: [
                            GritVariable {
                                value_token: GRIT_VARIABLE@63..75 "$numbers" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")],
                            },
                            PLUS@75..77 "+" [] [Whitespace(" ")],
                            GritList {
                                name: missing (optional),
                                l_brack_token: L_BRACK@77..79 "[" [] [Whitespace(" ")],
                                patterns: GritListPatternList [
                                    GritCodeSnippet {
                                        source: GritBacktickSnippetLiteral {
                                            value_token: GRIT_BACKTICK_SNIPPET@79..83 "`2`" [] [Whitespace(" ")],
                                        },
                                    },
                                ],
                                r_brack_token: R_BRACK@83..84 "]" [] [],
                            },
                        ],
                    },
                ],
                r_curly_token: R_CURLY@84..86 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@86..87 "" [Newline("\n")] [],
}
```

## CST

```
0: GRIT_ROOT@0..87
  0: (empty)
  1: (empty)
  2: (empty)
  3: GRIT_DEFINITION_LIST@0..86
    0: GRIT_PATTERN_WHERE@0..86
      0: GRIT_REWRITE@0..56
        0: GRIT_CODE_SNIPPET@0..22
          0: GRIT_BACKTICK_SNIPPET_LITERAL@0..22
            0: GRIT_BACKTICK_SNIPPET@0..22 "`var $x = [$numbers]`" [] [Whitespace(" ")]
        1: (empty)
        2: FAT_ARROW@22..25 "=>" [] [Whitespace(" ")]
        3: GRIT_CODE_SNIPPET@25..56
          0: GRIT_BACKTICK_SNIPPET_LITERAL@25..56
            0: GRIT_BACKTICK_SNIPPET@25..56 "`var firstPrimes = [$numbers]`" [] [Whitespace(" ")]
      1: WHERE_KW@56..62 "where" [] [Whitespace(" ")]
      2: GRIT_PREDICATE_AND@62..86
        0: (empty)
        1: L_CURLY@62..63 "{" [] []
        2: GRIT_PREDICATE_LIST@63..84
          0: GRIT_BOGUS_PREDICATE@63..84
            0: GRIT_VARIABLE@63..75
              0: GRIT_VARIABLE@63..75 "$numbers" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")]
            1: PLUS@75..77 "+" [] [Whitespace(" ")]
            2: GRIT_LIST@77..84
              0: (empty)
              1: L_BRACK@77..79 "[" [] [Whitespace(" ")]
              2: GRIT_LIST_PATTERN_LIST@79..83
                0: GRIT_CODE_SNIPPET@79..83
                  0: GRIT_BACKTICK_SNIPPET_LITERAL@79..83
                    0: GRIT_BACKTICK_SNIPPET@79..83 "`2`" [] [Whitespace(" ")]
              3: R_BRACK@83..84 "]" [] []
        3: R_CURLY@84..86 "}" [Newline("\n")] []
  4: EOF@86..87 "" [Newline("\n")] []

```

## Diagnostics

```
invalid_predicate_operator.grit:2:12 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected an operator valid inside predicates.
  
    1 │ `var $x = [$numbers]` => `var firstPrimes = [$numbers]` where {
  > 2 │   $numbers + [ `2` ]
      │            ^
    3 │ }
    4 │ 
  
  i Must be one of:
  
  - +=
  - =
  - ==
  - >
  - >=
  - <
  - <=
  - <:
  - !=
  - =>
  
```
