---
source: crates/biome_grit_parser/tests/spec_test.rs
expression: snapshot
---
## Input
```grit
`function $name() { $body }` where {
  $body <: contains bubble($name) `console.log($message)` => `console.warn($message, $name)`
}

```

## AST

```
GritRoot {
    bom_token: missing (optional),
    version: missing (optional),
    language: missing (optional),
    definitions: GritDefinitionList [
        GritPatternWhere {
            pattern: GritCodeSnippet {
                source: GritBacktickSnippetLiteral {
                    value_token: GRIT_BACKTICK_SNIPPET@0..29 "`function $name() { $body }`" [] [Whitespace(" ")],
                },
            },
            where_token: WHERE_KW@29..35 "where" [] [Whitespace(" ")],
            side_condition: GritPredicateAnd {
                and_token: missing (optional),
                l_curly_token: L_CURLY@35..36 "{" [] [],
                predicates: GritPredicateList [
                    GritPredicateMatch {
                        left: GritVariable {
                            value_token: GRIT_VARIABLE@36..45 "$body" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")],
                        },
                        match_token: MATCH@45..48 "<:" [] [Whitespace(" ")],
                        right: GritPatternContains {
                            contains_token: CONTAINS_KW@48..57 "contains" [] [Whitespace(" ")],
                            contains: GritBubble {
                                bubble_token: BUBBLE_KW@57..63 "bubble" [] [],
                                variables: GritBubbleScope {
                                    l_paren_token: L_PAREN@63..64 "(" [] [],
                                    variables: GritVariableList [
                                        GritVariable {
                                            value_token: GRIT_VARIABLE@64..69 "$name" [] [],
                                        },
                                    ],
                                    r_paren_token: R_PAREN@69..71 ")" [] [Whitespace(" ")],
                                },
                                pattern: GritRewrite {
                                    left: GritCodeSnippet {
                                        source: GritBacktickSnippetLiteral {
                                            value_token: GRIT_BACKTICK_SNIPPET@71..95 "`console.log($message)`" [] [Whitespace(" ")],
                                        },
                                    },
                                    annotation: missing (optional),
                                    fat_arrow_token: FAT_ARROW@95..98 "=>" [] [Whitespace(" ")],
                                    right: GritCodeSnippet {
                                        source: GritBacktickSnippetLiteral {
                                            value_token: GRIT_BACKTICK_SNIPPET@98..129 "`console.warn($message, $name)`" [] [],
                                        },
                                    },
                                },
                            },
                            until_clause: missing (optional),
                        },
                    },
                ],
                r_curly_token: R_CURLY@129..131 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@131..132 "" [Newline("\n")] [],
}
```

## CST

```
0: GRIT_ROOT@0..132
  0: (empty)
  1: (empty)
  2: (empty)
  3: GRIT_DEFINITION_LIST@0..131
    0: GRIT_PATTERN_WHERE@0..131
      0: GRIT_CODE_SNIPPET@0..29
        0: GRIT_BACKTICK_SNIPPET_LITERAL@0..29
          0: GRIT_BACKTICK_SNIPPET@0..29 "`function $name() { $body }`" [] [Whitespace(" ")]
      1: WHERE_KW@29..35 "where" [] [Whitespace(" ")]
      2: GRIT_PREDICATE_AND@35..131
        0: (empty)
        1: L_CURLY@35..36 "{" [] []
        2: GRIT_PREDICATE_LIST@36..129
          0: GRIT_PREDICATE_MATCH@36..129
            0: GRIT_VARIABLE@36..45
              0: GRIT_VARIABLE@36..45 "$body" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")]
            1: MATCH@45..48 "<:" [] [Whitespace(" ")]
            2: GRIT_PATTERN_CONTAINS@48..129
              0: CONTAINS_KW@48..57 "contains" [] [Whitespace(" ")]
              1: GRIT_BUBBLE@57..129
                0: BUBBLE_KW@57..63 "bubble" [] []
                1: GRIT_BUBBLE_SCOPE@63..71
                  0: L_PAREN@63..64 "(" [] []
                  1: GRIT_VARIABLE_LIST@64..69
                    0: GRIT_VARIABLE@64..69
                      0: GRIT_VARIABLE@64..69 "$name" [] []
                  2: R_PAREN@69..71 ")" [] [Whitespace(" ")]
                2: GRIT_REWRITE@71..129
                  0: GRIT_CODE_SNIPPET@71..95
                    0: GRIT_BACKTICK_SNIPPET_LITERAL@71..95
                      0: GRIT_BACKTICK_SNIPPET@71..95 "`console.log($message)`" [] [Whitespace(" ")]
                  1: (empty)
                  2: FAT_ARROW@95..98 "=>" [] [Whitespace(" ")]
                  3: GRIT_CODE_SNIPPET@98..129
                    0: GRIT_BACKTICK_SNIPPET_LITERAL@98..129
                      0: GRIT_BACKTICK_SNIPPET@98..129 "`console.warn($message, $name)`" [] []
              2: (empty)
        3: R_CURLY@129..131 "}" [Newline("\n")] []
  4: EOF@131..132 "" [Newline("\n")] []

```
