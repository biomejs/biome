---
source: crates/biome_grit_parser/tests/spec_test.rs
expression: snapshot
---
## Input
```grit
engine biome(0.1)
language js

`$test($_)` where {
    $test <: js"test.only" => js"test"
}

```

## AST

```
GritRoot {
    bom_token: missing (optional),
    version: GritVersion {
        engine_token: ENGINE_KW@0..7 "engine" [] [Whitespace(" ")],
        biome_token: BIOME_KW@7..12 "biome" [] [],
        l_paren_token: L_PAREN@12..13 "(" [] [],
        version: GritDoubleLiteral {
            value_token: GRIT_DOUBLE@13..16 "0.1" [] [],
        },
        r_paren_token: R_PAREN@16..17 ")" [] [],
    },
    language: GritLanguageDeclaration {
        language_token: LANGUAGE_KW@17..27 "language" [Newline("\n")] [Whitespace(" ")],
        name: GritLanguageName {
            language_kind: JS_KW@27..29 "js" [] [],
        },
        flavor: missing (optional),
        semicolon_token: missing (optional),
    },
    definitions: GritDefinitionList [
        GritPatternWhere {
            pattern: GritCodeSnippet {
                source: GritBacktickSnippetLiteral {
                    value_token: GRIT_BACKTICK_SNIPPET@29..43 "`$test($_)`" [Newline("\n"), Newline("\n")] [Whitespace(" ")],
                },
            },
            where_token: WHERE_KW@43..49 "where" [] [Whitespace(" ")],
            side_condition: GritPredicateAnd {
                and_token: missing (optional),
                l_curly_token: L_CURLY@49..50 "{" [] [],
                predicates: GritPredicateList [
                    GritPredicateMatch {
                        left: GritVariable {
                            value_token: GRIT_VARIABLE@50..61 "$test" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                        },
                        match_token: MATCH@61..64 "<:" [] [Whitespace(" ")],
                        right: GritRewrite {
                            left: GritCodeSnippet {
                                source: GritLanguageSpecificSnippet {
                                    language: GritLanguageName {
                                        language_kind: JS_KW@64..66 "js" [] [],
                                    },
                                    snippet_token: GRIT_STRING@66..78 "\"test.only\"" [] [Whitespace(" ")],
                                },
                            },
                            annotation: missing (optional),
                            fat_arrow_token: FAT_ARROW@78..81 "=>" [] [Whitespace(" ")],
                            right: GritCodeSnippet {
                                source: GritLanguageSpecificSnippet {
                                    language: GritLanguageName {
                                        language_kind: JS_KW@81..83 "js" [] [],
                                    },
                                    snippet_token: GRIT_STRING@83..89 "\"test\"" [] [],
                                },
                            },
                        },
                    },
                ],
                r_curly_token: R_CURLY@89..91 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@91..92 "" [Newline("\n")] [],
}
```

## CST

```
0: GRIT_ROOT@0..92
  0: (empty)
  1: GRIT_VERSION@0..17
    0: ENGINE_KW@0..7 "engine" [] [Whitespace(" ")]
    1: BIOME_KW@7..12 "biome" [] []
    2: L_PAREN@12..13 "(" [] []
    3: GRIT_DOUBLE_LITERAL@13..16
      0: GRIT_DOUBLE@13..16 "0.1" [] []
    4: R_PAREN@16..17 ")" [] []
  2: GRIT_LANGUAGE_DECLARATION@17..29
    0: LANGUAGE_KW@17..27 "language" [Newline("\n")] [Whitespace(" ")]
    1: GRIT_LANGUAGE_NAME@27..29
      0: JS_KW@27..29 "js" [] []
    2: (empty)
    3: (empty)
  3: GRIT_DEFINITION_LIST@29..91
    0: GRIT_PATTERN_WHERE@29..91
      0: GRIT_CODE_SNIPPET@29..43
        0: GRIT_BACKTICK_SNIPPET_LITERAL@29..43
          0: GRIT_BACKTICK_SNIPPET@29..43 "`$test($_)`" [Newline("\n"), Newline("\n")] [Whitespace(" ")]
      1: WHERE_KW@43..49 "where" [] [Whitespace(" ")]
      2: GRIT_PREDICATE_AND@49..91
        0: (empty)
        1: L_CURLY@49..50 "{" [] []
        2: GRIT_PREDICATE_LIST@50..89
          0: GRIT_PREDICATE_MATCH@50..89
            0: GRIT_VARIABLE@50..61
              0: GRIT_VARIABLE@50..61 "$test" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")]
            1: MATCH@61..64 "<:" [] [Whitespace(" ")]
            2: GRIT_REWRITE@64..89
              0: GRIT_CODE_SNIPPET@64..78
                0: GRIT_LANGUAGE_SPECIFIC_SNIPPET@64..78
                  0: GRIT_LANGUAGE_NAME@64..66
                    0: JS_KW@64..66 "js" [] []
                  1: GRIT_STRING@66..78 "\"test.only\"" [] [Whitespace(" ")]
              1: (empty)
              2: FAT_ARROW@78..81 "=>" [] [Whitespace(" ")]
              3: GRIT_CODE_SNIPPET@81..89
                0: GRIT_LANGUAGE_SPECIFIC_SNIPPET@81..89
                  0: GRIT_LANGUAGE_NAME@81..83
                    0: JS_KW@81..83 "js" [] []
                  1: GRIT_STRING@83..89 "\"test\"" [] []
        3: R_CURLY@89..91 "}" [Newline("\n")] []
  4: EOF@91..92 "" [Newline("\n")] []

```
