---
source: crates/biome_grit_parser/tests/spec_test.rs
expression: snapshot
---
## Input
```grit
`function $name ($args) { $body }` as $func where {
  $func => `const $name = ($args) => { $body }`,
  $args <: contains `apple` => `mango`
}

```

## AST

```
GritRoot {
    bom_token: missing (optional),
    version: missing (optional),
    language: missing (optional),
    definitions: GritDefinitionList [
        GritPatternWhere {
            pattern: GritPatternAs {
                pattern: GritCodeSnippet {
                    source: GritBacktickSnippetLiteral {
                        value_token: GRIT_BACKTICK_SNIPPET@0..35 "`function $name ($args) { $body }`" [] [Whitespace(" ")],
                    },
                },
                as_token: AS_KW@35..38 "as" [] [Whitespace(" ")],
                variable: GritVariable {
                    value_token: GRIT_VARIABLE@38..44 "$func" [] [Whitespace(" ")],
                },
            },
            where_token: WHERE_KW@44..50 "where" [] [Whitespace(" ")],
            side_condition: GritPredicateAnd {
                and_token: missing (optional),
                l_curly_token: L_CURLY@50..51 "{" [] [],
                predicates: GritPredicateList [
                    GritPredicateRewrite {
                        left: GritVariable {
                            value_token: GRIT_VARIABLE@51..60 "$func" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")],
                        },
                        annotation: missing (optional),
                        fat_arrow_token: FAT_ARROW@60..63 "=>" [] [Whitespace(" ")],
                        right: GritCodeSnippet {
                            source: GritBacktickSnippetLiteral {
                                value_token: GRIT_BACKTICK_SNIPPET@63..99 "`const $name = ($args) => { $body }`" [] [],
                            },
                        },
                    },
                    COMMA@99..100 "," [] [],
                    GritPredicateMatch {
                        left: GritVariable {
                            value_token: GRIT_VARIABLE@100..109 "$args" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")],
                        },
                        match_token: MATCH@109..112 "<:" [] [Whitespace(" ")],
                        right: GritPatternContains {
                            contains_token: CONTAINS_KW@112..121 "contains" [] [Whitespace(" ")],
                            contains: GritRewrite {
                                left: GritCodeSnippet {
                                    source: GritBacktickSnippetLiteral {
                                        value_token: GRIT_BACKTICK_SNIPPET@121..129 "`apple`" [] [Whitespace(" ")],
                                    },
                                },
                                annotation: missing (optional),
                                fat_arrow_token: FAT_ARROW@129..132 "=>" [] [Whitespace(" ")],
                                right: GritCodeSnippet {
                                    source: GritBacktickSnippetLiteral {
                                        value_token: GRIT_BACKTICK_SNIPPET@132..139 "`mango`" [] [],
                                    },
                                },
                            },
                            until_clause: missing (optional),
                        },
                    },
                ],
                r_curly_token: R_CURLY@139..141 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@141..142 "" [Newline("\n")] [],
}
```

## CST

```
0: GRIT_ROOT@0..142
  0: (empty)
  1: (empty)
  2: (empty)
  3: GRIT_DEFINITION_LIST@0..141
    0: GRIT_PATTERN_WHERE@0..141
      0: GRIT_PATTERN_AS@0..44
        0: GRIT_CODE_SNIPPET@0..35
          0: GRIT_BACKTICK_SNIPPET_LITERAL@0..35
            0: GRIT_BACKTICK_SNIPPET@0..35 "`function $name ($args) { $body }`" [] [Whitespace(" ")]
        1: AS_KW@35..38 "as" [] [Whitespace(" ")]
        2: GRIT_VARIABLE@38..44
          0: GRIT_VARIABLE@38..44 "$func" [] [Whitespace(" ")]
      1: WHERE_KW@44..50 "where" [] [Whitespace(" ")]
      2: GRIT_PREDICATE_AND@50..141
        0: (empty)
        1: L_CURLY@50..51 "{" [] []
        2: GRIT_PREDICATE_LIST@51..139
          0: GRIT_PREDICATE_REWRITE@51..99
            0: GRIT_VARIABLE@51..60
              0: GRIT_VARIABLE@51..60 "$func" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")]
            1: (empty)
            2: FAT_ARROW@60..63 "=>" [] [Whitespace(" ")]
            3: GRIT_CODE_SNIPPET@63..99
              0: GRIT_BACKTICK_SNIPPET_LITERAL@63..99
                0: GRIT_BACKTICK_SNIPPET@63..99 "`const $name = ($args) => { $body }`" [] []
          1: COMMA@99..100 "," [] []
          2: GRIT_PREDICATE_MATCH@100..139
            0: GRIT_VARIABLE@100..109
              0: GRIT_VARIABLE@100..109 "$args" [Newline("\n"), Whitespace("  ")] [Whitespace(" ")]
            1: MATCH@109..112 "<:" [] [Whitespace(" ")]
            2: GRIT_PATTERN_CONTAINS@112..139
              0: CONTAINS_KW@112..121 "contains" [] [Whitespace(" ")]
              1: GRIT_REWRITE@121..139
                0: GRIT_CODE_SNIPPET@121..129
                  0: GRIT_BACKTICK_SNIPPET_LITERAL@121..129
                    0: GRIT_BACKTICK_SNIPPET@121..129 "`apple`" [] [Whitespace(" ")]
                1: (empty)
                2: FAT_ARROW@129..132 "=>" [] [Whitespace(" ")]
                3: GRIT_CODE_SNIPPET@132..139
                  0: GRIT_BACKTICK_SNIPPET_LITERAL@132..139
                    0: GRIT_BACKTICK_SNIPPET@132..139 "`mango`" [] []
              2: (empty)
        3: R_CURLY@139..141 "}" [Newline("\n")] []
  4: EOF@141..142 "" [Newline("\n")] []

```
