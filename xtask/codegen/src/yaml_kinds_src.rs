use crate::kind_src::KindsSrc;

pub const YAML_KINDS_SRC: KindsSrc = KindsSrc {
    punct: &[
        (":", "COLON"),
        (",", "COMMA"),
        ("{", "L_CURLY"),
        ("}", "R_CURLY"),
        ("[", "L_BRACK"),
        ("]", "R_BRACK"),
        ("?", "QUESTION"),
        ("-", "DASH"),
        ("---", "DIRECTIVE_END"),
        ("...", "DOC_END"),
        // Reserved tokens
        ("`", "BACKTICK"),
        ("@", "AT"),
    ],
    keywords: &[],
    literals: &[
        "DIRECTIVE_LITERAL",
        "ANCHOR_PROPERTY_LITERAL",
        "TAG_PROPERTY_LITERAL",
        "ALIAS_LITERAL",
        "DOUBLE_QUOTED_LITERAL",
        "SINGLE_QUOTED_LITERAL",
        "PLAIN_LITERAL",
        "LITERAL_BLOCK_LITERAL",
        "FOLDED_BLOCK_LITERAL",
    ],
    tokens: &[
        "ERROR_TOKEN",
        "NEWLINE",
        "WHITESPACE",
        "INDENT",
        "DEDENT",
        "COMMENT",
    ],
    nodes: &[
        "YAML_STREAM",
        "YAML_DOCUMENT_LIST",
        "YAML_DOCUMENT",
        "YAML_DIRECTIVE_LIST",
        "YAML_DIRECTIVE",
        "YAML_FLOW_JSON_NODE",
        "YAML_FLOW_YAML_NODE",
        "YAML_FLOW_SEQUENCE",
        "YAML_FLOW_SEQUENCE_ENTRY_LIST",
        "YAML_FLOW_MAPPING",
        "YAML_FLOW_MAP_ENTRY_LIST",
        "YAML_FLOW_MAP_EXPLICIT_ENTRY",
        "YAML_FLOW_MAP_IMPLICIT_ENTRY",
        "YAML_ALIAS_NODE",
        "YAML_BLOCK_COLLECTION",
        "YAML_BLOCK_SEQUENCE",
        "YAML_BLOCK_SEQUENCE_ENTRY_LIST",
        "YAML_BLOCK_SEQUENCE_ENTRY",
        "YAML_BLOCK_MAPPING",
        "YAML_BLOCK_MAP_ENTRY_LIST",
        "YAML_BLOCK_MAP_EXPLICIT_ENTRY",
        "YAML_BLOCK_MAP_EXPLICIT_KEY",
        "YAML_BLOCK_MAP_EXPLICIT_VALUE",
        "YAML_BLOCK_MAP_IMPLICIT_ENTRY",
        "YAML_BLOCK_MAP_IMPLICIT_VALUE",
        "YAML_INDENTED_BLOCK",
        "YAML_COMPACT_MAPPING",
        "YAML_COMPACT_SEQUENCE",
        "YAML_SINGLE_QUOTED_SCALAR",
        "YAML_DOUBLE_QUOTED_SCALAR",
        "YAML_PLAIN_SCALAR",
        "YAML_LITERAL_SCALAR",
        "YAML_FOLDED_SCALAR",
        "YAML_PROPERTY_LIST",
        "YAML_ANCHOR_PROPERTY",
        "YAML_TAG_PROPERTY",
        // Bogus nodes
        "YAML_BOGUS",
        "YAML_BOGUS_NODE",
    ],
};
